{"version":3,"sources":["angular:jit:template:src\\app\\app.html","angular:jit:style:src\\app\\app.scss","node_modules/@angular/router/fesm2022/router2.mjs","node_modules/@angular/router/fesm2022/router_module.mjs","node_modules/@angular/router/fesm2022/router.mjs","node_modules/@angular/cdk/fesm2022/css-pixel-value.mjs","node_modules/@angular/cdk/fesm2022/coercion.mjs","node_modules/@angular/cdk/fesm2022/data-source.mjs","node_modules/@angular/cdk/fesm2022/recycle-view-repeater-strategy.mjs","node_modules/@angular/cdk/fesm2022/scrolling.mjs","node_modules/@angular/cdk/fesm2022/layout.mjs","node_modules/@angular/material/fesm2022/animation.mjs","node_modules/@angular/material/fesm2022/sidenav.mjs","node_modules/@angular/material/fesm2022/ripple.mjs","node_modules/@angular/material/fesm2022/structural-styles.mjs","node_modules/@angular/material/fesm2022/divider.mjs","node_modules/@angular/cdk/fesm2022/selection-model.mjs","node_modules/@angular/cdk/fesm2022/collections.mjs","node_modules/@angular/forms/fesm2022/forms.mjs","node_modules/@angular/material/fesm2022/pseudo-checkbox.mjs","node_modules/@angular/material/fesm2022/pseudo-checkbox-module.mjs","node_modules/@angular/material/fesm2022/ripple-module.mjs","node_modules/@angular/material/fesm2022/list.mjs","node_modules/@angular/material/fesm2022/ripple-loader.mjs","node_modules/@angular/material/fesm2022/icon-button.mjs","node_modules/@angular/material/fesm2022/button.mjs","node_modules/@angular/material/fesm2022/internal-form-field.mjs","node_modules/@angular/material/fesm2022/slide-toggle.mjs","node_modules/@angular/cdk/fesm2022/observers/private.mjs","node_modules/@angular/material/fesm2022/form-field2.mjs","node_modules/@angular/material/fesm2022/form-field-module.mjs","node_modules/@angular/material/fesm2022/form-field.mjs","node_modules/@angular/material/fesm2022/option.mjs","node_modules/@angular/cdk/fesm2022/portal.mjs","node_modules/@angular/cdk/fesm2022/overlay-module.mjs","node_modules/@angular/cdk/fesm2022/overlay.mjs","node_modules/@angular/material/fesm2022/error-options.mjs","node_modules/@angular/material/fesm2022/error-state.mjs","node_modules/@angular/material/fesm2022/option-module.mjs","node_modules/@angular/material/fesm2022/select-module.mjs","node_modules/@angular/material/fesm2022/select.mjs","node_modules/@angular/material/fesm2022/chips.mjs","src/app/app.ts","src/app/app.spec.ts"],"sourcesContent":["<div class=\"app-container\">\r\n  <!-- Nav Rail -->\r\n  <div class=\"nav-rail\">\r\n    <div class=\"nav-rail-top\">\r\n      <a class=\"logo\" href=\"/\">\r\n        <img src=\"https://vacapo.cc/wp-content/uploads/vacapo_logo_d.svg\" alt=\"Vacapo Logo\" class=\"logo-image\">\r\n      </a>\r\n      <button mat-icon-button (click)=\"toggleSidenav()\" [class.active]=\"showSidenav\" title=\"Filters\" aria-label=\"Open filters\">\r\n        <mat-icon>tune</mat-icon>\r\n      </button>\r\n      <div class=\"nav-rail-items\">\r\n        @for (item of navigationItems; track item.name) {\r\n          <a mat-icon-button [routerLink]=\"item.route\" class=\"nav-rail-item\" [title]=\"item.name\">\r\n            <mat-icon class=\"nav-rail__icon\">{{item.icon}}</mat-icon>\r\n          </a>\r\n        }\r\n      </div>\r\n    </div>\r\n    <div class=\"nav-rail-bottom\">\r\n      \r\n      <button mat-icon-button \r\n        (click)=\"toggleDarkMode()\" \r\n        class=\"theme-toggle\" \r\n        [title]=\"isDarkMode ? 'Turn on light mode' : 'Turn on dark mode'\">\r\n        <mat-icon>{{ isDarkMode ? 'dark_mode' : 'light_mode' }}</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <!-- Main Content Area -->\r\n  <mat-sidenav-container>\r\n    <mat-sidenav [opened]=\"showSidenav\"  position=\"start\" (backdropClick)=\"toggleSidenav()\" class=\"customize-sidenav\">\r\n      <div class=\"sidenav-header\">\r\n        <mat-icon>tune</mat-icon>\r\n        <h4>Customize</h4>\r\n        <span style=\"flex:1 1 auto\"></span>\r\n        <button mat-icon-button (click)=\"toggleSidenav()\" aria-label=\"Close filters\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- botstudio specific filters -->\r\n      <div *ngIf=\"currentRoute === '/botstudio'\" class=\"sidenav-section\">\r\n        <h5>Botstudio filters</h5>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Model</mat-label>\r\n          <mat-select>\r\n            <mat-option value=\"gpt-4\">gpt-4</mat-option>\r\n            <mat-option value=\"gpt-3.5\">gpt-3.5</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <h6>Tags</h6>\r\n        <mat-chip-listbox>\r\n          <mat-chip-option>assistant</mat-chip-option>\r\n          <mat-chip-option>assistant+voice</mat-chip-option>\r\n          <mat-chip-option>experimental</mat-chip-option>\r\n        </mat-chip-listbox>\r\n      </div>\r\n\r\n      <!-- inputs specific filters -->\r\n      <div *ngIf=\"currentRoute === '/inputs'\" class=\"sidenav-section\">\r\n        <h5>Inputs filters</h5>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Category</mat-label>\r\n          <mat-select>\r\n            <mat-option value=\"text\">Text</mat-option>\r\n            <mat-option value=\"media\">Media</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <h6>Style</h6>\r\n        <mat-chip-listbox>\r\n          <mat-chip-option>formal</mat-chip-option>\r\n          <mat-chip-option>informal</mat-chip-option>\r\n          <mat-chip-option selected>neutral</mat-chip-option>\r\n        </mat-chip-listbox>\r\n      </div>\r\n    </mat-sidenav>\r\n    \r\n    <mat-sidenav-content>\r\n      <app-header></app-header>\r\n      <div class=\"content-container\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n\r\n","/* src/app/app.scss */\n:host {\n  display: block;\n  height: 100vh;\n}\n:host .app-container {\n  display: flex;\n  height: 100%;\n}\n:host .nav-rail {\n  width: 72px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-right: 1px solid var(--mat-sidenav-container-divider-color);\n  background: var(--mat-sidenav-container-background-color);\n  background: var(--mat-sys-surface-dim);\n  background: var(--mat-sys-surface-container-lowest);\n  z-index: 2;\n}\n:host .nav-rail .nav-rail-top {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px 0;\n}\n:host .nav-rail .nav-rail-top .logo {\n  padding: 8px;\n  margin-bottom: 24px;\n}\n:host .nav-rail .nav-rail-top .logo .logo-image {\n  height: 24px;\n  width: auto;\n  max-width: 100%;\n}\n:host .nav-rail .nav-rail-top .nav-rail-items {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n:host .nav-rail .nav-rail-top .nav-rail-items .nav-rail-item {\n  width: 48px;\n  height: 48px;\n  margin: 0 12px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  color: var(--mat-sys-on-surface);\n  transition:\n    background-color 180ms ease,\n    color 180ms ease,\n    transform 120ms ease;\n  cursor: pointer;\n}\n:host .nav-rail .nav-rail-top .nav-rail-items .nav-rail-item mat-icon,\n:host .nav-rail .nav-rail-top .nav-rail-items .nav-rail-item .mat-icon {\n  font-size: 20px;\n  line-height: 1;\n  transition:\n    color 180ms ease,\n    opacity 180ms ease,\n    transform 120ms ease;\n  color: inherit;\n  opacity: 0.9;\n}\n:host .nav-rail .nav-rail-top .nav-rail-items .nav-rail-item:not(.active):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n  transform: translateY(-1px);\n}\n:host .nav-rail .nav-rail-top .nav-rail-items .nav-rail-item.active {\n  background-color: var(--mat-sys-primary-container);\n  color: var(--mat-sys-on-primary-container);\n}\n:host .nav-rail .nav-rail-top .nav-rail-items .nav-rail-item.active::before {\n  content: \"\";\n  position: absolute;\n  left: -12px;\n  width: 6px;\n  height: 28px;\n  border-radius: 4px;\n  background: var(--mat-sys-primary);\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.12);\n  transition: background-color 180ms ease, transform 160ms ease;\n}\n:host .nav-rail .nav-rail-top .nav-rail-items .nav-rail-item.theme-toggle:not(.active):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n:host .nav-rail .nav-rail-top .nav-rail-items .nav-rail-item.theme-toggle.active {\n  background-color: var(--mat-sys-primary-container);\n  color: var(--mat-sys-on-primary-container);\n}\n:host .nav-rail .nav-rail-bottom {\n  padding: 16px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n:host .nav-rail .nav-rail-bottom .theme-toggle {\n  width: 48px;\n  height: 48px;\n  margin: 0 12px;\n  border-radius: 16px;\n  transition: background-color 200ms ease;\n}\n:host .nav-rail .nav-rail-bottom .theme-toggle:hover {\n  background-color: var(--mat-sidenav-container-divider-color);\n}\n:host .nav-rail .nav-rail-bottom .theme-toggle mat-icon {\n  font-size: 20px;\n  height: 20px;\n  width: 20px;\n  opacity: 0.7;\n  transition: opacity 200ms ease;\n}\n:host .nav-rail .nav-rail-bottom .theme-toggle:hover mat-icon {\n  opacity: 1;\n}\n:host .nav-rail .nav-rail-bottom button.active {\n  background-color: var(--mat-sidenav-container-divider-color);\n}\n:host mat-sidenav-container {\n  flex: 1;\n  height: 100%;\n}\n:host mat-sidenav-container mat-sidenav {\n  width: 256px;\n  border-right: 1px solid var(--mat-sidenav-container-divider-color);\n}\n:host mat-sidenav-container mat-sidenav mat-nav-list {\n  padding-top: 16px;\n}\n:host mat-sidenav-container .customize-sidenav {\n  padding: 16px;\n  box-sizing: border-box;\n}\n:host mat-sidenav-container .customize-sidenav .sidenav-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 12px;\n}\n:host mat-sidenav-container .customize-sidenav .sidenav-header mat-icon {\n  font-size: 20px;\n}\n:host mat-sidenav-container .customize-sidenav .sidenav-header h4 {\n  margin: 0;\n  font-size: 1rem;\n}\n:host mat-sidenav-container .customize-sidenav .sidenav-section {\n  margin-bottom: 16px;\n}\n:host mat-sidenav-container .customize-sidenav .sidenav-section h5 {\n  margin: 8px 0;\n}\n:host mat-sidenav-container .customize-sidenav .sidenav-section h6 {\n  margin: 6px 0;\n  font-weight: 500;\n}\n:host mat-sidenav-container .content-container {\n  padding: 24px;\n}\n/*# sourceMappingURL=app.css.map */\n","/**\n * @license Angular v20.2.1\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT, Location } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ɵisPromise as _isPromise, ɵRuntimeError as _RuntimeError, Injectable, ɵisNgModule as _isNgModule, isStandalone, createEnvironmentInjector, InjectionToken, EventEmitter, input, inject, ViewContainerRef, ChangeDetectorRef, Directive, Input, Output, reflectComponentType, Component, ɵisInjectable as _isInjectable, runInInjectionContext, Compiler, NgModuleFactory, ɵresolveComponentResources as _resolveComponentResources, afterNextRender, signal, EnvironmentInjector, DestroyRef, untracked, ɵConsole as _Console, ɵPendingTasksInternal as _PendingTasksInternal, ɵINTERNAL_APPLICATION_ERROR_HANDLER as _INTERNAL_APPLICATION_ERROR_HANDLER } from '@angular/core';\nimport { isObservable, from, of, BehaviorSubject, combineLatest, EmptyError, concat, defer, pipe, throwError, EMPTY, ConnectableObservable, Subject, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, startWith, filter, mergeMap, first, concatMap, tap, catchError, scan, defaultIfEmpty, last as last$1, takeLast, finalize, refCount, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\n\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nconst PRIMARY_OUTLET = 'primary';\n/**\n * A private symbol used to store the value of `Route.title` inside the `Route.data` if it is a\n * static string or `Route.resolve` if anything else. This allows us to reuse the existing route\n * data/resolvers to support the title feature without new instrumentation in the `Router` pipeline.\n */\nconst RouteTitleKey = /* @__PURE__ */ Symbol('RouteTitle');\nclass ParamsAsMap {\n    params;\n    constructor(params) {\n        this.params = params || {};\n    }\n    has(name) {\n        return Object.prototype.hasOwnProperty.call(this.params, name);\n    }\n    get(name) {\n        if (this.has(name)) {\n            const v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    }\n    getAll(name) {\n        if (this.has(name)) {\n            const v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    }\n    get keys() {\n        return Object.keys(this.params);\n    }\n}\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\n/**\n * Matches the route configuration (`route`) against the actual URL (`segments`).\n *\n * When no matcher is defined on a `Route`, this is the matcher used by the Router by default.\n *\n * @param segments The remaining unmatched segments in the current navigation\n * @param segmentGroup The current segment group being matched\n * @param route The `Route` to match against.\n *\n * @see {@link UrlMatchResult}\n * @see {@link Route}\n *\n * @returns The resulting match information or `null` if the `route` should not match.\n * @publicApi\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    const parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    const posParams = {};\n    // Check each config part against the actual URL\n    for (let index = 0; index < parts.length; index++) {\n        const part = parts[index];\n        const segment = segments[index];\n        const isParameter = part[0] === ':';\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams };\n}\n\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    // While `undefined` should never be possible, it would sometimes be the case in IE 11\n    // and pre-chromium Edge. The check below accounts for this edge case.\n    const k1 = a ? getDataKeys(a) : undefined;\n    const k2 = b ? getDataKeys(b) : undefined;\n    if (!k1 || !k2 || k1.length != k2.length) {\n        return false;\n    }\n    let key;\n    for (let i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (!equalArraysOrString(a[key], b[key])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the keys of an object, including `symbol` keys.\n */\nfunction getDataKeys(obj) {\n    return [...Object.keys(obj), ...Object.getOwnPropertySymbols(obj)];\n}\n/**\n * Test equality for arrays of strings or a string.\n */\nfunction equalArraysOrString(a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length)\n            return false;\n        const aSorted = [...a].sort();\n        const bSorted = [...b].sort();\n        return aSorted.every((val, index) => bSorted[index] === val);\n    }\n    else {\n        return a === b;\n    }\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\nfunction wrapIntoObservable(value) {\n    if (isObservable(value)) {\n        return value;\n    }\n    if (_isPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return from(Promise.resolve(value));\n    }\n    return of(value);\n}\n\nconst pathCompareMap = {\n    'exact': equalSegmentGroups,\n    'subset': containsSegmentGroup,\n};\nconst paramCompareMap = {\n    'exact': equalParams,\n    'subset': containsParams,\n    'ignored': () => true,\n};\nfunction containsTree(container, containee, options) {\n    return (pathCompareMap[options.paths](container.root, containee.root, options.matrixParams) &&\n        paramCompareMap[options.queryParams](container.queryParams, containee.queryParams) &&\n        !(options.fragment === 'exact' && container.fragment !== containee.fragment));\n}\nfunction equalParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee, matrixParams) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (!matrixParamsMatch(container.segments, containee.segments, matrixParams)) {\n        return false;\n    }\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (const c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c], matrixParams))\n            return false;\n    }\n    return true;\n}\nfunction containsParams(container, containee) {\n    return (Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every((key) => equalArraysOrString(container[key], containee[key])));\n}\nfunction containsSegmentGroup(container, containee, matrixParams) {\n    return containsSegmentGroupHelper(container, containee, containee.segments, matrixParams);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths, matrixParams) {\n    if (container.segments.length > containeePaths.length) {\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        if (!matrixParamsMatch(current, containeePaths, matrixParams))\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        if (!matrixParamsMatch(container.segments, containeePaths, matrixParams))\n            return false;\n        for (const c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c], matrixParams)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        const current = containeePaths.slice(0, container.segments.length);\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!matrixParamsMatch(container.segments, current, matrixParams))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next, matrixParams);\n    }\n}\nfunction matrixParamsMatch(containerPaths, containeePaths, options) {\n    return containeePaths.every((containeeSegment, i) => {\n        return paramCompareMap[options](containerPaths[i].parameters, containeeSegment.parameters);\n    });\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlTree {\n    root;\n    queryParams;\n    fragment;\n    /** @internal */\n    _queryParamMap;\n    constructor(\n    /** The root segment group of the URL tree */\n    root = new UrlSegmentGroup([], {}), \n    /** The query params of the URL */\n    queryParams = {}, \n    /** The fragment of the URL */\n    fragment = null) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (root.segments.length > 0) {\n                throw new _RuntimeError(4015 /* RuntimeErrorCode.INVALID_ROOT_URL_SEGMENT */, 'The root `UrlSegmentGroup` should not contain `segments`. ' +\n                    'Instead, these segments belong in the `children` so they can be associated with a named outlet.');\n            }\n        }\n    }\n    get queryParamMap() {\n        this._queryParamMap ??= convertToParamMap(this.queryParams);\n        return this._queryParamMap;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return DEFAULT_SERIALIZER.serialize(this);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nclass UrlSegmentGroup {\n    segments;\n    children;\n    /** The parent node in the url tree */\n    parent = null;\n    constructor(\n    /** The URL segments of this group. See `UrlSegment` for more information */\n    segments, \n    /** The list of children of this group */\n    children) {\n        this.segments = segments;\n        this.children = children;\n        Object.values(children).forEach((v) => (v.parent = this));\n    }\n    /** Whether the segment has child segments */\n    hasChildren() {\n        return this.numberOfChildren > 0;\n    }\n    /** Number of child segments */\n    get numberOfChildren() {\n        return Object.keys(this.children).length;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return serializePaths(this);\n    }\n}\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlSegment {\n    path;\n    parameters;\n    /** @internal */\n    _parameterMap;\n    constructor(\n    /** The path part of a URL segment */\n    path, \n    /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    get parameterMap() {\n        this._parameterMap ??= convertToParamMap(this.parameters);\n        return this._parameterMap;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return serializePath(this);\n    }\n}\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every((a, i) => a.path === bs[i].path);\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    let res = [];\n    Object.entries(segment.children).forEach(([childOutlet, child]) => {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    Object.entries(segment.children).forEach(([childOutlet, child]) => {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nclass UrlSerializer {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UrlSerializer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UrlSerializer, providedIn: 'root', useFactory: () => new DefaultUrlSerializer() });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UrlSerializer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: () => new DefaultUrlSerializer() }]\n        }] });\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nclass DefaultUrlSerializer {\n    /** Parses a url into a `UrlTree` */\n    parse(url) {\n        const p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    }\n    /** Converts a `UrlTree` into a url */\n    serialize(tree) {\n        const segment = `/${serializeSegment(tree.root, true)}`;\n        const query = serializeQueryParams(tree.queryParams);\n        const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment(tree.fragment)}` : '';\n        return `${segment}${query}${fragment}`;\n    }\n}\nconst DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map((p) => serializePath(p)).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        const primary = segment.children[PRIMARY_OUTLET]\n            ? serializeSegment(segment.children[PRIMARY_OUTLET], false)\n            : '';\n        const children = [];\n        Object.entries(segment.children).forEach(([k, v]) => {\n            if (k !== PRIMARY_OUTLET) {\n                children.push(`${k}:${serializeSegment(v, false)}`);\n            }\n        });\n        return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n    }\n    else {\n        const children = mapChildrenIntoArray(segment, (v, k) => {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [`${k}:${serializeSegment(v, false)}`];\n        });\n        // use no parenthesis if the only child is a primary outlet route\n        if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n            return `${serializePaths(segment)}/${children[0]}`;\n        }\n        return `${serializePaths(segment)}/(${children.join('//')})`;\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\nfunction serializeMatrixParams(params) {\n    return Object.entries(params)\n        .map(([key, value]) => `;${encodeUriSegment(key)}=${encodeUriSegment(value)}`)\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    const strParams = Object.entries(params)\n        .map(([name, value]) => {\n        return Array.isArray(value)\n            ? value.map((v) => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&')\n            : `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n    })\n        .filter((s) => s);\n    return strParams.length ? `?${strParams.join('&')}` : '';\n}\nconst SEGMENT_RE = /^[^\\/()?;#]+/;\nfunction matchSegments(str) {\n    const match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nconst MATRIX_PARAM_SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchMatrixKeySegments(str) {\n    const match = str.match(MATRIX_PARAM_SEGMENT_RE);\n    return match ? match[0] : '';\n}\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    const match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nconst QUERY_PARAM_VALUE_RE = /^[^&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    const match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nclass UrlParser {\n    url;\n    remaining;\n    constructor(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    parseRootSegment() {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    }\n    parseQueryParams() {\n        const params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    }\n    parseFragment() {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    }\n    parseChildren() {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        const segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        let children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        let res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    }\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    parseSegment() {\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new _RuntimeError(4009 /* RuntimeErrorCode.EMPTY_PATH_WITH_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    }\n    parseMatrixParams() {\n        const params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    }\n    parseParam(params) {\n        const key = matchMatrixKeySegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    }\n    // Parse a single query parameter `name[=value]`\n    parseQueryParam(params) {\n        const key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        const decodedKey = decodeQuery(key);\n        const decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            let currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    }\n    // parse `(a/b//outlet_name:c/d)`\n    parseParens(allowPrimary) {\n        const segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            const path = matchSegments(this.remaining);\n            const next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new _RuntimeError(4010 /* RuntimeErrorCode.UNPARSABLE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot parse url '${this.url}'`);\n            }\n            let outletName = undefined;\n            if (path.indexOf(':') > -1) {\n                outletName = path.slice(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            const children = this.parseChildren();\n            segments[outletName] =\n                Object.keys(children).length === 1\n                    ? children[PRIMARY_OUTLET]\n                    : new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    }\n    peekStartsWith(str) {\n        return this.remaining.startsWith(str);\n    }\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    consumeOptional(str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    }\n    capture(str) {\n        if (!this.consumeOptional(str)) {\n            throw new _RuntimeError(4011 /* RuntimeErrorCode.UNEXPECTED_VALUE_IN_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Expected \"${str}\".`);\n        }\n    }\n}\nfunction createRoot(rootCandidate) {\n    return rootCandidate.segments.length > 0\n        ? new UrlSegmentGroup([], { [PRIMARY_OUTLET]: rootCandidate })\n        : rootCandidate;\n}\n/**\n * Recursively\n * - merges primary segment children into their parents\n * - drops empty children (those which have no segments and no children themselves). This latter\n * prevents serializing a group into something like `/a(aux:)`, where `aux` is an empty child\n * segment.\n * - merges named outlets without a primary segment sibling into the children. This prevents\n * serializing a URL like `//(a:a)(b:b) instead of `/(a:a//b:b)` when the aux b route lives on the\n * root but the `a` route lives under an empty path primary route.\n */\nfunction squashSegmentGroup(segmentGroup) {\n    const newChildren = {};\n    for (const [childOutlet, child] of Object.entries(segmentGroup.children)) {\n        const childCandidate = squashSegmentGroup(child);\n        // moves named children in an empty path primary child into this group\n        if (childOutlet === PRIMARY_OUTLET &&\n            childCandidate.segments.length === 0 &&\n            childCandidate.hasChildren()) {\n            for (const [grandChildOutlet, grandChild] of Object.entries(childCandidate.children)) {\n                newChildren[grandChildOutlet] = grandChild;\n            }\n        } // don't add empty children\n        else if (childCandidate.segments.length > 0 || childCandidate.hasChildren()) {\n            newChildren[childOutlet] = childCandidate;\n        }\n    }\n    const s = new UrlSegmentGroup(segmentGroup.segments, newChildren);\n    return mergeTrivialChildren(s);\n}\n/**\n * When possible, merges the primary outlet child into the parent `UrlSegmentGroup`.\n *\n * When a segment group has only one child which is a primary outlet, merges that child into the\n * parent. That is, the child segment group's segments are merged into the `s` and the child's\n * children become the children of `s`. Think of this like a 'squash', merging the child segment\n * group into the parent.\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        const c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction isUrlTree(v) {\n    return v instanceof UrlTree;\n}\n\n/**\n * Creates a `UrlTree` relative to an `ActivatedRouteSnapshot`.\n *\n * @publicApi\n *\n *\n * @param relativeTo The `ActivatedRouteSnapshot` to apply the commands to\n * @param commands An array of URL fragments with which to construct the new URL tree.\n * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n * segments, followed by the parameters for each segment.\n * The fragments are applied to the one provided in the `relativeTo` parameter.\n * @param queryParams The query parameters for the `UrlTree`. `null` if the `UrlTree` does not have\n *     any query parameters.\n * @param fragment The fragment for the `UrlTree`. `null` if the `UrlTree` does not have a fragment.\n *\n * @usageNotes\n *\n * ```ts\n * // create /team/33/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, 'user', 11]);\n *\n * // create /team/33;expand=true/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {expand: true}, 'user', 11]);\n *\n * // you can collapse static segments like this (this works only with the first passed-in value):\n * createUrlTreeFromSnapshot(snapshot, ['/team/33/user', userId]);\n *\n * // If the first segment can contain slashes, and you do not want the router to split it,\n * // you can do the following:\n * createUrlTreeFromSnapshot(snapshot, [{segmentPath: '/one/two'}]);\n *\n * // create /team/33/(user/11//right:chat)\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right:\n * 'chat'}}], null, null);\n *\n * // remove the right secondary node\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n *\n * // For the examples below, assume the current URL is for the `/team/33/user/11` and the\n * `ActivatedRouteSnapshot` points to `user/11`:\n *\n * // navigate to /team/33/user/11/details\n * createUrlTreeFromSnapshot(snapshot, ['details']);\n *\n * // navigate to /team/33/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../22']);\n *\n * // navigate to /team/44/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../../team/44/user/22']);\n * ```\n */\nfunction createUrlTreeFromSnapshot(relativeTo, commands, queryParams = null, fragment = null) {\n    const relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeTo);\n    return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, queryParams, fragment);\n}\nfunction createSegmentGroupFromRoute(route) {\n    let targetGroup;\n    function createSegmentGroupFromRouteRecursive(currentRoute) {\n        const childOutlets = {};\n        for (const childSnapshot of currentRoute.children) {\n            const root = createSegmentGroupFromRouteRecursive(childSnapshot);\n            childOutlets[childSnapshot.outlet] = root;\n        }\n        const segmentGroup = new UrlSegmentGroup(currentRoute.url, childOutlets);\n        if (currentRoute === route) {\n            targetGroup = segmentGroup;\n        }\n        return segmentGroup;\n    }\n    const rootCandidate = createSegmentGroupFromRouteRecursive(route.root);\n    const rootSegmentGroup = createRoot(rootCandidate);\n    return targetGroup ?? rootSegmentGroup;\n}\nfunction createUrlTreeFromSegmentGroup(relativeTo, commands, queryParams, fragment) {\n    let root = relativeTo;\n    while (root.parent) {\n        root = root.parent;\n    }\n    // There are no commands so the `UrlTree` goes to the same path as the one created from the\n    // `UrlSegmentGroup`. All we need to do is update the `queryParams` and `fragment` without\n    // applying any other logic.\n    if (commands.length === 0) {\n        return tree(root, root, root, queryParams, fragment);\n    }\n    const nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(root, root, new UrlSegmentGroup([], {}), queryParams, fragment);\n    }\n    const position = findStartingPositionForTargetGroup(nav, root, relativeTo);\n    const newSegmentGroup = position.processChildren\n        ? updateSegmentGroupChildren(position.segmentGroup, position.index, nav.commands)\n        : updateSegmentGroup(position.segmentGroup, position.index, nav.commands);\n    return tree(root, position.segmentGroup, newSegmentGroup, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * Determines if a given command has an `outlets` map. When we encounter a command\n * with an outlets k/v map, we need to apply each outlet individually to the existing segment.\n */\nfunction isCommandWithOutlets(command) {\n    return typeof command === 'object' && command != null && command.outlets;\n}\nfunction tree(oldRoot, oldSegmentGroup, newSegmentGroup, queryParams, fragment) {\n    let qp = {};\n    if (queryParams) {\n        Object.entries(queryParams).forEach(([name, value]) => {\n            qp[name] = Array.isArray(value) ? value.map((v) => `${v}`) : `${value}`;\n        });\n    }\n    let rootCandidate;\n    if (oldRoot === oldSegmentGroup) {\n        rootCandidate = newSegmentGroup;\n    }\n    else {\n        rootCandidate = replaceSegment(oldRoot, oldSegmentGroup, newSegmentGroup);\n    }\n    const newRoot = createRoot(squashSegmentGroup(rootCandidate));\n    return new UrlTree(newRoot, qp, fragment);\n}\n/**\n * Replaces the `oldSegment` which is located in some child of the `current` with the `newSegment`.\n * This also has the effect of creating new `UrlSegmentGroup` copies to update references. This\n * shouldn't be necessary but the fallback logic for an invalid ActivatedRoute in the creation uses\n * the Router's current url tree. If we don't create new segment groups, we end up modifying that\n * value.\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    const children = {};\n    Object.entries(current.children).forEach(([outletName, c]) => {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n    isAbsolute;\n    numberOfDoubleDots;\n    commands;\n    constructor(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new _RuntimeError(4003 /* RuntimeErrorCode.ROOT_SEGMENT_MATRIX_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                'Root segment cannot have matrix parameters');\n        }\n        const cmdWithOutlet = commands.find(isCommandWithOutlets);\n        if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n            throw new _RuntimeError(4004 /* RuntimeErrorCode.MISPLACED_OUTLETS_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                '{outlets:{}} has to be the last command');\n        }\n    }\n    toRoot() {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    }\n}\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    let numberOfDoubleDots = 0;\n    let isAbsolute = false;\n    const res = commands.reduce((res, cmd, cmdIdx) => {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                const outlets = {};\n                Object.entries(cmd.outlets).forEach(([name, commands]) => {\n                    outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return [...res, { outlets }];\n            }\n            if (cmd.segmentPath) {\n                return [...res, cmd.segmentPath];\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return [...res, cmd];\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach((urlPart, partIndex) => {\n                if (partIndex == 0 && urlPart === '.') ;\n                else if (partIndex == 0 && urlPart === '') {\n                    //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return [...res, cmd];\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n    segmentGroup;\n    processChildren;\n    index;\n    constructor(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n}\nfunction findStartingPositionForTargetGroup(nav, root, target) {\n    if (nav.isAbsolute) {\n        return new Position(root, true, 0);\n    }\n    if (!target) {\n        // `NaN` is used only to maintain backwards compatibility with incorrectly mocked\n        // `ActivatedRouteSnapshot` in tests. In prior versions of this code, the position here was\n        // determined based on an internal property that was rarely mocked, resulting in `NaN`. In\n        // reality, this code path should _never_ be touched since `target` is not allowed to be falsey.\n        return new Position(root, false, NaN);\n    }\n    if (target.parent === null) {\n        return new Position(target, true, 0);\n    }\n    const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    const index = target.segments.length - 1 + modifier;\n    return createPositionApplyingDoubleDots(target, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    let g = group;\n    let ci = index;\n    let dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new _RuntimeError(4005 /* RuntimeErrorCode.INVALID_DOUBLE_DOTS */, (typeof ngDevMode === 'undefined' || ngDevMode) && \"Invalid number of '../'\");\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getOutlets(commands) {\n    if (isCommandWithOutlets(commands[0])) {\n        return commands[0].outlets;\n    }\n    return { [PRIMARY_OUTLET]: commands };\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    segmentGroup ??= new UrlSegmentGroup([], {});\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    const m = prefixedWith(segmentGroup, startIndex, commands);\n    const slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        const outlets = getOutlets(commands);\n        const children = {};\n        // If the set of commands applies to anything other than the primary outlet and the child\n        // segment is an empty path primary segment on its own, we want to apply the commands to the\n        // empty child path rather than here. The outcome is that the empty primary child is effectively\n        // removed from the final output UrlTree. Imagine the following config:\n        //\n        // {path: '', children: [{path: '**', outlet: 'popup'}]}.\n        //\n        // Navigation to /(popup:a) will activate the child outlet correctly Given a follow-up\n        // navigation with commands\n        // ['/', {outlets: {'popup': 'b'}}], we _would not_ want to apply the outlet commands to the\n        // root segment because that would result in\n        // //(popup:a)(popup:b) since the outlet command got applied one level above where it appears in\n        // the `ActivatedRoute` rather than updating the existing one.\n        //\n        // Because empty paths do not appear in the URL segments and the fact that the segments used in\n        // the output `UrlTree` are squashed to eliminate these empty paths where possible\n        // https://github.com/angular/angular/blob/13f10de40e25c6900ca55bd83b36bd533dacfa9e/packages/router/src/url_tree.ts#L755\n        // it can be hard to determine what is the right thing to do when applying commands to a\n        // `UrlSegmentGroup` that is created from an \"unsquashed\"/expanded `ActivatedRoute` tree.\n        // This code effectively \"squashes\" empty path primary routes when they have no siblings on\n        // the same level of the tree.\n        if (Object.keys(outlets).some((o) => o !== PRIMARY_OUTLET) &&\n            segmentGroup.children[PRIMARY_OUTLET] &&\n            segmentGroup.numberOfChildren === 1 &&\n            segmentGroup.children[PRIMARY_OUTLET].segments.length === 0) {\n            const childrenOfEmptyChild = updateSegmentGroupChildren(segmentGroup.children[PRIMARY_OUTLET], startIndex, commands);\n            return new UrlSegmentGroup(segmentGroup.segments, childrenOfEmptyChild.children);\n        }\n        Object.entries(outlets).forEach(([outlet, commands]) => {\n            if (typeof commands === 'string') {\n                commands = [commands];\n            }\n            if (commands !== null) {\n                children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        Object.entries(segmentGroup.children).forEach(([childOutlet, child]) => {\n            if (outlets[childOutlet] === undefined) {\n                children[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    let currentCommandIndex = 0;\n    let currentPathIndex = startIndex;\n    const noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        const path = segmentGroup.segments[currentPathIndex];\n        const command = commands[currentCommandIndex];\n        // Do not try to consume command as part of the prefixing if it has outlets because it can\n        // contain outlets other than the one being processed. Consuming the outlets command would\n        // result in other outlets being ignored.\n        if (isCommandWithOutlets(command)) {\n            break;\n        }\n        const curr = `${command}`;\n        const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && typeof next === 'object' && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    const paths = segmentGroup.segments.slice(0, startIndex);\n    let i = 0;\n    while (i < commands.length) {\n        const command = commands[i];\n        if (isCommandWithOutlets(command)) {\n            const children = createNewSegmentChildren(command.outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            const p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, stringify(commands[0])));\n            i++;\n            continue;\n        }\n        const curr = isCommandWithOutlets(command) ? command.outlets[PRIMARY_OUTLET] : `${command}`;\n        const next = i < commands.length - 1 ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    const children = {};\n    Object.entries(outlets).forEach(([outlet, commands]) => {\n        if (typeof commands === 'string') {\n            commands = [commands];\n        }\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    const res = {};\n    Object.entries(params).forEach(([k, v]) => (res[k] = `${v}`));\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\nconst IMPERATIVE_NAVIGATION = 'imperative';\n/**\n * Identifies the type of a router event.\n *\n * @publicApi\n */\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"NavigationStart\"] = 0] = \"NavigationStart\";\n    EventType[EventType[\"NavigationEnd\"] = 1] = \"NavigationEnd\";\n    EventType[EventType[\"NavigationCancel\"] = 2] = \"NavigationCancel\";\n    EventType[EventType[\"NavigationError\"] = 3] = \"NavigationError\";\n    EventType[EventType[\"RoutesRecognized\"] = 4] = \"RoutesRecognized\";\n    EventType[EventType[\"ResolveStart\"] = 5] = \"ResolveStart\";\n    EventType[EventType[\"ResolveEnd\"] = 6] = \"ResolveEnd\";\n    EventType[EventType[\"GuardsCheckStart\"] = 7] = \"GuardsCheckStart\";\n    EventType[EventType[\"GuardsCheckEnd\"] = 8] = \"GuardsCheckEnd\";\n    EventType[EventType[\"RouteConfigLoadStart\"] = 9] = \"RouteConfigLoadStart\";\n    EventType[EventType[\"RouteConfigLoadEnd\"] = 10] = \"RouteConfigLoadEnd\";\n    EventType[EventType[\"ChildActivationStart\"] = 11] = \"ChildActivationStart\";\n    EventType[EventType[\"ChildActivationEnd\"] = 12] = \"ChildActivationEnd\";\n    EventType[EventType[\"ActivationStart\"] = 13] = \"ActivationStart\";\n    EventType[EventType[\"ActivationEnd\"] = 14] = \"ActivationEnd\";\n    EventType[EventType[\"Scroll\"] = 15] = \"Scroll\";\n    EventType[EventType[\"NavigationSkipped\"] = 16] = \"NavigationSkipped\";\n})(EventType || (EventType = {}));\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * import {Event, RouterEvent, Router} from '@angular/router';\n *\n * class MyService {\n *   constructor(public router: Router) {\n *     router.events.pipe(\n *        filter((e: Event | RouterEvent): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       // Do something\n *     });\n *   }\n * }\n * ```\n *\n * @see {@link Event}\n * @see [Router events summary](guide/routing/router-reference#router-events)\n * @publicApi\n */\nclass RouterEvent {\n    id;\n    url;\n    constructor(\n    /** A unique ID that the router assigns to every router navigation. */\n    id, \n    /** The URL that is the destination for this navigation. */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n}\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nclass NavigationStart extends RouterEvent {\n    type = EventType.NavigationStart;\n    /**\n     * Identifies the call or event that triggered the navigation.\n     * An `imperative` trigger is a call to `router.navigateByUrl()` or `router.navigate()`.\n     *\n     * @see {@link NavigationEnd}\n     * @see {@link NavigationCancel}\n     * @see {@link NavigationError}\n     */\n    navigationTrigger;\n    /**\n     * The navigation state that was previously supplied to the `pushState` call,\n     * when the navigation is triggered by a `popstate` event. Otherwise null.\n     *\n     * The state object is defined by `NavigationExtras`, and contains any\n     * developer-defined state value, as well as a unique ID that\n     * the router assigns to every router transition/navigation.\n     *\n     * From the perspective of the router, the router never \"goes back\".\n     * When the user clicks on the back button in the browser,\n     * a new navigation ID is created.\n     *\n     * Use the ID in this previous-state object to differentiate between a newly created\n     * state and one returned to by a `popstate` event, so that you can restore some\n     * remembered state, such as scroll position.\n     *\n     */\n    restoredState;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    navigationTrigger = 'imperative', \n    /** @docsNotRequired */\n    restoredState = null) {\n        super(id, url);\n        this.navigationTrigger = navigationTrigger;\n        this.restoredState = restoredState;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationStart(id: ${this.id}, url: '${this.url}')`;\n    }\n}\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationCancel}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationEnd extends RouterEvent {\n    urlAfterRedirects;\n    type = EventType.NavigationEnd;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n    }\n}\n/**\n * A code for the `NavigationCancel` event of the `Router` to indicate the\n * reason a navigation failed.\n *\n * @publicApi\n */\nvar NavigationCancellationCode;\n(function (NavigationCancellationCode) {\n    /**\n     * A navigation failed because a guard returned a `UrlTree` to redirect.\n     */\n    NavigationCancellationCode[NavigationCancellationCode[\"Redirect\"] = 0] = \"Redirect\";\n    /**\n     * A navigation failed because a more recent navigation started.\n     */\n    NavigationCancellationCode[NavigationCancellationCode[\"SupersededByNewNavigation\"] = 1] = \"SupersededByNewNavigation\";\n    /**\n     * A navigation failed because one of the resolvers completed without emitting a value.\n     */\n    NavigationCancellationCode[NavigationCancellationCode[\"NoDataFromResolver\"] = 2] = \"NoDataFromResolver\";\n    /**\n     * A navigation failed because a guard returned `false`.\n     */\n    NavigationCancellationCode[NavigationCancellationCode[\"GuardRejected\"] = 3] = \"GuardRejected\";\n    /**\n     * A navigation was aborted by the `Navigation.abort` function.\n     *\n     * @see {@link Navigation}\n     */\n    NavigationCancellationCode[NavigationCancellationCode[\"Aborted\"] = 4] = \"Aborted\";\n})(NavigationCancellationCode || (NavigationCancellationCode = {}));\n/**\n * A code for the `NavigationSkipped` event of the `Router` to indicate the\n * reason a navigation was skipped.\n *\n * @publicApi\n */\nvar NavigationSkippedCode;\n(function (NavigationSkippedCode) {\n    /**\n     * A navigation was skipped because the navigation URL was the same as the current Router URL.\n     */\n    NavigationSkippedCode[NavigationSkippedCode[\"IgnoredSameUrlNavigation\"] = 0] = \"IgnoredSameUrlNavigation\";\n    /**\n     * A navigation was skipped because the configured `UrlHandlingStrategy` return `false` for both\n     * the current Router URL and the target of the navigation.\n     *\n     * @see {@link UrlHandlingStrategy}\n     */\n    NavigationSkippedCode[NavigationSkippedCode[\"IgnoredByUrlHandlingStrategy\"] = 1] = \"IgnoredByUrlHandlingStrategy\";\n})(NavigationSkippedCode || (NavigationSkippedCode = {}));\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen for several reasons including when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationCancel extends RouterEvent {\n    reason;\n    code;\n    type = EventType.NavigationCancel;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /**\n     * A description of why the navigation was cancelled. For debug purposes only. Use `code`\n     * instead for a stable cancellation reason that can be used in production.\n     */\n    reason, \n    /**\n     * A code to indicate why the navigation was canceled. This cancellation code is stable for\n     * the reason and can be relied on whereas the `reason` string could change and should not be\n     * used in production.\n     */\n    code) {\n        super(id, url);\n        this.reason = reason;\n        this.code = code;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;\n    }\n}\n/**\n * An event triggered when a navigation is skipped.\n * This can happen for a couple reasons including onSameUrlHandling\n * is set to `ignore` and the navigation URL is not different than the\n * current state.\n *\n * @publicApi\n */\nclass NavigationSkipped extends RouterEvent {\n    reason;\n    code;\n    type = EventType.NavigationSkipped;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /**\n     * A description of why the navigation was skipped. For debug purposes only. Use `code`\n     * instead for a stable skipped reason that can be used in production.\n     */\n    reason, \n    /**\n     * A code to indicate why the navigation was skipped. This code is stable for\n     * the reason and can be relied on whereas the `reason` string could change and should not be\n     * used in production.\n     */\n    code) {\n        super(id, url);\n        this.reason = reason;\n        this.code = code;\n    }\n}\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationCancel}\n *\n * @publicApi\n */\nclass NavigationError extends RouterEvent {\n    error;\n    target;\n    type = EventType.NavigationError;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    error, \n    /**\n     * The target of the navigation when the error occurred.\n     *\n     * Note that this can be `undefined` because an error could have occurred before the\n     * `RouterStateSnapshot` was created for the navigation.\n     */\n    target) {\n        super(id, url);\n        this.error = error;\n        this.target = target;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n    }\n}\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\nclass RoutesRecognized extends RouterEvent {\n    urlAfterRedirects;\n    state;\n    type = EventType.RoutesRecognized;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see {@link GuardsCheckEnd}\n *\n * @publicApi\n */\nclass GuardsCheckStart extends RouterEvent {\n    urlAfterRedirects;\n    state;\n    type = EventType.GuardsCheckStart;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see {@link GuardsCheckStart}\n *\n * @publicApi\n */\nclass GuardsCheckEnd extends RouterEvent {\n    urlAfterRedirects;\n    state;\n    shouldActivate;\n    type = EventType.GuardsCheckEnd;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state, \n    /** @docsNotRequired */\n    shouldActivate) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    toString() {\n        return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n    }\n}\n/**\n * An event triggered at the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see {@link ResolveEnd}\n *\n * @publicApi\n */\nclass ResolveStart extends RouterEvent {\n    urlAfterRedirects;\n    state;\n    type = EventType.ResolveStart;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ResolveEnd extends RouterEvent {\n    urlAfterRedirects;\n    state;\n    type = EventType.ResolveEnd;\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see {@link RouteConfigLoadEnd}\n *\n * @publicApi\n */\nclass RouteConfigLoadStart {\n    route;\n    type = EventType.RouteConfigLoadStart;\n    constructor(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    toString() {\n        return `RouteConfigLoadStart(path: ${this.route.path})`;\n    }\n}\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see {@link RouteConfigLoadStart}\n *\n * @publicApi\n */\nclass RouteConfigLoadEnd {\n    route;\n    type = EventType.RouteConfigLoadEnd;\n    constructor(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    toString() {\n        return `RouteConfigLoadEnd(path: ${this.route.path})`;\n    }\n}\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see {@link ChildActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ChildActivationStart {\n    snapshot;\n    type = EventType.ChildActivationStart;\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || '';\n        return `ChildActivationStart(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see {@link ChildActivationStart}\n * @see {@link ResolveStart}\n * @publicApi\n */\nclass ChildActivationEnd {\n    snapshot;\n    type = EventType.ChildActivationEnd;\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || '';\n        return `ChildActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationStart {\n    snapshot;\n    type = EventType.ActivationStart;\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || '';\n        return `ActivationStart(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationStart}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationEnd {\n    snapshot;\n    type = EventType.ActivationEnd;\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || '';\n        return `ActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nclass Scroll {\n    routerEvent;\n    position;\n    anchor;\n    type = EventType.Scroll;\n    constructor(\n    /** @docsNotRequired */\n    routerEvent, \n    /** @docsNotRequired */\n    position, \n    /** @docsNotRequired */\n    anchor) {\n        this.routerEvent = routerEvent;\n        this.position = position;\n        this.anchor = anchor;\n    }\n    toString() {\n        const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n        return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n    }\n}\nclass BeforeActivateRoutes {\n}\nclass RedirectRequest {\n    url;\n    navigationBehaviorOptions;\n    constructor(url, navigationBehaviorOptions) {\n        this.url = url;\n        this.navigationBehaviorOptions = navigationBehaviorOptions;\n    }\n}\nfunction isPublicRouterEvent(e) {\n    return !(e instanceof BeforeActivateRoutes) && !(e instanceof RedirectRequest);\n}\nfunction stringifyEvent(routerEvent) {\n    switch (routerEvent.type) {\n        case EventType.ActivationEnd:\n            return `ActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n        case EventType.ActivationStart:\n            return `ActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n        case EventType.ChildActivationEnd:\n            return `ChildActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n        case EventType.ChildActivationStart:\n            return `ChildActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n        case EventType.GuardsCheckEnd:\n            return `GuardsCheckEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state}, shouldActivate: ${routerEvent.shouldActivate})`;\n        case EventType.GuardsCheckStart:\n            return `GuardsCheckStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n        case EventType.NavigationCancel:\n            return `NavigationCancel(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n        case EventType.NavigationSkipped:\n            return `NavigationSkipped(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n        case EventType.NavigationEnd:\n            return `NavigationEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}')`;\n        case EventType.NavigationError:\n            return `NavigationError(id: ${routerEvent.id}, url: '${routerEvent.url}', error: ${routerEvent.error})`;\n        case EventType.NavigationStart:\n            return `NavigationStart(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n        case EventType.ResolveEnd:\n            return `ResolveEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n        case EventType.ResolveStart:\n            return `ResolveStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n        case EventType.RouteConfigLoadEnd:\n            return `RouteConfigLoadEnd(path: ${routerEvent.route.path})`;\n        case EventType.RouteConfigLoadStart:\n            return `RouteConfigLoadStart(path: ${routerEvent.route.path})`;\n        case EventType.RoutesRecognized:\n            return `RoutesRecognized(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n        case EventType.Scroll:\n            const pos = routerEvent.position\n                ? `${routerEvent.position[0]}, ${routerEvent.position[1]}`\n                : null;\n            return `Scroll(anchor: '${routerEvent.anchor}', position: '${pos}')`;\n    }\n}\n\n/**\n * Creates an `EnvironmentInjector` if the `Route` has providers and one does not already exist\n * and returns the injector. Otherwise, if the `Route` does not have `providers`, returns the\n * `currentInjector`.\n *\n * @param route The route that might have providers\n * @param currentInjector The parent injector of the `Route`\n */\nfunction getOrCreateRouteInjectorIfNeeded(route, currentInjector) {\n    if (route.providers && !route._injector) {\n        route._injector = createEnvironmentInjector(route.providers, currentInjector, `Route: ${route.path}`);\n    }\n    return route._injector ?? currentInjector;\n}\nfunction validateConfig(config, parentPath = '', requireStandaloneComponents = false) {\n    // forEach doesn't iterate undefined values\n    for (let i = 0; i < config.length; i++) {\n        const route = config[i];\n        const fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath, requireStandaloneComponents);\n    }\n}\nfunction assertStandalone(fullPath, component) {\n    if (component && _isNgModule(component)) {\n        throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. You are using 'loadComponent' with a module, ` +\n            `but it must be used with standalone components. Use 'loadChildren' instead.`);\n    }\n    else if (component && !isStandalone(component)) {\n        throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. The component must be standalone.`);\n    }\n}\nfunction validateNode(route, fullPath, requireStandaloneComponents) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!route) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n        }\n        if (Array.isArray(route)) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': Array cannot be specified`);\n        }\n        if (!route.redirectTo &&\n            !route.component &&\n            !route.loadComponent &&\n            !route.children &&\n            !route.loadChildren &&\n            route.outlet &&\n            route.outlet !== PRIMARY_OUTLET) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n        }\n        if (route.redirectTo && route.children) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n        }\n        if (route.redirectTo && route.loadChildren) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n        }\n        if (route.children && route.loadChildren) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n        }\n        if (route.component && route.loadComponent) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': component and loadComponent cannot be used together`);\n        }\n        if (route.redirectTo) {\n            if (route.component || route.loadComponent) {\n                throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and component/loadComponent cannot be used together`);\n            }\n            if (route.canMatch || route.canActivate) {\n                throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and ${route.canMatch ? 'canMatch' : 'canActivate'} cannot be used together.` +\n                    `Redirects happen before guards are executed.`);\n            }\n        }\n        if (route.path && route.matcher) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n        }\n        if (route.redirectTo === void 0 &&\n            !route.component &&\n            !route.loadComponent &&\n            !route.children &&\n            !route.loadChildren) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. One of the following must be provided: component, loadComponent, redirectTo, children or loadChildren`);\n        }\n        if (route.path === void 0 && route.matcher === void 0) {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n        }\n        if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n        }\n        if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n            const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n            throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n        }\n        if (requireStandaloneComponents) {\n            assertStandalone(fullPath, route.component);\n        }\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath, requireStandaloneComponents);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return `${parentPath}/`;\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return `${parentPath}/${currentRoute.path}`;\n    }\n}\n/** Returns the `route.outlet` or PRIMARY_OUTLET if none exists. */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * Sorts the `routes` such that the ones with an outlet matching `outletName` come first.\n * The order of the configs is otherwise preserved.\n */\nfunction sortByMatchingOutlets(routes, outletName) {\n    const sortedConfig = routes.filter((r) => getOutlet(r) === outletName);\n    sortedConfig.push(...routes.filter((r) => getOutlet(r) !== outletName));\n    return sortedConfig;\n}\n/**\n * Gets the first injector in the snapshot's parent tree.\n *\n * If the `Route` has a static list of providers, the returned injector will be the one created from\n * those. If it does not exist, the returned injector may come from the parents, which may be from a\n * loaded config or their static providers.\n *\n * Returns `null` if there is neither this nor any parents have a stored injector.\n *\n * Generally used for retrieving the injector to use for getting tokens for guards/resolvers and\n * also used for getting the correct injector to use for creating components.\n */\nfunction getClosestRouteInjector(snapshot) {\n    if (!snapshot)\n        return null;\n    // If the current route has its own injector, which is created from the static providers on the\n    // route itself, we should use that. Otherwise, we start at the parent since we do not want to\n    // include the lazy loaded injector from this route.\n    if (snapshot.routeConfig?._injector) {\n        return snapshot.routeConfig._injector;\n    }\n    for (let s = snapshot.parent; s; s = s.parent) {\n        const route = s.routeConfig;\n        // Note that the order here is important. `_loadedInjector` stored on the route with\n        // `loadChildren: () => NgModule` so it applies to child routes with priority. The `_injector`\n        // is created from the static providers on that parent route, so it applies to the children as\n        // well, but only if there is no lazy loaded NgModuleRef injector.\n        if (route?._loadedInjector)\n            return route._loadedInjector;\n        if (route?._injector)\n            return route._injector;\n    }\n    return null;\n}\n\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nclass OutletContext {\n    rootInjector;\n    outlet = null;\n    route = null;\n    children;\n    attachRef = null;\n    get injector() {\n        return getClosestRouteInjector(this.route?.snapshot) ?? this.rootInjector;\n    }\n    constructor(rootInjector) {\n        this.rootInjector = rootInjector;\n        this.children = new ChildrenOutletContexts(this.rootInjector);\n    }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nclass ChildrenOutletContexts {\n    rootInjector;\n    // contexts for child outlets, by name.\n    contexts = new Map();\n    /** @docs-private */\n    constructor(rootInjector) {\n        this.rootInjector = rootInjector;\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    onChildOutletCreated(childName, outlet) {\n        const context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    onChildOutletDestroyed(childName) {\n        const context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n            context.attachRef = null;\n        }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    onOutletDeactivated() {\n        const contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    }\n    onOutletReAttached(contexts) {\n        this.contexts = contexts;\n    }\n    getOrCreateContext(childName) {\n        let context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext(this.rootInjector);\n            this.contexts.set(childName, context);\n        }\n        return context;\n    }\n    getContext(childName) {\n        return this.contexts.get(childName) || null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ChildrenOutletContexts, deps: [{ token: i0.EnvironmentInjector }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ChildrenOutletContexts, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ChildrenOutletContexts, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.EnvironmentInjector }] });\n\nclass Tree {\n    /** @internal */\n    _root;\n    constructor(root) {\n        this._root = root;\n    }\n    get root() {\n        return this._root.value;\n    }\n    /**\n     * @internal\n     */\n    parent(t) {\n        const p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    }\n    /**\n     * @internal\n     */\n    children(t) {\n        const n = findNode(t, this._root);\n        return n ? n.children.map((t) => t.value) : [];\n    }\n    /**\n     * @internal\n     */\n    firstChild(t) {\n        const n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    }\n    /**\n     * @internal\n     */\n    siblings(t) {\n        const p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        const c = p[p.length - 2].children.map((c) => c.value);\n        return c.filter((cc) => cc !== t);\n    }\n    /**\n     * @internal\n     */\n    pathFromRoot(t) {\n        return findPath(t, this._root).map((s) => s.value);\n    }\n}\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (const child of node.children) {\n        const node = findNode(value, child);\n        if (node)\n            return node;\n    }\n    return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (const child of node.children) {\n        const path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nclass TreeNode {\n    value;\n    children;\n    constructor(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    toString() {\n        return `TreeNode(${this.value})`;\n    }\n}\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    const map = {};\n    if (node) {\n        node.children.forEach((child) => (map[child.value.outlet] = child));\n    }\n    return map;\n}\n\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see {@link ActivatedRoute}\n * @see [Getting route information](guide/routing/common-router-tasks#getting-route-information)\n *\n * @publicApi\n */\nclass RouterState extends Tree {\n    snapshot;\n    /** @internal */\n    constructor(root, \n    /** The current snapshot of the router state */\n    snapshot) {\n        super(root);\n        this.snapshot = snapshot;\n        setRouterState(this, root);\n    }\n    toString() {\n        return this.snapshot.toString();\n    }\n}\nfunction createEmptyState(rootComponent) {\n    const snapshot = createEmptyStateSnapshot(rootComponent);\n    const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    const emptyParams = new BehaviorSubject({});\n    const emptyData = new BehaviorSubject({});\n    const emptyQueryParams = new BehaviorSubject({});\n    const fragment = new BehaviorSubject('');\n    const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(rootComponent) {\n    const emptyParams = {};\n    const emptyData = {};\n    const emptyQueryParams = {};\n    const fragment = '';\n    const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * Note: the observables in this class only emit when the current and previous values differ based\n * on shallow equality. For example, changing deeply nested properties in resolved `data` will not\n * cause the `ActivatedRoute.data` `Observable` to emit a new value.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"}\n *\n * @see [Getting route information](guide/routing/common-router-tasks#getting-route-information)\n *\n * @publicApi\n */\nclass ActivatedRoute {\n    urlSubject;\n    paramsSubject;\n    queryParamsSubject;\n    fragmentSubject;\n    dataSubject;\n    outlet;\n    component;\n    /** The current snapshot of this route */\n    snapshot;\n    /** @internal */\n    _futureSnapshot;\n    /** @internal */\n    _routerState;\n    /** @internal */\n    _paramMap;\n    /** @internal */\n    _queryParamMap;\n    /** An Observable of the resolved route title */\n    title;\n    /** An observable of the URL segments matched by this route. */\n    url;\n    /** An observable of the matrix parameters scoped to this route. */\n    params;\n    /** An observable of the query parameters shared by all the routes. */\n    queryParams;\n    /** An observable of the URL fragment shared by all the routes. */\n    fragment;\n    /** An observable of the static and resolved data of this route. */\n    data;\n    /** @internal */\n    constructor(\n    /** @internal */\n    urlSubject, \n    /** @internal */\n    paramsSubject, \n    /** @internal */\n    queryParamsSubject, \n    /** @internal */\n    fragmentSubject, \n    /** @internal */\n    dataSubject, \n    /** The outlet name of the route, a constant. */\n    outlet, \n    /** The component of the route, a constant. */\n    component, futureSnapshot) {\n        this.urlSubject = urlSubject;\n        this.paramsSubject = paramsSubject;\n        this.queryParamsSubject = queryParamsSubject;\n        this.fragmentSubject = fragmentSubject;\n        this.dataSubject = dataSubject;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n        this.title = this.dataSubject?.pipe(map((d) => d[RouteTitleKey])) ?? of(undefined);\n        // TODO(atscott): Verify that these can be changed to `.asObservable()` with TGP.\n        this.url = urlSubject;\n        this.params = paramsSubject;\n        this.queryParams = queryParamsSubject;\n        this.fragment = fragmentSubject;\n        this.data = dataSubject;\n    }\n    /** The configuration used to match this route. */\n    get routeConfig() {\n        return this._futureSnapshot.routeConfig;\n    }\n    /** The root of the router state. */\n    get root() {\n        return this._routerState.root;\n    }\n    /** The parent of this route in the router state tree. */\n    get parent() {\n        return this._routerState.parent(this);\n    }\n    /** The first child of this route in the router state tree. */\n    get firstChild() {\n        return this._routerState.firstChild(this);\n    }\n    /** The children of this route in the router state tree. */\n    get children() {\n        return this._routerState.children(this);\n    }\n    /** The path from the root of the router state tree to this route. */\n    get pathFromRoot() {\n        return this._routerState.pathFromRoot(this);\n    }\n    /**\n     * An Observable that contains a map of the required and optional parameters\n     * specific to the route.\n     * The map supports retrieving single and multiple values from the same parameter.\n     */\n    get paramMap() {\n        this._paramMap ??= this.params.pipe(map((p) => convertToParamMap(p)));\n        return this._paramMap;\n    }\n    /**\n     * An Observable that contains a map of the query parameters available to all routes.\n     * The map supports retrieving single and multiple values from the query parameter.\n     */\n    get queryParamMap() {\n        this._queryParamMap ??= this.queryParams.pipe(map((p) => convertToParamMap(p)));\n        return this._queryParamMap;\n    }\n    toString() {\n        return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n    }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n *\n * By default, we do not inherit parent data unless the current route is path-less or the parent\n * route is component-less.\n */\nfunction getInherited(route, parent, paramsInheritanceStrategy = 'emptyOnly') {\n    let inherited;\n    const { routeConfig } = route;\n    if (parent !== null &&\n        (paramsInheritanceStrategy === 'always' ||\n            // inherit parent data if route is empty path\n            routeConfig?.path === '' ||\n            // inherit parent data if parent was componentless\n            (!parent.component && !parent.routeConfig?.loadComponent))) {\n        inherited = {\n            params: { ...parent.params, ...route.params },\n            data: { ...parent.data, ...route.data },\n            resolve: {\n                // Snapshots are created with data inherited from parent and guards (i.e. canActivate) can\n                // change data because it's not frozen...\n                // This first line could be deleted chose to break/disallow mutating the `data` object in\n                // guards.\n                // Note that data from parents still override this mutated data so anyone relying on this\n                // might be surprised that it doesn't work if parent data is inherited but otherwise does.\n                ...route.data,\n                // Ensure inherited resolved data overrides inherited static data\n                ...parent.data,\n                // static data from the current route overrides any inherited data\n                ...routeConfig?.data,\n                // resolved data from current route overrides everything\n                ...route._resolvedData,\n            },\n        };\n    }\n    else {\n        inherited = {\n            params: { ...route.params },\n            data: { ...route.data },\n            resolve: { ...route.data, ...(route._resolvedData ?? {}) },\n        };\n    }\n    if (routeConfig && hasStaticTitle(routeConfig)) {\n        inherited.resolve[RouteTitleKey] = routeConfig.title;\n    }\n    return inherited;\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```ts\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass ActivatedRouteSnapshot {\n    url;\n    params;\n    queryParams;\n    fragment;\n    data;\n    outlet;\n    component;\n    /** The configuration used to match this route **/\n    routeConfig;\n    /** @internal */\n    _resolve;\n    /** @internal */\n    _resolvedData;\n    /** @internal */\n    _routerState;\n    /** @internal */\n    _paramMap;\n    /** @internal */\n    _queryParamMap;\n    /** The resolved route title */\n    get title() {\n        // Note: This _must_ be a getter because the data is mutated in the resolvers. Title will not be\n        // available at the time of class instantiation.\n        return this.data?.[RouteTitleKey];\n    }\n    /** @internal */\n    constructor(\n    /** The URL segments matched by this route */\n    url, \n    /**\n     *  The matrix parameters scoped to this route.\n     *\n     *  You can compute all params (or data) in the router state or to get params outside\n     *  of an activated component by traversing the `RouterState` tree as in the following\n     *  example:\n     *  ```ts\n     *  collectRouteParams(router: Router) {\n     *    let params = {};\n     *    let stack: ActivatedRouteSnapshot[] = [router.routerState.snapshot.root];\n     *    while (stack.length > 0) {\n     *      const route = stack.pop()!;\n     *      params = {...params, ...route.params};\n     *      stack.push(...route.children);\n     *    }\n     *    return params;\n     *  }\n     *  ```\n     */\n    params, \n    /** The query parameters shared by all the routes */\n    queryParams, \n    /** The URL fragment shared by all the routes */\n    fragment, \n    /** The static and resolved data of this route */\n    data, \n    /** The outlet name of the route */\n    outlet, \n    /** The component of the route */\n    component, routeConfig, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._resolve = resolve;\n    }\n    /** The root of the router state */\n    get root() {\n        return this._routerState.root;\n    }\n    /** The parent of this route in the router state tree */\n    get parent() {\n        return this._routerState.parent(this);\n    }\n    /** The first child of this route in the router state tree */\n    get firstChild() {\n        return this._routerState.firstChild(this);\n    }\n    /** The children of this route in the router state tree */\n    get children() {\n        return this._routerState.children(this);\n    }\n    /** The path from the root of the router state tree to this route */\n    get pathFromRoot() {\n        return this._routerState.pathFromRoot(this);\n    }\n    get paramMap() {\n        this._paramMap ??= convertToParamMap(this.params);\n        return this._paramMap;\n    }\n    get queryParamMap() {\n        this._queryParamMap ??= convertToParamMap(this.queryParams);\n        return this._queryParamMap;\n    }\n    toString() {\n        const url = this.url.map((segment) => segment.toString()).join('/');\n        const matched = this.routeConfig ? this.routeConfig.path : '';\n        return `Route(url:'${url}', path:'${matched}')`;\n    }\n}\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass RouterStateSnapshot extends Tree {\n    url;\n    /** @internal */\n    constructor(\n    /** The url from which this snapshot was created */\n    url, root) {\n        super(root);\n        this.url = url;\n        setRouterState(this, root);\n    }\n    toString() {\n        return serializeNode(this._root);\n    }\n}\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach((c) => setRouterState(state, c));\n}\nfunction serializeNode(node) {\n    const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n    return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        const currentSnapshot = route.snapshot;\n        const nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParamsSubject.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragmentSubject.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.paramsSubject.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.urlSubject.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.dataSubject.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        route.dataSubject.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    const parentsMismatch = !a.parent !== !b.parent;\n    return (equalUrlParams &&\n        !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent)));\n}\nfunction hasStaticTitle(config) {\n    return typeof config.title === 'string' || config.title === null;\n}\n\n/**\n * An `InjectionToken` provided by the `RouterOutlet` and can be set using the `routerOutletData`\n * input.\n *\n * When unset, this value is `null` by default.\n *\n * @usageNotes\n *\n * To set the data from the template of the component with `router-outlet`:\n * ```html\n * <router-outlet [routerOutletData]=\"{name: 'Angular'}\" />\n * ```\n *\n * To read the data in the routed component:\n * ```ts\n * data = inject(ROUTER_OUTLET_DATA) as Signal<{name: string}>;\n * ```\n *\n * @publicApi\n */\nconst ROUTER_OUTLET_DATA = new InjectionToken(ngDevMode ? 'RouterOutlet data' : '');\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```html\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * deactivate event when a component is destroyed.\n * An attached event emits when the `RouteReuseStrategy` instructs the outlet to reattach the\n * subtree, and the detached event emits when the `RouteReuseStrategy` instructs the outlet to\n * detach the subtree.\n *\n * ```html\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'\n *   (attach)='onAttach($event)'\n *   (detach)='onDetach($event)'></router-outlet>\n * ```\n *\n * @see {@link RouterLink}\n * @see {@link Route}\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterOutlet {\n    activated = null;\n    /** @internal */\n    get activatedComponentRef() {\n        return this.activated;\n    }\n    _activatedRoute = null;\n    /**\n     * The name of the outlet\n     *\n     */\n    name = PRIMARY_OUTLET;\n    activateEvents = new EventEmitter();\n    deactivateEvents = new EventEmitter();\n    /**\n     * Emits an attached component instance when the `RouteReuseStrategy` instructs to re-attach a\n     * previously detached subtree.\n     **/\n    attachEvents = new EventEmitter();\n    /**\n     * Emits a detached component instance when the `RouteReuseStrategy` instructs to detach the\n     * subtree.\n     */\n    detachEvents = new EventEmitter();\n    /**\n     * Data that will be provided to the child injector through the `ROUTER_OUTLET_DATA` token.\n     *\n     * When unset, the value of the token is `undefined` by default.\n     */\n    routerOutletData = input(undefined, ...(ngDevMode ? [{ debugName: \"routerOutletData\" }] : []));\n    parentContexts = inject(ChildrenOutletContexts);\n    location = inject(ViewContainerRef);\n    changeDetector = inject(ChangeDetectorRef);\n    inputBinder = inject(INPUT_BINDER, { optional: true });\n    /** @docs-private */\n    supportsBindingToComponentInputs = true;\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if (changes['name']) {\n            const { firstChange, previousValue } = changes['name'];\n            if (firstChange) {\n                // The first change is handled by ngOnInit. Because ngOnChanges doesn't get called when no\n                // input is set at all, we need to centrally handle the first change there.\n                return;\n            }\n            // unregister with the old name\n            if (this.isTrackedInParentContexts(previousValue)) {\n                this.deactivate();\n                this.parentContexts.onChildOutletDestroyed(previousValue);\n            }\n            // register the new name\n            this.initializeOutletWithName();\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        // Ensure that the registered outlet is this one before removing it on the context.\n        if (this.isTrackedInParentContexts(this.name)) {\n            this.parentContexts.onChildOutletDestroyed(this.name);\n        }\n        this.inputBinder?.unsubscribeFromRouteData(this);\n    }\n    isTrackedInParentContexts(outletName) {\n        return this.parentContexts.getContext(outletName)?.outlet === this;\n    }\n    /** @docs-private */\n    ngOnInit() {\n        this.initializeOutletWithName();\n    }\n    initializeOutletWithName() {\n        this.parentContexts.onChildOutletCreated(this.name, this);\n        if (this.activated) {\n            return;\n        }\n        // If the outlet was not instantiated at the time the route got activated we need to populate\n        // the outlet when it is initialized (ie inside a NgIf)\n        const context = this.parentContexts.getContext(this.name);\n        if (context?.route) {\n            if (context.attachRef) {\n                // `attachRef` is populated when there is an existing component to mount\n                this.attach(context.attachRef, context.route);\n            }\n            else {\n                // otherwise the component defined in the configuration is created\n                this.activateWith(context.route, context.injector);\n            }\n        }\n    }\n    get isActivated() {\n        return !!this.activated;\n    }\n    /**\n     * @returns The currently activated component instance.\n     * @throws An error if the outlet is not activated.\n     */\n    get component() {\n        if (!this.activated)\n            throw new _RuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n        return this.activated.instance;\n    }\n    get activatedRoute() {\n        if (!this.activated)\n            throw new _RuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n        return this._activatedRoute;\n    }\n    get activatedRouteData() {\n        if (this._activatedRoute) {\n            return this._activatedRoute.snapshot.data;\n        }\n        return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    detach() {\n        if (!this.activated)\n            throw new _RuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n        this.location.detach();\n        const cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.detachEvents.emit(cmp.instance);\n        return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    attach(ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n        this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n        this.attachEvents.emit(ref.instance);\n    }\n    deactivate() {\n        if (this.activated) {\n            const c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    }\n    activateWith(activatedRoute, environmentInjector) {\n        if (this.isActivated) {\n            throw new _RuntimeError(4013 /* RuntimeErrorCode.OUTLET_ALREADY_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                'Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        const location = this.location;\n        const snapshot = activatedRoute.snapshot;\n        const component = snapshot.component;\n        const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        const injector = new OutletInjector(activatedRoute, childContexts, location.injector, this.routerOutletData);\n        this.activated = location.createComponent(component, {\n            index: location.length,\n            injector,\n            environmentInjector: environmentInjector,\n        });\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n        this.activateEvents.emit(this.activated.instance);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.2.0-next.2\", type: RouterOutlet, isStandalone: true, selector: \"router-outlet\", inputs: { name: { classPropertyName: \"name\", publicName: \"name\", isSignal: false, isRequired: false, transformFunction: null }, routerOutletData: { classPropertyName: \"routerOutletData\", publicName: \"routerOutletData\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { activateEvents: \"activate\", deactivateEvents: \"deactivate\", attachEvents: \"attach\", detachEvents: \"detach\" }, exportAs: [\"outlet\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'router-outlet',\n                    exportAs: 'outlet',\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], activateEvents: [{\n                type: Output,\n                args: ['activate']\n            }], deactivateEvents: [{\n                type: Output,\n                args: ['deactivate']\n            }], attachEvents: [{\n                type: Output,\n                args: ['attach']\n            }], detachEvents: [{\n                type: Output,\n                args: ['detach']\n            }] } });\nclass OutletInjector {\n    route;\n    childContexts;\n    parent;\n    outletData;\n    constructor(route, childContexts, parent, outletData) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n        this.outletData = outletData;\n    }\n    get(token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        if (token === ROUTER_OUTLET_DATA) {\n            return this.outletData;\n        }\n        return this.parent.get(token, notFoundValue);\n    }\n}\nconst INPUT_BINDER = new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nclass RoutedComponentInputBinder {\n    outletDataSubscriptions = new Map();\n    bindActivatedRouteToOutletComponent(outlet) {\n        this.unsubscribeFromRouteData(outlet);\n        this.subscribeToRouteData(outlet);\n    }\n    unsubscribeFromRouteData(outlet) {\n        this.outletDataSubscriptions.get(outlet)?.unsubscribe();\n        this.outletDataSubscriptions.delete(outlet);\n    }\n    subscribeToRouteData(outlet) {\n        const { activatedRoute } = outlet;\n        const dataSubscription = combineLatest([\n            activatedRoute.queryParams,\n            activatedRoute.params,\n            activatedRoute.data,\n        ])\n            .pipe(switchMap(([queryParams, params, data], index) => {\n            data = { ...queryParams, ...params, ...data };\n            // Get the first result from the data subscription synchronously so it's available to\n            // the component as soon as possible (and doesn't require a second change detection).\n            if (index === 0) {\n                return of(data);\n            }\n            // Promise.resolve is used to avoid synchronously writing the wrong data when\n            // two of the Observables in the `combineLatest` stream emit one after\n            // another.\n            return Promise.resolve(data);\n        }))\n            .subscribe((data) => {\n            // Outlet may have been deactivated or changed names to be associated with a different\n            // route\n            if (!outlet.isActivated ||\n                !outlet.activatedComponentRef ||\n                outlet.activatedRoute !== activatedRoute ||\n                activatedRoute.component === null) {\n                this.unsubscribeFromRouteData(outlet);\n                return;\n            }\n            const mirror = reflectComponentType(activatedRoute.component);\n            if (!mirror) {\n                this.unsubscribeFromRouteData(outlet);\n                return;\n            }\n            for (const { templateName } of mirror.inputs) {\n                outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n            }\n        });\n        this.outletDataSubscriptions.set(outlet, dataSubscription);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RoutedComponentInputBinder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RoutedComponentInputBinder });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RoutedComponentInputBinder, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nclass ɵEmptyOutletComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵEmptyOutletComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: ɵEmptyOutletComponent, isStandalone: true, selector: \"ng-component\", exportAs: [\"emptyRouterOutlet\"], ngImport: i0, template: `<router-outlet/>`, isInline: true, dependencies: [{ kind: \"directive\", type: RouterOutlet, selector: \"router-outlet\", inputs: [\"name\", \"routerOutletData\"], outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"], exportAs: [\"outlet\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵEmptyOutletComponent, decorators: [{\n            type: Component,\n            args: [{\n                    template: `<router-outlet/>`,\n                    imports: [RouterOutlet],\n                    // Used to avoid component ID collisions with user code.\n                    exportAs: 'emptyRouterOutlet',\n                }]\n        }] });\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n    const children = r.children && r.children.map(standardizeConfig);\n    const c = children ? { ...r, children } : { ...r };\n    if (!c.component &&\n        !c.loadComponent &&\n        (children || c.loadChildren) &&\n        c.outlet &&\n        c.outlet !== PRIMARY_OUTLET) {\n        c.component = ɵEmptyOutletComponent;\n    }\n    return c;\n}\n\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        const value = prevState.value;\n        value._futureSnapshot = curr.value;\n        const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n    }\n    else {\n        if (routeReuseStrategy.shouldAttach(curr.value)) {\n            // retrieve an activated route that is used to be displayed, but is not currently displayed\n            const detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n            if (detachedRouteHandle !== null) {\n                const tree = detachedRouteHandle.route;\n                tree.value._futureSnapshot = curr.value;\n                tree.children = curr.children.map((c) => createNode(routeReuseStrategy, c));\n                return tree;\n            }\n        }\n        const value = createActivatedRoute(curr.value);\n        const children = curr.children.map((c) => createNode(routeReuseStrategy, c));\n        return new TreeNode(value, children);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map((child) => {\n        for (const p of prevState.children) {\n            if (routeReuseStrategy.shouldReuseRoute(child.value, p.value.snapshot)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * Can be returned by a `Router` guard to instruct the `Router` to redirect rather than continue\n * processing the path of the in-flight navigation. The `redirectTo` indicates _where_ the new\n * navigation should go to and the optional `navigationBehaviorOptions` can provide more information\n * about _how_ to perform the navigation.\n *\n * ```ts\n * const route: Route = {\n *   path: \"user/:userId\",\n *   component: User,\n *   canActivate: [\n *     () => {\n *       const router = inject(Router);\n *       const authService = inject(AuthenticationService);\n *\n *       if (!authService.isLoggedIn()) {\n *         const loginPath = router.parseUrl(\"/login\");\n *         return new RedirectCommand(loginPath, {\n *           skipLocationChange: true,\n *         });\n *       }\n *\n *       return true;\n *     },\n *   ],\n * };\n * ```\n * @see [Routing guide](guide/routing/common-router-tasks#preventing-unauthorized-access)\n *\n * @publicApi\n */\nclass RedirectCommand {\n    redirectTo;\n    navigationBehaviorOptions;\n    constructor(redirectTo, navigationBehaviorOptions) {\n        this.redirectTo = redirectTo;\n        this.navigationBehaviorOptions = navigationBehaviorOptions;\n    }\n}\n\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction redirectingNavigationError(urlSerializer, redirect) {\n    const { redirectTo, navigationBehaviorOptions } = isUrlTree(redirect)\n        ? { redirectTo: redirect, navigationBehaviorOptions: undefined }\n        : redirect;\n    const error = navigationCancelingError(ngDevMode && `Redirecting to \"${urlSerializer.serialize(redirectTo)}\"`, NavigationCancellationCode.Redirect);\n    error.url = redirectTo;\n    error.navigationBehaviorOptions = navigationBehaviorOptions;\n    return error;\n}\nfunction navigationCancelingError(message, code) {\n    const error = new Error(`NavigationCancelingError: ${message || ''}`);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    error.cancellationCode = code;\n    return error;\n}\nfunction isRedirectingNavigationCancelingError(error) {\n    return (isNavigationCancelingError(error) &&\n        isUrlTree(error.url));\n}\nfunction isNavigationCancelingError(error) {\n    return !!error && error[NAVIGATION_CANCELING_ERROR];\n}\n\nlet warnedAboutUnsupportedInputBinding = false;\nconst activateRoutes = (rootContexts, routeReuseStrategy, forwardEvent, inputBindingEnabled) => map((t) => {\n    new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent, inputBindingEnabled).activate(rootContexts);\n    return t;\n});\nclass ActivateRoutes {\n    routeReuseStrategy;\n    futureState;\n    currState;\n    forwardEvent;\n    inputBindingEnabled;\n    constructor(routeReuseStrategy, futureState, currState, forwardEvent, inputBindingEnabled) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n        this.inputBindingEnabled = inputBindingEnabled;\n    }\n    activate(parentContexts) {\n        const futureRoot = this.futureState._root;\n        const currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    }\n    // De-activate the child route that are not re-used for the future state\n    deactivateChildRoutes(futureNode, currNode, contexts) {\n        const children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach((futureChild) => {\n            const childOutletName = futureChild.value.outlet;\n            this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        Object.values(children).forEach((v) => {\n            this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    }\n    deactivateRoutes(futureNode, currNode, parentContext) {\n        const future = futureNode.value;\n        const curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                const context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    }\n    deactivateRouteAndItsChildren(route, parentContexts) {\n        // If there is no component, the Route is never attached to an outlet (because there is no\n        // component to attach).\n        if (route.value.component && this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    }\n    detachAndStoreRouteSubtree(route, parentContexts) {\n        const context = parentContexts.getContext(route.value.outlet);\n        const contexts = context && route.value.component ? context.children : parentContexts;\n        const children = nodeChildrenAsMap(route);\n        for (const treeNode of Object.values(children)) {\n            this.deactivateRouteAndItsChildren(treeNode, contexts);\n        }\n        if (context && context.outlet) {\n            const componentRef = context.outlet.detach();\n            const contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef, route, contexts });\n        }\n    }\n    deactivateRouteAndOutlet(route, parentContexts) {\n        const context = parentContexts.getContext(route.value.outlet);\n        // The context could be `null` if we are on a componentless route but there may still be\n        // children that need deactivating.\n        const contexts = context && route.value.component ? context.children : parentContexts;\n        const children = nodeChildrenAsMap(route);\n        for (const treeNode of Object.values(children)) {\n            this.deactivateRouteAndItsChildren(treeNode, contexts);\n        }\n        if (context) {\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n            // Clear the information about the attached component on the context but keep the reference to\n            // the outlet. Clear even if outlet was not yet activated to avoid activating later with old\n            // info\n            context.attachRef = null;\n            context.route = null;\n        }\n    }\n    activateChildRoutes(futureNode, currNode, contexts) {\n        const children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach((c) => {\n            this.activateRoutes(c, children[c.value.outlet], contexts);\n            this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    }\n    activateRoutes(futureNode, currNode, parentContexts) {\n        const future = futureNode.value;\n        const curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    const stored = (this.routeReuseStrategy.retrieve(future.snapshot));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRoute(stored.route.value);\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n                else {\n                    context.attachRef = null;\n                    context.route = future;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, context.injector);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const context = parentContexts.getOrCreateContext(future.outlet);\n            const outlet = context.outlet;\n            if (outlet &&\n                this.inputBindingEnabled &&\n                !outlet.supportsBindingToComponentInputs &&\n                !warnedAboutUnsupportedInputBinding) {\n                console.warn(`'withComponentInputBinding' feature is enabled but ` +\n                    `this application is using an outlet that may not support binding to component inputs.`);\n                warnedAboutUnsupportedInputBinding = true;\n            }\n        }\n    }\n}\n\nclass CanActivate {\n    path;\n    route;\n    constructor(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n}\nclass CanDeactivate {\n    component;\n    route;\n    constructor(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n}\nfunction getAllRouteGuards(future, curr, parentContexts) {\n    const futureRoot = future._root;\n    const currRoot = curr ? curr._root : null;\n    return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n    const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0)\n        return null;\n    return { node: p, guards: canActivateChild };\n}\nfunction getTokenOrFunctionIdentity(tokenOrFunction, injector) {\n    const NOT_FOUND = Symbol();\n    const result = injector.get(tokenOrFunction, NOT_FOUND);\n    if (result === NOT_FOUND) {\n        if (typeof tokenOrFunction === 'function' && !_isInjectable(tokenOrFunction)) {\n            // We think the token is just a function so return it as-is\n            return tokenOrFunction;\n        }\n        else {\n            // This will throw the not found error\n            return injector.get(tokenOrFunction);\n        }\n    }\n    return result;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks = {\n    canDeactivateChecks: [],\n    canActivateChecks: [],\n}) {\n    const prevChildren = nodeChildrenAsMap(currNode);\n    // Process the children of the future route\n    futureNode.children.forEach((c) => {\n        getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n        delete prevChildren[c.value.outlet];\n    });\n    // Process any children left from the current route (not active for the future route)\n    Object.entries(prevChildren).forEach(([k, v]) => deactivateRouteAndItsChildren(v, contexts.getContext(k), checks));\n    return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks = {\n    canDeactivateChecks: [],\n    canActivateChecks: [],\n}) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n    // reusing the node\n    if (curr && future.routeConfig === curr.routeConfig) {\n        const shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n        if (shouldRun) {\n            checks.canActivateChecks.push(new CanActivate(futurePath));\n        }\n        else {\n            // we need to set the data\n            future.data = curr.data;\n            future._resolvedData = curr._resolvedData;\n        }\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n        }\n        if (shouldRun && context && context.outlet && context.outlet.isActivated) {\n            checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, curr));\n        }\n    }\n    else {\n        if (curr) {\n            deactivateRouteAndItsChildren(currNode, context, checks);\n        }\n        checks.canActivateChecks.push(new CanActivate(futurePath));\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n        }\n    }\n    return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n    if (typeof mode === 'function') {\n        return mode(curr, future);\n    }\n    switch (mode) {\n        case 'pathParamsChange':\n            return !equalPath(curr.url, future.url);\n        case 'pathParamsOrQueryParamsChange':\n            return (!equalPath(curr.url, future.url) || !shallowEqual(curr.queryParams, future.queryParams));\n        case 'always':\n            return true;\n        case 'paramsOrQueryParamsChange':\n            return (!equalParamsAndUrlSegments(curr, future) ||\n                !shallowEqual(curr.queryParams, future.queryParams));\n        case 'paramsChange':\n        default:\n            return !equalParamsAndUrlSegments(curr, future);\n    }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n    const children = nodeChildrenAsMap(route);\n    const r = route.value;\n    Object.entries(children).forEach(([childName, node]) => {\n        if (!r.component) {\n            deactivateRouteAndItsChildren(node, context, checks);\n        }\n        else if (context) {\n            deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n        }\n        else {\n            deactivateRouteAndItsChildren(node, null, checks);\n        }\n    });\n    if (!r.component) {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n    else if (context && context.outlet && context.outlet.isActivated) {\n        checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n    }\n    else {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n}\n\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n    return typeof v === 'function';\n}\nfunction isBoolean(v) {\n    return typeof v === 'boolean';\n}\nfunction isCanLoad(guard) {\n    return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n    return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n    return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n    return guard && isFunction(guard.canDeactivate);\n}\nfunction isCanMatch(guard) {\n    return guard && isFunction(guard.canMatch);\n}\nfunction isEmptyError(e) {\n    return e instanceof EmptyError || e?.name === 'EmptyError';\n}\n\nconst INITIAL_VALUE = /* @__PURE__ */ Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n    return switchMap((obs) => {\n        return combineLatest(obs.map((o) => o.pipe(take(1), startWith(INITIAL_VALUE)))).pipe(map((results) => {\n            for (const result of results) {\n                if (result === true) {\n                    // If result is true, check the next one\n                    continue;\n                }\n                else if (result === INITIAL_VALUE) {\n                    // If guard has not finished, we need to stop processing.\n                    return INITIAL_VALUE;\n                }\n                else if (result === false || isRedirect(result)) {\n                    // Result finished and was not true. Return the result.\n                    // Note that we only allow false/UrlTree/RedirectCommand. Other values are considered invalid and\n                    // ignored.\n                    return result;\n                }\n            }\n            // Everything resolved to true. Return true.\n            return true;\n        }), filter((item) => item !== INITIAL_VALUE), take(1));\n    });\n}\nfunction isRedirect(val) {\n    return isUrlTree(val) || val instanceof RedirectCommand;\n}\n\nfunction checkGuards(injector, forwardEvent) {\n    return mergeMap((t) => {\n        const { targetSnapshot, currentSnapshot, guards: { canActivateChecks, canDeactivateChecks }, } = t;\n        if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n            return of({ ...t, guardsResult: true });\n        }\n        return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, injector).pipe(mergeMap((canDeactivate) => {\n            return canDeactivate && isBoolean(canDeactivate)\n                ? runCanActivateChecks(targetSnapshot, canActivateChecks, injector, forwardEvent)\n                : of(canDeactivate);\n        }), map((guardsResult) => ({ ...t, guardsResult })));\n    });\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, injector) {\n    return from(checks).pipe(mergeMap((check) => runCanDeactivate(check.component, check.route, currRSS, futureRSS, injector)), first((result) => {\n        return result !== true;\n    }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, injector, forwardEvent) {\n    return from(checks).pipe(concatMap((check) => {\n        return concat(fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, injector), runCanActivate(futureSnapshot, check.route, injector));\n    }), first((result) => {\n        return result !== true;\n    }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ActivationStart(snapshot));\n    }\n    return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ChildActivationStart(snapshot));\n    }\n    return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, injector) {\n    const canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0)\n        return of(true);\n    const canActivateObservables = canActivate.map((canActivate) => {\n        return defer(() => {\n            const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n            const guard = getTokenOrFunctionIdentity(canActivate, closestInjector);\n            const guardVal = isCanActivate(guard)\n                ? guard.canActivate(futureARS, futureRSS)\n                : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n            return wrapIntoObservable(guardVal).pipe(first());\n        });\n    });\n    return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, injector) {\n    const futureARS = path[path.length - 1];\n    const canActivateChildGuards = path\n        .slice(0, path.length - 1)\n        .reverse()\n        .map((p) => getCanActivateChild(p))\n        .filter((_) => _ !== null);\n    const canActivateChildGuardsMapped = canActivateChildGuards.map((d) => {\n        return defer(() => {\n            const guardsMapped = d.guards.map((canActivateChild) => {\n                const closestInjector = getClosestRouteInjector(d.node) ?? injector;\n                const guard = getTokenOrFunctionIdentity(canActivateChild, closestInjector);\n                const guardVal = isCanActivateChild(guard)\n                    ? guard.canActivateChild(futureARS, futureRSS)\n                    : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n                return wrapIntoObservable(guardVal).pipe(first());\n            });\n            return of(guardsMapped).pipe(prioritizedGuardValue());\n        });\n    });\n    return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, injector) {\n    const canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0)\n        return of(true);\n    const canDeactivateObservables = canDeactivate.map((c) => {\n        const closestInjector = getClosestRouteInjector(currARS) ?? injector;\n        const guard = getTokenOrFunctionIdentity(c, closestInjector);\n        const guardVal = isCanDeactivate(guard)\n            ? guard.canDeactivate(component, currARS, currRSS, futureRSS)\n            : runInInjectionContext(closestInjector, () => guard(component, currARS, currRSS, futureRSS));\n        return wrapIntoObservable(guardVal).pipe(first());\n    });\n    return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanLoadGuards(injector, route, segments, urlSerializer) {\n    const canLoad = route.canLoad;\n    if (canLoad === undefined || canLoad.length === 0) {\n        return of(true);\n    }\n    const canLoadObservables = canLoad.map((injectionToken) => {\n        const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n        const guardVal = isCanLoad(guard)\n            ? guard.canLoad(route, segments)\n            : runInInjectionContext(injector, () => guard(route, segments));\n        return wrapIntoObservable(guardVal);\n    });\n    return of(canLoadObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nfunction redirectIfUrlTree(urlSerializer) {\n    return pipe(tap((result) => {\n        if (typeof result === 'boolean')\n            return;\n        throw redirectingNavigationError(urlSerializer, result);\n    }), map((result) => result === true));\n}\nfunction runCanMatchGuards(injector, route, segments, urlSerializer) {\n    const canMatch = route.canMatch;\n    if (!canMatch || canMatch.length === 0)\n        return of(true);\n    const canMatchObservables = canMatch.map((injectionToken) => {\n        const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n        const guardVal = isCanMatch(guard)\n            ? guard.canMatch(route, segments)\n            : runInInjectionContext(injector, () => guard(route, segments));\n        return wrapIntoObservable(guardVal);\n    });\n    return of(canMatchObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\n\nclass NoMatch {\n    segmentGroup;\n    constructor(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n}\nclass AbsoluteRedirect extends Error {\n    urlTree;\n    constructor(urlTree) {\n        super();\n        this.urlTree = urlTree;\n    }\n}\nfunction noMatch$1(segmentGroup) {\n    return throwError(new NoMatch(segmentGroup));\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return throwError(new _RuntimeError(4000 /* RuntimeErrorCode.NAMED_OUTLET_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n        `Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`));\n}\nfunction canLoadFails(route) {\n    return throwError(navigationCancelingError((typeof ngDevMode === 'undefined' || ngDevMode) &&\n        `Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`, NavigationCancellationCode.GuardRejected));\n}\nclass ApplyRedirects {\n    urlSerializer;\n    urlTree;\n    constructor(urlSerializer, urlTree) {\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n    }\n    lineralizeSegments(route, urlTree) {\n        let res = [];\n        let c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(`${route.redirectTo}`);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    }\n    applyRedirectCommands(segments, redirectTo, posParams, currentSnapshot, injector) {\n        return getRedirectResult(redirectTo, currentSnapshot, injector).pipe(map((redirect) => {\n            if (redirect instanceof UrlTree) {\n                throw new AbsoluteRedirect(redirect);\n            }\n            const newTree = this.applyRedirectCreateUrlTree(redirect, this.urlSerializer.parse(redirect), segments, posParams);\n            if (redirect[0] === '/') {\n                throw new AbsoluteRedirect(newTree);\n            }\n            return newTree;\n        }));\n    }\n    applyRedirectCreateUrlTree(redirectTo, urlTree, segments, posParams) {\n        const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    }\n    createQueryParams(redirectToParams, actualParams) {\n        const res = {};\n        Object.entries(redirectToParams).forEach(([k, v]) => {\n            const copySourceValue = typeof v === 'string' && v[0] === ':';\n            if (copySourceValue) {\n                const sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    }\n    createSegmentGroup(redirectTo, group, segments, posParams) {\n        const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        let children = {};\n        Object.entries(group.children).forEach(([name, child]) => {\n            children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    }\n    createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n        return redirectToSegments.map((s) => s.path[0] === ':'\n            ? this.findPosParam(redirectTo, s, posParams)\n            : this.findOrReturn(s, actualSegments));\n    }\n    findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n        const pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new _RuntimeError(4001 /* RuntimeErrorCode.MISSING_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n        return pos;\n    }\n    findOrReturn(redirectToUrlSegment, actualSegments) {\n        let idx = 0;\n        for (const s of actualSegments) {\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    }\n}\nfunction getRedirectResult(redirectTo, currentSnapshot, injector) {\n    if (typeof redirectTo === 'string') {\n        return of(redirectTo);\n    }\n    const redirectToFn = redirectTo;\n    const { queryParams, fragment, routeConfig, url, outlet, params, data, title } = currentSnapshot;\n    return wrapIntoObservable(runInInjectionContext(injector, () => redirectToFn({ params, data, queryParams, fragment, routeConfig, url, outlet, title })));\n}\n\nconst noMatch = {\n    matched: false,\n    consumedSegments: [],\n    remainingSegments: [],\n    parameters: {},\n    positionalParamSegments: {},\n};\nfunction matchWithChecks(segmentGroup, route, segments, injector, urlSerializer) {\n    const result = match(segmentGroup, route, segments);\n    if (!result.matched) {\n        return of(result);\n    }\n    // Only create the Route's `EnvironmentInjector` if it matches the attempted\n    // navigation\n    injector = getOrCreateRouteInjectorIfNeeded(route, injector);\n    return runCanMatchGuards(injector, route, segments, urlSerializer).pipe(map((v) => (v === true ? result : { ...noMatch })));\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '**') {\n        return createWildcardMatchResult(segments);\n    }\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { ...noMatch };\n        }\n        return {\n            matched: true,\n            consumedSegments: [],\n            remainingSegments: segments,\n            parameters: {},\n            positionalParamSegments: {},\n        };\n    }\n    const matcher = route.matcher || defaultUrlMatcher;\n    const res = matcher(segments, segmentGroup, route);\n    if (!res)\n        return { ...noMatch };\n    const posParams = {};\n    Object.entries(res.posParams ?? {}).forEach(([k, v]) => {\n        posParams[k] = v.path;\n    });\n    const parameters = res.consumed.length > 0\n        ? { ...posParams, ...res.consumed[res.consumed.length - 1].parameters }\n        : posParams;\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        remainingSegments: segments.slice(res.consumed.length),\n        // TODO(atscott): investigate combining parameters and positionalParamSegments\n        parameters,\n        positionalParamSegments: res.posParams ?? {},\n    };\n}\nfunction createWildcardMatchResult(segments) {\n    return {\n        matched: true,\n        parameters: segments.length > 0 ? last(segments).parameters : {},\n        consumedSegments: segments,\n        remainingSegments: [],\n        positionalParamSegments: {},\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: s, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: s, slicedSegments };\n    }\n    const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    return { segmentGroup: s, slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    const res = {};\n    for (const r of routes) {\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            const s = new UrlSegmentGroup([], {});\n            res[getOutlet(r)] = s;\n        }\n    }\n    return { ...children, ...res };\n}\nfunction createChildrenForEmptyPaths(routes, primarySegment) {\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            const s = new UrlSegmentGroup([], {});\n            res[getOutlet(r)] = s;\n        }\n    }\n    return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some((r) => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some((r) => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '';\n}\nfunction noLeftoversInUrl(segmentGroup, segments, outlet) {\n    return segments.length === 0 && !segmentGroup.children[outlet];\n}\n\n/**\n * Class used to indicate there were no additional route config matches but that all segments of\n * the URL were consumed during matching so the route was URL matched. When this happens, we still\n * try to match child configs in case there are empty path children.\n */\nclass NoLeftoversInUrl {\n}\nfunction recognize$1(injector, configLoader, rootComponentType, config, urlTree, urlSerializer, paramsInheritanceStrategy = 'emptyOnly') {\n    return new Recognizer(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer).recognize();\n}\nconst MAX_ALLOWED_REDIRECTS = 31;\nclass Recognizer {\n    injector;\n    configLoader;\n    rootComponentType;\n    config;\n    urlTree;\n    paramsInheritanceStrategy;\n    urlSerializer;\n    applyRedirects;\n    absoluteRedirectCount = 0;\n    allowRedirects = true;\n    constructor(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer) {\n        this.injector = injector;\n        this.configLoader = configLoader;\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        this.urlSerializer = urlSerializer;\n        this.applyRedirects = new ApplyRedirects(this.urlSerializer, this.urlTree);\n    }\n    noMatchError(e) {\n        return new _RuntimeError(4002 /* RuntimeErrorCode.NO_MATCH */, typeof ngDevMode === 'undefined' || ngDevMode\n            ? `Cannot match any routes. URL Segment: '${e.segmentGroup}'`\n            : `'${e.segmentGroup}'`);\n    }\n    recognize() {\n        const rootSegmentGroup = split(this.urlTree.root, [], [], this.config).segmentGroup;\n        return this.match(rootSegmentGroup).pipe(map(({ children, rootSnapshot }) => {\n            const rootNode = new TreeNode(rootSnapshot, children);\n            const routeState = new RouterStateSnapshot('', rootNode);\n            const tree = createUrlTreeFromSnapshot(rootSnapshot, [], this.urlTree.queryParams, this.urlTree.fragment);\n            // https://github.com/angular/angular/issues/47307\n            // Creating the tree stringifies the query params\n            // We don't want to do this here so reassign them to the original.\n            tree.queryParams = this.urlTree.queryParams;\n            routeState.url = this.urlSerializer.serialize(tree);\n            return { state: routeState, tree };\n        }));\n    }\n    match(rootSegmentGroup) {\n        // Use Object.freeze to prevent readers of the Router state from modifying it outside\n        // of a navigation, resulting in the router being out of sync with the browser.\n        const rootSnapshot = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, Object.freeze({}), PRIMARY_OUTLET, this.rootComponentType, null, {});\n        return this.processSegmentGroup(this.injector, this.config, rootSegmentGroup, PRIMARY_OUTLET, rootSnapshot).pipe(map((children) => {\n            return { children, rootSnapshot };\n        }), catchError((e) => {\n            if (e instanceof AbsoluteRedirect) {\n                this.urlTree = e.urlTree;\n                return this.match(e.urlTree.root);\n            }\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    processSegmentGroup(injector, config, segmentGroup, outlet, parentRoute) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(injector, config, segmentGroup, parentRoute);\n        }\n        return this.processSegment(injector, config, segmentGroup, segmentGroup.segments, outlet, true, parentRoute).pipe(map((child) => (child instanceof TreeNode ? [child] : [])));\n    }\n    /**\n     * Matches every child outlet in the `segmentGroup` to a `Route` in the config. Returns `null` if\n     * we cannot find a match for _any_ of the children.\n     *\n     * @param config - The `Routes` to match against\n     * @param segmentGroup - The `UrlSegmentGroup` whose children need to be matched against the\n     *     config.\n     */\n    processChildren(injector, config, segmentGroup, parentRoute) {\n        // Expand outlets one at a time, starting with the primary outlet. We need to do it this way\n        // because an absolute redirect from the primary outlet takes precedence.\n        const childOutlets = [];\n        for (const child of Object.keys(segmentGroup.children)) {\n            if (child === 'primary') {\n                childOutlets.unshift(child);\n            }\n            else {\n                childOutlets.push(child);\n            }\n        }\n        return from(childOutlets).pipe(concatMap((childOutlet) => {\n            const child = segmentGroup.children[childOutlet];\n            // Sort the config so that routes with outlets that match the one being activated\n            // appear first, followed by routes for other outlets, which might match if they have\n            // an empty path.\n            const sortedConfig = sortByMatchingOutlets(config, childOutlet);\n            return this.processSegmentGroup(injector, sortedConfig, child, childOutlet, parentRoute);\n        }), scan((children, outletChildren) => {\n            children.push(...outletChildren);\n            return children;\n        }), defaultIfEmpty(null), last$1(), mergeMap((children) => {\n            if (children === null)\n                return noMatch$1(segmentGroup);\n            // Because we may have matched two outlets to the same empty path segment, we can have\n            // multiple activated results for the same outlet. We should merge the children of\n            // these results so the final return value is only one `TreeNode` per outlet.\n            const mergedChildren = mergeEmptyPathMatches(children);\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // This should really never happen - we are only taking the first match for each\n                // outlet and merge the empty path matches.\n                checkOutletNameUniqueness(mergedChildren);\n            }\n            sortActivatedRouteSnapshots(mergedChildren);\n            return of(mergedChildren);\n        }));\n    }\n    processSegment(injector, routes, segmentGroup, segments, outlet, allowRedirects, parentRoute) {\n        return from(routes).pipe(concatMap((r) => {\n            return this.processSegmentAgainstRoute(r._injector ?? injector, routes, r, segmentGroup, segments, outlet, allowRedirects, parentRoute).pipe(catchError((e) => {\n                if (e instanceof NoMatch) {\n                    return of(null);\n                }\n                throw e;\n            }));\n        }), first((x) => !!x), catchError((e) => {\n            if (isEmptyError(e)) {\n                if (noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new NoLeftoversInUrl());\n                }\n                return noMatch$1(segmentGroup);\n            }\n            throw e;\n        }));\n    }\n    processSegmentAgainstRoute(injector, routes, route, rawSegment, segments, outlet, allowRedirects, parentRoute) {\n        // We allow matches to empty paths when the outlets differ so we can match a url like `/(b:b)` to\n        // a config like\n        // * `{path: '', children: [{path: 'b', outlet: 'b'}]}`\n        // or even\n        // * `{path: '', outlet: 'a', children: [{path: 'b', outlet: 'b'}]`\n        //\n        // The exception here is when the segment outlet is for the primary outlet. This would\n        // result in a match inside the named outlet because all children there are written as primary\n        // outlets. So we need to prevent child named outlet matches in a url like `/b` in a config like\n        // * `{path: '', outlet: 'x' children: [{path: 'b'}]}`\n        // This should only match if the url is `/(x:b)`.\n        if (getOutlet(route) !== outlet &&\n            (outlet === PRIMARY_OUTLET || !emptyPathMatch(rawSegment, segments, route))) {\n            return noMatch$1(rawSegment);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet, parentRoute);\n        }\n        if (this.allowRedirects && allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(injector, rawSegment, routes, route, segments, outlet, parentRoute);\n        }\n        return noMatch$1(rawSegment);\n    }\n    expandSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, segments, outlet, parentRoute) {\n        const { matched, parameters, consumedSegments, positionalParamSegments, remainingSegments } = match(segmentGroup, route, segments);\n        if (!matched)\n            return noMatch$1(segmentGroup);\n        // TODO(atscott): Move all of this under an if(ngDevMode) as a breaking change and allow stack\n        // size exceeded in production\n        if (typeof route.redirectTo === 'string' && route.redirectTo[0] === '/') {\n            this.absoluteRedirectCount++;\n            if (this.absoluteRedirectCount > MAX_ALLOWED_REDIRECTS) {\n                if (ngDevMode) {\n                    throw new _RuntimeError(4016 /* RuntimeErrorCode.INFINITE_REDIRECT */, `Detected possible infinite redirect when redirecting from '${this.urlTree}' to '${route.redirectTo}'.\\n` +\n                        `This is currently a dev mode only error but will become a` +\n                        ` call stack size exceeded error in production in a future major version.`);\n                }\n                this.allowRedirects = false;\n            }\n        }\n        const currentSnapshot = new ActivatedRouteSnapshot(segments, parameters, Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n        const inherited = getInherited(currentSnapshot, parentRoute, this.paramsInheritanceStrategy);\n        currentSnapshot.params = Object.freeze(inherited.params);\n        currentSnapshot.data = Object.freeze(inherited.data);\n        const newTree$ = this.applyRedirects.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments, currentSnapshot, injector);\n        return newTree$.pipe(switchMap((newTree) => this.applyRedirects.lineralizeSegments(route, newTree)), mergeMap((newSegments) => {\n            return this.processSegment(injector, routes, segmentGroup, newSegments.concat(remainingSegments), outlet, false, parentRoute);\n        }));\n    }\n    matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet, parentRoute) {\n        const matchResult = matchWithChecks(rawSegment, route, segments, injector, this.urlSerializer);\n        if (route.path === '**') {\n            // Prior versions of the route matching algorithm would stop matching at the wildcard route.\n            // We should investigate a better strategy for any existing children. Otherwise, these\n            // child segments are silently dropped from the navigation.\n            // https://github.com/angular/angular/issues/40089\n            rawSegment.children = {};\n        }\n        return matchResult.pipe(switchMap((result) => {\n            if (!result.matched) {\n                return noMatch$1(rawSegment);\n            }\n            // If the route has an injector created from providers, we should start using that.\n            injector = route._injector ?? injector;\n            return this.getChildConfig(injector, route, segments).pipe(switchMap(({ routes: childConfig }) => {\n                const childInjector = route._loadedInjector ?? injector;\n                const { parameters, consumedSegments, remainingSegments } = result;\n                const snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n                const inherited = getInherited(snapshot, parentRoute, this.paramsInheritanceStrategy);\n                snapshot.params = Object.freeze(inherited.params);\n                snapshot.data = Object.freeze(inherited.data);\n                const { segmentGroup, slicedSegments } = split(rawSegment, consumedSegments, remainingSegments, childConfig);\n                if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                    return this.processChildren(childInjector, childConfig, segmentGroup, snapshot).pipe(map((children) => {\n                        return new TreeNode(snapshot, children);\n                    }));\n                }\n                if (childConfig.length === 0 && slicedSegments.length === 0) {\n                    return of(new TreeNode(snapshot, []));\n                }\n                const matchedOnOutlet = getOutlet(route) === outlet;\n                // If we matched a config due to empty path match on a different outlet, we need to\n                // continue passing the current outlet for the segment rather than switch to PRIMARY.\n                // Note that we switch to primary when we have a match because outlet configs look like\n                // this: {path: 'a', outlet: 'a', children: [\n                //  {path: 'b', component: B},\n                //  {path: 'c', component: C},\n                // ]}\n                // Notice that the children of the named outlet are configured with the primary outlet\n                return this.processSegment(childInjector, childConfig, segmentGroup, slicedSegments, matchedOnOutlet ? PRIMARY_OUTLET : outlet, true, snapshot).pipe(map((child) => {\n                    return new TreeNode(snapshot, child instanceof TreeNode ? [child] : []);\n                }));\n            }));\n        }));\n    }\n    getChildConfig(injector, route, segments) {\n        if (route.children) {\n            // The children belong to the same module\n            return of({ routes: route.children, injector });\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedRoutes !== undefined) {\n                return of({ routes: route._loadedRoutes, injector: route._loadedInjector });\n            }\n            return runCanLoadGuards(injector, route, segments, this.urlSerializer).pipe(mergeMap((shouldLoadResult) => {\n                if (shouldLoadResult) {\n                    return this.configLoader.loadChildren(injector, route).pipe(tap((cfg) => {\n                        route._loadedRoutes = cfg.routes;\n                        route._loadedInjector = cfg.injector;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return of({ routes: [], injector });\n    }\n}\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort((a, b) => {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction hasEmptyPathConfig(node) {\n    const config = node.value.routeConfig;\n    return config && config.path === '';\n}\n/**\n * Finds `TreeNode`s with matching empty path route configs and merges them into `TreeNode` with\n * the children from each duplicate. This is necessary because different outlets can match a\n * single empty path route config and the results need to then be merged.\n */\nfunction mergeEmptyPathMatches(nodes) {\n    const result = [];\n    // The set of nodes which contain children that were merged from two duplicate empty path nodes.\n    const mergedNodes = new Set();\n    for (const node of nodes) {\n        if (!hasEmptyPathConfig(node)) {\n            result.push(node);\n            continue;\n        }\n        const duplicateEmptyPathNode = result.find((resultNode) => node.value.routeConfig === resultNode.value.routeConfig);\n        if (duplicateEmptyPathNode !== undefined) {\n            duplicateEmptyPathNode.children.push(...node.children);\n            mergedNodes.add(duplicateEmptyPathNode);\n        }\n        else {\n            result.push(node);\n        }\n    }\n    // For each node which has children from multiple sources, we need to recompute a new `TreeNode`\n    // by also merging those children. This is necessary when there are multiple empty path configs\n    // in a row. Put another way: whenever we combine children of two nodes, we need to also check\n    // if any of those children can be combined into a single node as well.\n    for (const mergedNode of mergedNodes) {\n        const mergedChildren = mergeEmptyPathMatches(mergedNode.children);\n        result.push(new TreeNode(mergedNode.value, mergedChildren));\n    }\n    return result.filter((n) => !mergedNodes.has(n));\n}\nfunction checkOutletNameUniqueness(nodes) {\n    const names = {};\n    nodes.forEach((n) => {\n        const routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            const p = routeWithSameOutletName.url.map((s) => s.toString()).join('/');\n            const c = n.value.url.map((s) => s.toString()).join('/');\n            throw new _RuntimeError(4006 /* RuntimeErrorCode.TWO_SEGMENTS_WITH_SAME_OUTLET */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\nfunction recognize(injector, configLoader, rootComponentType, config, serializer, paramsInheritanceStrategy) {\n    return mergeMap((t) => recognize$1(injector, configLoader, rootComponentType, config, t.extractedUrl, serializer, paramsInheritanceStrategy).pipe(map(({ state: targetSnapshot, tree: urlAfterRedirects }) => {\n        return { ...t, targetSnapshot, urlAfterRedirects };\n    })));\n}\n\nfunction resolveData(paramsInheritanceStrategy, injector) {\n    return mergeMap((t) => {\n        const { targetSnapshot, guards: { canActivateChecks }, } = t;\n        if (!canActivateChecks.length) {\n            return of(t);\n        }\n        // Iterating a Set in javascript  happens in insertion order so it is safe to use a `Set` to\n        // preserve the correct order that the resolvers should run in.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#description\n        const routesWithResolversToRun = new Set(canActivateChecks.map((check) => check.route));\n        const routesNeedingDataUpdates = new Set();\n        for (const route of routesWithResolversToRun) {\n            if (routesNeedingDataUpdates.has(route)) {\n                continue;\n            }\n            // All children under the route with a resolver to run need to recompute inherited data.\n            for (const newRoute of flattenRouteTree(route)) {\n                routesNeedingDataUpdates.add(newRoute);\n            }\n        }\n        let routesProcessed = 0;\n        return from(routesNeedingDataUpdates).pipe(concatMap((route) => {\n            if (routesWithResolversToRun.has(route)) {\n                return runResolve(route, targetSnapshot, paramsInheritanceStrategy, injector);\n            }\n            else {\n                route.data = getInherited(route, route.parent, paramsInheritanceStrategy).resolve;\n                return of(void 0);\n            }\n        }), tap(() => routesProcessed++), takeLast(1), mergeMap((_) => (routesProcessed === routesNeedingDataUpdates.size ? of(t) : EMPTY)));\n    });\n}\n/**\n *  Returns the `ActivatedRouteSnapshot` tree as an array, using DFS to traverse the route tree.\n */\nfunction flattenRouteTree(route) {\n    const descendants = route.children.map((child) => flattenRouteTree(child)).flat();\n    return [route, ...descendants];\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, injector) {\n    const config = futureARS.routeConfig;\n    const resolve = futureARS._resolve;\n    if (config?.title !== undefined && !hasStaticTitle(config)) {\n        resolve[RouteTitleKey] = config.title;\n    }\n    return defer(() => {\n        futureARS.data = getInherited(futureARS, futureARS.parent, paramsInheritanceStrategy).resolve;\n        return resolveNode(resolve, futureARS, futureRSS, injector).pipe(map((resolvedData) => {\n            futureARS._resolvedData = resolvedData;\n            futureARS.data = { ...futureARS.data, ...resolvedData };\n            return null;\n        }));\n    });\n}\nfunction resolveNode(resolve, futureARS, futureRSS, injector) {\n    const keys = getDataKeys(resolve);\n    if (keys.length === 0) {\n        return of({});\n    }\n    const data = {};\n    return from(keys).pipe(mergeMap((key) => getResolver(resolve[key], futureARS, futureRSS, injector).pipe(first(), tap((value) => {\n        if (value instanceof RedirectCommand) {\n            throw redirectingNavigationError(new DefaultUrlSerializer(), value);\n        }\n        data[key] = value;\n    }))), takeLast(1), map(() => data), catchError((e) => (isEmptyError(e) ? EMPTY : throwError(e))));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, injector) {\n    const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n    const resolver = getTokenOrFunctionIdentity(injectionToken, closestInjector);\n    const resolverValue = resolver.resolve\n        ? resolver.resolve(futureARS, futureRSS)\n        : runInInjectionContext(closestInjector, () => resolver(futureARS, futureRSS));\n    return wrapIntoObservable(resolverValue);\n}\n\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n    return switchMap((v) => {\n        const nextResult = next(v);\n        if (nextResult) {\n            return from(nextResult).pipe(map(() => v));\n        }\n        return of(v);\n    });\n}\n\n/**\n * Provides a strategy for setting the page title after a router navigation.\n *\n * The built-in implementation traverses the router state snapshot and finds the deepest primary\n * outlet with `title` property. Given the `Routes` below, navigating to\n * `/base/child(popup:aux)` would result in the document title being set to \"child\".\n * ```ts\n * [\n *   {path: 'base', title: 'base', children: [\n *     {path: 'child', title: 'child'},\n *   ],\n *   {path: 'aux', outlet: 'popup', title: 'popupTitle'}\n * ]\n * ```\n *\n * This class can be used as a base class for custom title strategies. That is, you can create your\n * own class that extends the `TitleStrategy`. Note that in the above example, the `title`\n * from the named outlet is never used. However, a custom strategy might be implemented to\n * incorporate titles in named outlets.\n *\n * @publicApi\n * @see [Page title guide](guide/routing/common-router-tasks#setting-the-page-title)\n */\nclass TitleStrategy {\n    /**\n     * @returns The `title` of the deepest primary route.\n     */\n    buildTitle(snapshot) {\n        let pageTitle;\n        let route = snapshot.root;\n        while (route !== undefined) {\n            pageTitle = this.getResolvedTitleForRoute(route) ?? pageTitle;\n            route = route.children.find((child) => child.outlet === PRIMARY_OUTLET);\n        }\n        return pageTitle;\n    }\n    /**\n     * Given an `ActivatedRouteSnapshot`, returns the final value of the\n     * `Route.title` property, which can either be a static string or a resolved value.\n     */\n    getResolvedTitleForRoute(snapshot) {\n        return snapshot.data[RouteTitleKey];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: TitleStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: TitleStrategy, providedIn: 'root', useFactory: () => inject(DefaultTitleStrategy) });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: TitleStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: () => inject(DefaultTitleStrategy) }]\n        }] });\n/**\n * The default `TitleStrategy` used by the router that updates the title using the `Title` service.\n */\nclass DefaultTitleStrategy extends TitleStrategy {\n    title;\n    constructor(title) {\n        super();\n        this.title = title;\n    }\n    /**\n     * Sets the title of the browser to the given value.\n     *\n     * @param title The `pageTitle` from the deepest primary route.\n     */\n    updateTitle(snapshot) {\n        const title = this.buildTitle(snapshot);\n        if (title !== undefined) {\n            this.title.setTitle(title);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultTitleStrategy, deps: [{ token: i1.Title }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultTitleStrategy, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultTitleStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Title }] });\n\n/**\n * A DI token for the router service.\n *\n * @publicApi\n */\nconst ROUTER_CONFIGURATION = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router config' : '', {\n    providedIn: 'root',\n    factory: () => ({}),\n});\n\n/**\n * The DI token for a router configuration.\n *\n * `ROUTES` is a low level API for router configuration via dependency injection.\n *\n * We recommend that in almost all cases to use higher level APIs such as `RouterModule.forRoot()`,\n * `provideRouter`, or `Router.resetConfig()`.\n *\n * @publicApi\n */\nconst ROUTES = new InjectionToken(ngDevMode ? 'ROUTES' : '');\nclass RouterConfigLoader {\n    componentLoaders = new WeakMap();\n    childrenLoaders = new WeakMap();\n    onLoadStartListener;\n    onLoadEndListener;\n    compiler = inject(Compiler);\n    loadComponent(injector, route) {\n        if (this.componentLoaders.get(route)) {\n            return this.componentLoaders.get(route);\n        }\n        else if (route._loadedComponent) {\n            return of(route._loadedComponent);\n        }\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        const loadRunner = wrapIntoObservable(runInInjectionContext(injector, () => route.loadComponent())).pipe(map(maybeUnwrapDefaultExport), switchMap(maybeResolveResources), tap((component) => {\n            if (this.onLoadEndListener) {\n                this.onLoadEndListener(route);\n            }\n            (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                assertStandalone(route.path ?? '', component);\n            route._loadedComponent = component;\n        }), finalize(() => {\n            this.componentLoaders.delete(route);\n        }));\n        // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n        const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n        this.componentLoaders.set(route, loader);\n        return loader;\n    }\n    loadChildren(parentInjector, route) {\n        if (this.childrenLoaders.get(route)) {\n            return this.childrenLoaders.get(route);\n        }\n        else if (route._loadedRoutes) {\n            return of({ routes: route._loadedRoutes, injector: route._loadedInjector });\n        }\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        const moduleFactoryOrRoutes$ = loadChildren(route, this.compiler, parentInjector, this.onLoadEndListener);\n        const loadRunner = moduleFactoryOrRoutes$.pipe(finalize(() => {\n            this.childrenLoaders.delete(route);\n        }));\n        // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n        const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n        this.childrenLoaders.set(route, loader);\n        return loader;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterConfigLoader, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterConfigLoader, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterConfigLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * Executes a `route.loadChildren` callback and converts the result to an array of child routes and\n * an injector if that callback returned a module.\n *\n * This function is used for the route discovery during prerendering\n * in @angular-devkit/build-angular. If there are any updates to the contract here, it will require\n * an update to the extractor.\n */\nfunction loadChildren(route, compiler, parentInjector, onLoadEndListener) {\n    return wrapIntoObservable(runInInjectionContext(parentInjector, () => route.loadChildren())).pipe(map(maybeUnwrapDefaultExport), switchMap(maybeResolveResources), mergeMap((t) => {\n        if (t instanceof NgModuleFactory || Array.isArray(t)) {\n            return of(t);\n        }\n        else {\n            return from(compiler.compileModuleAsync(t));\n        }\n    }), map((factoryOrRoutes) => {\n        if (onLoadEndListener) {\n            onLoadEndListener(route);\n        }\n        // This injector comes from the `NgModuleRef` when lazy loading an `NgModule`. There is\n        // no injector associated with lazy loading a `Route` array.\n        let injector;\n        let rawRoutes;\n        let requireStandaloneComponents = false;\n        if (Array.isArray(factoryOrRoutes)) {\n            rawRoutes = factoryOrRoutes;\n            requireStandaloneComponents = true;\n        }\n        else {\n            injector = factoryOrRoutes.create(parentInjector).injector;\n            // When loading a module that doesn't provide `RouterModule.forChild()` preloader\n            // will get stuck in an infinite loop. The child module's Injector will look to\n            // its parent `Injector` when it doesn't find any ROUTES so it will return routes\n            // for it's parent module instead.\n            rawRoutes = injector.get(ROUTES, [], { optional: true, self: true }).flat();\n        }\n        const routes = rawRoutes.map(standardizeConfig);\n        (typeof ngDevMode === 'undefined' || ngDevMode) &&\n            validateConfig(routes, route.path, requireStandaloneComponents);\n        return { routes, injector };\n    }));\n}\nfunction isWrappedDefaultExport(value) {\n    // We use `in` here with a string key `'default'`, because we expect `DefaultExport` objects to be\n    // dynamically imported ES modules with a spec-mandated `default` key. Thus we don't expect that\n    // `default` will be a renamed property.\n    return value && typeof value === 'object' && 'default' in value;\n}\nfunction maybeUnwrapDefaultExport(input) {\n    // As per `isWrappedDefaultExport`, the `default` key here is generated by the browser and not\n    // subject to property renaming, so we reference it with bracket access.\n    return isWrappedDefaultExport(input) ? input['default'] : input;\n}\nfunction maybeResolveResources(value) {\n    // In JIT mode we usually resolve the resources of components on bootstrap, however\n    // that won't have happened for lazy-loaded components. Attempt to load any pending\n    // resources again here.\n    if ((typeof ngJitMode === 'undefined' || ngJitMode) && typeof fetch === 'function') {\n        return _resolveComponentResources(fetch)\n            .catch((error) => {\n            console.error(error);\n            return Promise.resolve();\n        })\n            .then(() => value);\n    }\n    return of(value);\n}\n\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nclass UrlHandlingStrategy {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UrlHandlingStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UrlHandlingStrategy, providedIn: 'root', useFactory: () => inject(DefaultUrlHandlingStrategy) });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UrlHandlingStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: () => inject(DefaultUrlHandlingStrategy) }]\n        }] });\n/**\n * @publicApi\n */\nclass DefaultUrlHandlingStrategy {\n    shouldProcessUrl(url) {\n        return true;\n    }\n    extract(url) {\n        return url;\n    }\n    merge(newUrlPart, wholeUrl) {\n        return newUrlPart;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultUrlHandlingStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultUrlHandlingStrategy, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultUrlHandlingStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst CREATE_VIEW_TRANSITION = new InjectionToken(ngDevMode ? 'view transition helper' : '');\nconst VIEW_TRANSITION_OPTIONS = new InjectionToken(ngDevMode ? 'view transition options' : '');\n/**\n * A helper function for using browser view transitions. This function skips the call to\n * `startViewTransition` if the browser does not support it.\n *\n * @returns A Promise that resolves when the view transition callback begins.\n */\nfunction createViewTransition(injector, from, to) {\n    const transitionOptions = injector.get(VIEW_TRANSITION_OPTIONS);\n    const document = injector.get(DOCUMENT);\n    if (!document.startViewTransition || transitionOptions.skipNextTransition) {\n        transitionOptions.skipNextTransition = false;\n        // The timing of `startViewTransition` is closer to a macrotask. It won't be called\n        // until the current event loop exits so we use a promise resolved in a timeout instead\n        // of Promise.resolve().\n        return new Promise((resolve) => setTimeout(resolve));\n    }\n    let resolveViewTransitionStarted;\n    const viewTransitionStarted = new Promise((resolve) => {\n        resolveViewTransitionStarted = resolve;\n    });\n    const transition = document.startViewTransition(() => {\n        resolveViewTransitionStarted();\n        // We don't actually update dom within the transition callback. The resolving of the above\n        // promise unblocks the Router navigation, which synchronously activates and deactivates\n        // routes (the DOM update). This view transition waits for the next change detection to\n        // complete (below), which includes the update phase of the routed components.\n        return createRenderPromise(injector);\n    });\n    transition.ready.catch((error) => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.error(error);\n        }\n    });\n    const { onViewTransitionCreated } = transitionOptions;\n    if (onViewTransitionCreated) {\n        runInInjectionContext(injector, () => onViewTransitionCreated({ transition, from, to }));\n    }\n    return viewTransitionStarted;\n}\n/**\n * Creates a promise that resolves after next render.\n */\nfunction createRenderPromise(injector) {\n    return new Promise((resolve) => {\n        // Wait for the microtask queue to empty after the next render happens (by waiting a macrotask).\n        // This ensures any follow-up renders in the microtask queue are completed before the\n        // view transition starts animating.\n        afterNextRender({ read: () => setTimeout(resolve) }, { injector });\n    });\n}\n\nconst NAVIGATION_ERROR_HANDLER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'navigation error handler' : '');\nclass NavigationTransitions {\n    // Some G3 targets expect the navigation object to be mutated (and not getting a new reference on changes).\n    currentNavigation = signal(null, ...(ngDevMode ? [{ debugName: \"currentNavigation\", equal: () => false }] : [{ equal: () => false }]));\n    currentTransition = null;\n    lastSuccessfulNavigation = null;\n    /**\n     * These events are used to communicate back to the Router about the state of the transition. The\n     * Router wants to respond to these events in various ways. Because the `NavigationTransition`\n     * class is not public, this event subject is not publicly exposed.\n     */\n    events = new Subject();\n    /**\n     * Used to abort the current transition with an error.\n     */\n    transitionAbortWithErrorSubject = new Subject();\n    configLoader = inject(RouterConfigLoader);\n    environmentInjector = inject(EnvironmentInjector);\n    destroyRef = inject(DestroyRef);\n    urlSerializer = inject(UrlSerializer);\n    rootContexts = inject(ChildrenOutletContexts);\n    location = inject(Location);\n    inputBindingEnabled = inject(INPUT_BINDER, { optional: true }) !== null;\n    titleStrategy = inject(TitleStrategy);\n    options = inject(ROUTER_CONFIGURATION, { optional: true }) || {};\n    paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || 'emptyOnly';\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    createViewTransition = inject(CREATE_VIEW_TRANSITION, { optional: true });\n    navigationErrorHandler = inject(NAVIGATION_ERROR_HANDLER, { optional: true });\n    navigationId = 0;\n    get hasRequestedNavigation() {\n        return this.navigationId !== 0;\n    }\n    transitions;\n    /**\n     * Hook that enables you to pause navigation after the preactivation phase.\n     * Used by `RouterModule`.\n     *\n     * @internal\n     */\n    afterPreactivation = () => of(void 0);\n    /** @internal */\n    rootComponentType = null;\n    destroyed = false;\n    constructor() {\n        const onLoadStart = (r) => this.events.next(new RouteConfigLoadStart(r));\n        const onLoadEnd = (r) => this.events.next(new RouteConfigLoadEnd(r));\n        this.configLoader.onLoadEndListener = onLoadEnd;\n        this.configLoader.onLoadStartListener = onLoadStart;\n        this.destroyRef.onDestroy(() => {\n            this.destroyed = true;\n        });\n    }\n    complete() {\n        this.transitions?.complete();\n    }\n    handleNavigationRequest(request) {\n        const id = ++this.navigationId;\n        // Navigation can happen as a side effect of template execution, as such we need to untrack signal updates\n        // (Writing to signals is not allowed while Angular renders the template)\n        // TODO: We might want to reconsider allowing navigation as side effect of template execution.\n        untracked(() => {\n            this.transitions?.next({\n                ...request,\n                extractedUrl: this.urlHandlingStrategy.extract(request.rawUrl),\n                targetSnapshot: null,\n                targetRouterState: null,\n                guards: { canActivateChecks: [], canDeactivateChecks: [] },\n                guardsResult: null,\n                abortController: new AbortController(),\n                id,\n            });\n        });\n    }\n    setupNavigations(router) {\n        this.transitions = new BehaviorSubject(null);\n        return this.transitions.pipe(filter((t) => t !== null), \n        // Using switchMap so we cancel executing navigations when a new one comes in\n        switchMap((overallTransitionState) => {\n            let completedOrAborted = false;\n            return of(overallTransitionState).pipe(switchMap((t) => {\n                // It is possible that `switchMap` fails to cancel previous navigations if a new one happens synchronously while the operator\n                // is processing the `next` notification of that previous navigation. This can happen when a new navigation (say 2) cancels a\n                // previous one (1) and yet another navigation (3) happens synchronously in response to the `NavigationCancel` event for (1).\n                // https://github.com/ReactiveX/rxjs/issues/7455\n                if (this.navigationId > overallTransitionState.id) {\n                    const cancellationReason = typeof ngDevMode === 'undefined' || ngDevMode\n                        ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}`\n                        : '';\n                    this.cancelNavigationTransition(overallTransitionState, cancellationReason, NavigationCancellationCode.SupersededByNewNavigation);\n                    return EMPTY;\n                }\n                this.currentTransition = overallTransitionState;\n                // Store the Navigation object\n                this.currentNavigation.set({\n                    id: t.id,\n                    initialUrl: t.rawUrl,\n                    extractedUrl: t.extractedUrl,\n                    targetBrowserUrl: typeof t.extras.browserUrl === 'string'\n                        ? this.urlSerializer.parse(t.extras.browserUrl)\n                        : t.extras.browserUrl,\n                    trigger: t.source,\n                    extras: t.extras,\n                    previousNavigation: !this.lastSuccessfulNavigation\n                        ? null\n                        : {\n                            ...this.lastSuccessfulNavigation,\n                            previousNavigation: null,\n                        },\n                    abort: () => t.abortController.abort(),\n                });\n                const urlTransition = !router.navigated || this.isUpdatingInternalState() || this.isUpdatedBrowserUrl();\n                const onSameUrlNavigation = t.extras.onSameUrlNavigation ?? router.onSameUrlNavigation;\n                if (!urlTransition && onSameUrlNavigation !== 'reload') {\n                    const reason = typeof ngDevMode === 'undefined' || ngDevMode\n                        ? `Navigation to ${t.rawUrl} was ignored because it is the same as the current Router URL.`\n                        : '';\n                    this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.rawUrl), reason, NavigationSkippedCode.IgnoredSameUrlNavigation));\n                    t.resolve(false);\n                    return EMPTY;\n                }\n                if (this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)) {\n                    return of(t).pipe(\n                    // Fire NavigationStart event\n                    switchMap((t) => {\n                        this.events.next(new NavigationStart(t.id, this.urlSerializer.serialize(t.extractedUrl), t.source, t.restoredState));\n                        if (t.id !== this.navigationId) {\n                            return EMPTY;\n                        }\n                        // This delay is required to match old behavior that forced\n                        // navigation to always be async\n                        return Promise.resolve(t);\n                    }), \n                    // Recognize\n                    recognize(this.environmentInjector, this.configLoader, this.rootComponentType, router.config, this.urlSerializer, this.paramsInheritanceStrategy), \n                    // Update URL if in `eager` update mode\n                    tap((t) => {\n                        overallTransitionState.targetSnapshot = t.targetSnapshot;\n                        overallTransitionState.urlAfterRedirects = t.urlAfterRedirects;\n                        this.currentNavigation.update((nav) => {\n                            nav.finalUrl = t.urlAfterRedirects;\n                            return nav;\n                        });\n                        // Fire RoutesRecognized\n                        const routesRecognized = new RoutesRecognized(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n                        this.events.next(routesRecognized);\n                    }));\n                }\n                else if (urlTransition &&\n                    this.urlHandlingStrategy.shouldProcessUrl(t.currentRawUrl)) {\n                    /* When the current URL shouldn't be processed, but the previous one\n                     * was, we handle this \"error condition\" by navigating to the\n                     * previously successful URL, but leaving the URL intact.*/\n                    const { id, extractedUrl, source, restoredState, extras } = t;\n                    const navStart = new NavigationStart(id, this.urlSerializer.serialize(extractedUrl), source, restoredState);\n                    this.events.next(navStart);\n                    const targetSnapshot = createEmptyState(this.rootComponentType).snapshot;\n                    this.currentTransition = overallTransitionState = {\n                        ...t,\n                        targetSnapshot,\n                        urlAfterRedirects: extractedUrl,\n                        extras: { ...extras, skipLocationChange: false, replaceUrl: false },\n                    };\n                    this.currentNavigation.update((nav) => {\n                        nav.finalUrl = extractedUrl;\n                        return nav;\n                    });\n                    return of(overallTransitionState);\n                }\n                else {\n                    /* When neither the current or previous URL can be processed, do\n                     * nothing other than update router's internal reference to the\n                     * current \"settled\" URL. This way the next navigation will be coming\n                     * from the current URL in the browser.\n                     */\n                    const reason = typeof ngDevMode === 'undefined' || ngDevMode\n                        ? `Navigation was ignored because the UrlHandlingStrategy` +\n                            ` indicated neither the current URL ${t.currentRawUrl} nor target URL ${t.rawUrl} should be processed.`\n                        : '';\n                    this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, NavigationSkippedCode.IgnoredByUrlHandlingStrategy));\n                    t.resolve(false);\n                    return EMPTY;\n                }\n            }), \n            // --- GUARDS ---\n            tap((t) => {\n                const guardsStart = new GuardsCheckStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n                this.events.next(guardsStart);\n            }), map((t) => {\n                this.currentTransition = overallTransitionState = {\n                    ...t,\n                    guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, this.rootContexts),\n                };\n                return overallTransitionState;\n            }), checkGuards(this.environmentInjector, (evt) => this.events.next(evt)), tap((t) => {\n                overallTransitionState.guardsResult = t.guardsResult;\n                if (t.guardsResult && typeof t.guardsResult !== 'boolean') {\n                    throw redirectingNavigationError(this.urlSerializer, t.guardsResult);\n                }\n                const guardsEnd = new GuardsCheckEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n                this.events.next(guardsEnd);\n            }), filter((t) => {\n                if (!t.guardsResult) {\n                    this.cancelNavigationTransition(t, '', NavigationCancellationCode.GuardRejected);\n                    return false;\n                }\n                return true;\n            }), \n            // --- RESOLVE ---\n            switchTap((t) => {\n                if (t.guards.canActivateChecks.length === 0) {\n                    return undefined;\n                }\n                return of(t).pipe(tap((t) => {\n                    const resolveStart = new ResolveStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n                    this.events.next(resolveStart);\n                }), switchMap((t) => {\n                    let dataResolved = false;\n                    return of(t).pipe(resolveData(this.paramsInheritanceStrategy, this.environmentInjector), tap({\n                        next: () => (dataResolved = true),\n                        complete: () => {\n                            if (!dataResolved) {\n                                this.cancelNavigationTransition(t, typeof ngDevMode === 'undefined' || ngDevMode\n                                    ? `At least one route resolver didn't emit any value.`\n                                    : '', NavigationCancellationCode.NoDataFromResolver);\n                            }\n                        },\n                    }));\n                }), tap((t) => {\n                    const resolveEnd = new ResolveEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n                    this.events.next(resolveEnd);\n                }));\n            }), \n            // --- LOAD COMPONENTS ---\n            switchTap((t) => {\n                const loadComponents = (route) => {\n                    const loaders = [];\n                    if (route.routeConfig?.loadComponent) {\n                        const injector = getClosestRouteInjector(route) ?? this.environmentInjector;\n                        loaders.push(this.configLoader.loadComponent(injector, route.routeConfig).pipe(tap((loadedComponent) => {\n                            route.component = loadedComponent;\n                        }), map(() => void 0)));\n                    }\n                    for (const child of route.children) {\n                        loaders.push(...loadComponents(child));\n                    }\n                    return loaders;\n                };\n                return combineLatest(loadComponents(t.targetSnapshot.root)).pipe(defaultIfEmpty(null), take(1));\n            }), switchTap(() => this.afterPreactivation()), switchMap(() => {\n                const { currentSnapshot, targetSnapshot } = overallTransitionState;\n                const viewTransitionStarted = this.createViewTransition?.(this.environmentInjector, currentSnapshot.root, targetSnapshot.root);\n                // If view transitions are enabled, block the navigation until the view\n                // transition callback starts. Otherwise, continue immediately.\n                return viewTransitionStarted\n                    ? from(viewTransitionStarted).pipe(map(() => overallTransitionState))\n                    : of(overallTransitionState);\n            }), map((t) => {\n                const targetRouterState = createRouterState(router.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n                this.currentTransition = overallTransitionState = { ...t, targetRouterState };\n                this.currentNavigation.update((nav) => {\n                    nav.targetRouterState = targetRouterState;\n                    return nav;\n                });\n                return overallTransitionState;\n            }), tap(() => {\n                this.events.next(new BeforeActivateRoutes());\n            }), activateRoutes(this.rootContexts, router.routeReuseStrategy, (evt) => this.events.next(evt), this.inputBindingEnabled), \n            // Ensure that if some observable used to drive the transition doesn't\n            // complete, the navigation still finalizes This should never happen, but\n            // this is done as a safety measure to avoid surfacing this error (#49567).\n            take(1), takeUntil(new Observable((subscriber) => {\n                const abortSignal = overallTransitionState.abortController.signal;\n                const handler = () => subscriber.next();\n                abortSignal.addEventListener('abort', handler);\n                return () => abortSignal.removeEventListener('abort', handler);\n            }).pipe(\n            // Ignore aborts if we are already completed, canceled, or are in the activation stage (we have targetRouterState)\n            filter(() => !completedOrAborted && !overallTransitionState.targetRouterState), tap(() => {\n                this.cancelNavigationTransition(overallTransitionState, overallTransitionState.abortController.signal.reason + '', NavigationCancellationCode.Aborted);\n            }))), tap({\n                next: (t) => {\n                    completedOrAborted = true;\n                    this.lastSuccessfulNavigation = untracked(this.currentNavigation);\n                    this.events.next(new NavigationEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects)));\n                    this.titleStrategy?.updateTitle(t.targetRouterState.snapshot);\n                    t.resolve(true);\n                },\n                complete: () => {\n                    completedOrAborted = true;\n                },\n            }), \n            // There used to be a lot more logic happening directly within the\n            // transition Observable. Some of this logic has been refactored out to\n            // other places but there may still be errors that happen there. This gives\n            // us a way to cancel the transition from the outside. This may also be\n            // required in the future to support something like the abort signal of the\n            // Navigation API where the navigation gets aborted from outside the\n            // transition.\n            takeUntil(this.transitionAbortWithErrorSubject.pipe(tap((err) => {\n                throw err;\n            }))), finalize(() => {\n                /* When the navigation stream finishes either through error or success,\n                 * we set the `completed` or `errored` flag. However, there are some\n                 * situations where we could get here without either of those being set.\n                 * For instance, a redirect during NavigationStart. Therefore, this is a\n                 * catch-all to make sure the NavigationCancel event is fired when a\n                 * navigation gets cancelled but not caught by other means. */\n                if (!completedOrAborted) {\n                    const cancelationReason = typeof ngDevMode === 'undefined' || ngDevMode\n                        ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}`\n                        : '';\n                    this.cancelNavigationTransition(overallTransitionState, cancelationReason, NavigationCancellationCode.SupersededByNewNavigation);\n                }\n                // Only clear current navigation if it is still set to the one that\n                // finalized.\n                if (this.currentTransition?.id === overallTransitionState.id) {\n                    this.currentNavigation.set(null);\n                    this.currentTransition = null;\n                }\n            }), catchError((e) => {\n                // If the application is already destroyed, the catch block should not\n                // execute anything in practice because other resources have already\n                // been released and destroyed.\n                if (this.destroyed) {\n                    overallTransitionState.resolve(false);\n                    return EMPTY;\n                }\n                completedOrAborted = true;\n                /* This error type is issued during Redirect, and is handled as a\n                 * cancellation rather than an error. */\n                if (isNavigationCancelingError(e)) {\n                    this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e.message, e.cancellationCode));\n                    // When redirecting, we need to delay resolving the navigation\n                    // promise and push it to the redirect navigation\n                    if (!isRedirectingNavigationCancelingError(e)) {\n                        overallTransitionState.resolve(false);\n                    }\n                    else {\n                        this.events.next(new RedirectRequest(e.url, e.navigationBehaviorOptions));\n                    }\n                    /* All other errors should reset to the router's internal URL reference\n                     * to the pre-error state. */\n                }\n                else {\n                    const navigationError = new NavigationError(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e, overallTransitionState.targetSnapshot ?? undefined);\n                    try {\n                        const navigationErrorHandlerResult = runInInjectionContext(this.environmentInjector, () => this.navigationErrorHandler?.(navigationError));\n                        if (navigationErrorHandlerResult instanceof RedirectCommand) {\n                            const { message, cancellationCode } = redirectingNavigationError(this.urlSerializer, navigationErrorHandlerResult);\n                            this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), message, cancellationCode));\n                            this.events.next(new RedirectRequest(navigationErrorHandlerResult.redirectTo, navigationErrorHandlerResult.navigationBehaviorOptions));\n                        }\n                        else {\n                            this.events.next(navigationError);\n                            throw e;\n                        }\n                    }\n                    catch (ee) {\n                        // TODO(atscott): consider flipping the default behavior of\n                        // resolveNavigationPromiseOnError to be `resolve(false)` when\n                        // undefined. This is the most sane thing to do given that\n                        // applications very rarely handle the promise rejection and, as a\n                        // result, would get \"unhandled promise rejection\" console logs.\n                        // The vast majority of applications would not be affected by this\n                        // change so omitting a migration seems reasonable. Instead,\n                        // applications that rely on rejection can specifically opt-in to the\n                        // old behavior.\n                        if (this.options.resolveNavigationPromiseOnError) {\n                            overallTransitionState.resolve(false);\n                        }\n                        else {\n                            overallTransitionState.reject(ee);\n                        }\n                    }\n                }\n                return EMPTY;\n            }));\n            // casting because `pipe` returns observable({}) when called with 8+ arguments\n        }));\n    }\n    cancelNavigationTransition(t, reason, code) {\n        const navCancel = new NavigationCancel(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, code);\n        this.events.next(navCancel);\n        t.resolve(false);\n    }\n    /**\n     * @returns Whether we're navigating to somewhere that is not what the Router is\n     * currently set to.\n     */\n    isUpdatingInternalState() {\n        // TODO(atscott): The serializer should likely be used instead of\n        // `UrlTree.toString()`. Custom serializers are often written to handle\n        // things better than the default one (objects, for example will be\n        // [Object object] with the custom serializer and be \"the same\" when they\n        // aren't).\n        // (Same for isUpdatedBrowserUrl)\n        return (this.currentTransition?.extractedUrl.toString() !==\n            this.currentTransition?.currentUrlTree.toString());\n    }\n    /**\n     * @returns Whether we're updating the browser URL to something new (navigation is going\n     * to somewhere not displayed in the URL bar and we will update the URL\n     * bar if navigation succeeds).\n     */\n    isUpdatedBrowserUrl() {\n        // The extracted URL is the part of the URL that this application cares about. `extract` may\n        // return only part of the browser URL and that part may have not changed even if some other\n        // portion of the URL did.\n        const currentBrowserUrl = this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(true)));\n        const currentNavigation = untracked(this.currentNavigation);\n        const targetBrowserUrl = currentNavigation?.targetBrowserUrl ?? currentNavigation?.extractedUrl;\n        return (currentBrowserUrl.toString() !== targetBrowserUrl?.toString() &&\n            !currentNavigation?.extras.skipLocationChange);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NavigationTransitions, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NavigationTransitions, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NavigationTransitions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\nfunction isBrowserTriggeredNavigation(source) {\n    return source !== IMPERATIVE_NAVIGATION;\n}\n\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nclass RouteReuseStrategy {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouteReuseStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouteReuseStrategy, providedIn: 'root', useFactory: () => inject(DefaultRouteReuseStrategy) });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouteReuseStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: () => inject(DefaultRouteReuseStrategy) }]\n        }] });\n/**\n * @description\n *\n * This base route reuse strategy only reuses routes when the matched router configs are\n * identical. This prevents components from being destroyed and recreated\n * when just the route parameters, query parameters or fragment change\n * (that is, the existing component is _reused_).\n *\n * This strategy does not store any routes for later reuse.\n *\n * Angular uses this strategy by default.\n *\n *\n * It can be used as a base class for custom route reuse strategies, i.e. you can create your own\n * class that extends the `BaseRouteReuseStrategy` one.\n * @publicApi\n */\nclass BaseRouteReuseStrategy {\n    /**\n     * Whether the given route should detach for later reuse.\n     * Always returns false for `BaseRouteReuseStrategy`.\n     * */\n    shouldDetach(route) {\n        return false;\n    }\n    /**\n     * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n     */\n    store(route, detachedTree) { }\n    /** Returns `false`, meaning the route (and its subtree) is never reattached */\n    shouldAttach(route) {\n        return false;\n    }\n    /** Returns `null` because this strategy does not store routes for later re-use. */\n    retrieve(route) {\n        return null;\n    }\n    /**\n     * Determines if a route should be reused.\n     * This strategy returns `true` when the future route config and current route config are\n     * identical.\n     */\n    shouldReuseRoute(future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    }\n}\nclass DefaultRouteReuseStrategy extends BaseRouteReuseStrategy {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultRouteReuseStrategy, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultRouteReuseStrategy, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultRouteReuseStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass StateManager {\n    urlSerializer = inject(UrlSerializer);\n    options = inject(ROUTER_CONFIGURATION, { optional: true }) || {};\n    canceledNavigationResolution = this.options.canceledNavigationResolution || 'replace';\n    location = inject(Location);\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n    currentUrlTree = new UrlTree();\n    /**\n     * Returns the currently activated `UrlTree`.\n     *\n     * This `UrlTree` shows only URLs that the `Router` is configured to handle (through\n     * `UrlHandlingStrategy`).\n     *\n     * The value is set after finding the route config tree to activate but before activating the\n     * route.\n     */\n    getCurrentUrlTree() {\n        return this.currentUrlTree;\n    }\n    rawUrlTree = this.currentUrlTree;\n    /**\n     * Returns a `UrlTree` that is represents what the browser is actually showing.\n     *\n     * In the life of a navigation transition:\n     * 1. When a navigation begins, the raw `UrlTree` is updated to the full URL that's being\n     * navigated to.\n     * 2. During a navigation, redirects are applied, which might only apply to _part_ of the URL (due\n     * to `UrlHandlingStrategy`).\n     * 3. Just before activation, the raw `UrlTree` is updated to include the redirects on top of the\n     * original raw URL.\n     *\n     * Note that this is _only_ here to support `UrlHandlingStrategy.extract` and\n     * `UrlHandlingStrategy.shouldProcessUrl`. Without those APIs, the current `UrlTree` would not\n     * deviated from the raw `UrlTree`.\n     *\n     * For `extract`, a raw `UrlTree` is needed because `extract` may only return part\n     * of the navigation URL. Thus, the current `UrlTree` may only represent _part_ of the browser\n     * URL. When a navigation gets cancelled and the router needs to reset the URL or a new navigation\n     * occurs, it needs to know the _whole_ browser URL, not just the part handled by\n     * `UrlHandlingStrategy`.\n     * For `shouldProcessUrl`, when the return is `false`, the router ignores the navigation but\n     * still updates the raw `UrlTree` with the assumption that the navigation was caused by the\n     * location change listener due to a URL update by the AngularJS router. In this case, the router\n     * still need to know what the browser's URL is for future navigations.\n     */\n    getRawUrlTree() {\n        return this.rawUrlTree;\n    }\n    createBrowserPath({ finalUrl, initialUrl, targetBrowserUrl }) {\n        const rawUrl = finalUrl !== undefined ? this.urlHandlingStrategy.merge(finalUrl, initialUrl) : initialUrl;\n        const url = targetBrowserUrl ?? rawUrl;\n        const path = url instanceof UrlTree ? this.urlSerializer.serialize(url) : url;\n        return path;\n    }\n    commitTransition({ targetRouterState, finalUrl, initialUrl }) {\n        // If we are committing the transition after having a final URL and target state, we're updating\n        // all pieces of the state. Otherwise, we likely skipped the transition (due to URL handling strategy)\n        // and only want to update the rawUrlTree, which represents the browser URL (and doesn't necessarily match router state).\n        if (finalUrl && targetRouterState) {\n            this.currentUrlTree = finalUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(finalUrl, initialUrl);\n            this.routerState = targetRouterState;\n        }\n        else {\n            this.rawUrlTree = initialUrl;\n        }\n    }\n    routerState = createEmptyState(null);\n    /** Returns the current RouterState. */\n    getRouterState() {\n        return this.routerState;\n    }\n    stateMemento = this.createStateMemento();\n    updateStateMemento() {\n        this.stateMemento = this.createStateMemento();\n    }\n    createStateMemento() {\n        return {\n            rawUrlTree: this.rawUrlTree,\n            currentUrlTree: this.currentUrlTree,\n            routerState: this.routerState,\n        };\n    }\n    resetInternalState({ finalUrl }) {\n        this.routerState = this.stateMemento.routerState;\n        this.currentUrlTree = this.stateMemento.currentUrlTree;\n        // Note here that we use the urlHandlingStrategy to get the reset `rawUrlTree` because it may be\n        // configured to handle only part of the navigation URL. This means we would only want to reset\n        // the part of the navigation handled by the Angular router rather than the whole URL. In\n        // addition, the URLHandlingStrategy may be configured to specifically preserve parts of the URL\n        // when merging, such as the query params so they are not lost on a refresh.\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, finalUrl ?? this.rawUrlTree);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: StateManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: StateManager, providedIn: 'root', useFactory: () => inject(HistoryStateManager) });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: StateManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: () => inject(HistoryStateManager) }]\n        }] });\nclass HistoryStateManager extends StateManager {\n    /**\n     * The id of the currently active page in the router.\n     * Updated to the transition's target id on a successful navigation.\n     *\n     * This is used to track what page the router last activated. When an attempted navigation fails,\n     * the router can then use this to compute how to restore the state back to the previously active\n     * page.\n     */\n    currentPageId = 0;\n    lastSuccessfulId = -1;\n    restoredState() {\n        return this.location.getState();\n    }\n    /**\n     * The ɵrouterPageId of whatever page is currently active in the browser history. This is\n     * important for computing the target page id for new navigations because we need to ensure each\n     * page id in the browser history is 1 more than the previous entry.\n     */\n    get browserPageId() {\n        if (this.canceledNavigationResolution !== 'computed') {\n            return this.currentPageId;\n        }\n        return this.restoredState()?.ɵrouterPageId ?? this.currentPageId;\n    }\n    registerNonRouterCurrentEntryChangeListener(listener) {\n        return this.location.subscribe((event) => {\n            if (event['type'] === 'popstate') {\n                // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n                // hybrid apps.\n                setTimeout(() => {\n                    listener(event['url'], event.state, 'popstate');\n                });\n            }\n        });\n    }\n    handleRouterEvent(e, currentTransition) {\n        if (e instanceof NavigationStart) {\n            this.updateStateMemento();\n        }\n        else if (e instanceof NavigationSkipped) {\n            this.commitTransition(currentTransition);\n        }\n        else if (e instanceof RoutesRecognized) {\n            if (this.urlUpdateStrategy === 'eager') {\n                if (!currentTransition.extras.skipLocationChange) {\n                    this.setBrowserUrl(this.createBrowserPath(currentTransition), currentTransition);\n                }\n            }\n        }\n        else if (e instanceof BeforeActivateRoutes) {\n            this.commitTransition(currentTransition);\n            if (this.urlUpdateStrategy === 'deferred' && !currentTransition.extras.skipLocationChange) {\n                this.setBrowserUrl(this.createBrowserPath(currentTransition), currentTransition);\n            }\n        }\n        else if (e instanceof NavigationCancel &&\n            e.code !== NavigationCancellationCode.SupersededByNewNavigation &&\n            e.code !== NavigationCancellationCode.Redirect) {\n            this.restoreHistory(currentTransition);\n        }\n        else if (e instanceof NavigationError) {\n            this.restoreHistory(currentTransition, true);\n        }\n        else if (e instanceof NavigationEnd) {\n            this.lastSuccessfulId = e.id;\n            this.currentPageId = this.browserPageId;\n        }\n    }\n    setBrowserUrl(path, { extras, id }) {\n        const { replaceUrl, state } = extras;\n        if (this.location.isCurrentPathEqualTo(path) || !!replaceUrl) {\n            // replacements do not update the target page\n            const currentBrowserPageId = this.browserPageId;\n            const newState = {\n                ...state,\n                ...this.generateNgRouterState(id, currentBrowserPageId),\n            };\n            this.location.replaceState(path, '', newState);\n        }\n        else {\n            const newState = {\n                ...state,\n                ...this.generateNgRouterState(id, this.browserPageId + 1),\n            };\n            this.location.go(path, '', newState);\n        }\n    }\n    /**\n     * Performs the necessary rollback action to restore the browser URL to the\n     * state before the transition.\n     */\n    restoreHistory(navigation, restoringFromCaughtError = false) {\n        if (this.canceledNavigationResolution === 'computed') {\n            const currentBrowserPageId = this.browserPageId;\n            const targetPagePosition = this.currentPageId - currentBrowserPageId;\n            if (targetPagePosition !== 0) {\n                this.location.historyGo(targetPagePosition);\n            }\n            else if (this.getCurrentUrlTree() === navigation.finalUrl && targetPagePosition === 0) {\n                // We got to the activation stage (where currentUrlTree is set to the navigation's\n                // finalUrl), but we weren't moving anywhere in history (skipLocationChange or replaceUrl).\n                // We still need to reset the router state back to what it was when the navigation started.\n                this.resetInternalState(navigation);\n                this.resetUrlToCurrentUrlTree();\n            }\n            else ;\n        }\n        else if (this.canceledNavigationResolution === 'replace') {\n            // TODO(atscott): It seems like we should _always_ reset the state here. It would be a no-op\n            // for `deferred` navigations that haven't change the internal state yet because guards\n            // reject. For 'eager' navigations, it seems like we also really should reset the state\n            // because the navigation was cancelled. Investigate if this can be done by running TGP.\n            if (restoringFromCaughtError) {\n                this.resetInternalState(navigation);\n            }\n            this.resetUrlToCurrentUrlTree();\n        }\n    }\n    resetUrlToCurrentUrlTree() {\n        this.location.replaceState(this.urlSerializer.serialize(this.getRawUrlTree()), '', this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId));\n    }\n    generateNgRouterState(navigationId, routerPageId) {\n        if (this.canceledNavigationResolution === 'computed') {\n            return { navigationId, ɵrouterPageId: routerPageId };\n        }\n        return { navigationId };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: HistoryStateManager, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: HistoryStateManager, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: HistoryStateManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Performs the given action once the router finishes its next/current navigation.\n *\n * The navigation is considered complete under the following conditions:\n * - `NavigationCancel` event emits and the code is not `NavigationCancellationCode.Redirect` or\n * `NavigationCancellationCode.SupersededByNewNavigation`. In these cases, the\n * redirecting/superseding navigation must finish.\n * - `NavigationError`, `NavigationEnd`, or `NavigationSkipped` event emits\n */\nfunction afterNextNavigation(router, action) {\n    router.events\n        .pipe(filter((e) => e instanceof NavigationEnd ||\n        e instanceof NavigationCancel ||\n        e instanceof NavigationError ||\n        e instanceof NavigationSkipped), map((e) => {\n        if (e instanceof NavigationEnd || e instanceof NavigationSkipped) {\n            return 0 /* NavigationResult.COMPLETE */;\n        }\n        const redirecting = e instanceof NavigationCancel\n            ? e.code === NavigationCancellationCode.Redirect ||\n                e.code === NavigationCancellationCode.SupersededByNewNavigation\n            : false;\n        return redirecting ? 2 /* NavigationResult.REDIRECTING */ : 1 /* NavigationResult.FAILED */;\n    }), filter((result) => result !== 2 /* NavigationResult.REDIRECTING */), take(1))\n        .subscribe(() => {\n        action();\n    });\n}\n\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `true`\n * (exact = true).\n */\nconst exactMatchOptions = {\n    paths: 'exact',\n    fragment: 'ignored',\n    matrixParams: 'ignored',\n    queryParams: 'exact',\n};\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `false`\n * (exact = false).\n */\nconst subsetMatchOptions = {\n    paths: 'subset',\n    fragment: 'ignored',\n    matrixParams: 'ignored',\n    queryParams: 'subset',\n};\n/**\n * @description\n *\n * A service that facilitates navigation among views and URL manipulation capabilities.\n * This service is provided in the root scope and configured with [provideRouter](api/router/provideRouter).\n *\n * @see {@link Route}\n * @see {@link provideRouter}\n * @see [Routing and Navigation Guide](guide/routing/common-router-tasks).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass Router {\n    get currentUrlTree() {\n        return this.stateManager.getCurrentUrlTree();\n    }\n    get rawUrlTree() {\n        return this.stateManager.getRawUrlTree();\n    }\n    disposed = false;\n    nonRouterCurrentEntryChangeSubscription;\n    console = inject(_Console);\n    stateManager = inject(StateManager);\n    options = inject(ROUTER_CONFIGURATION, { optional: true }) || {};\n    pendingTasks = inject(_PendingTasksInternal);\n    urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n    navigationTransitions = inject(NavigationTransitions);\n    urlSerializer = inject(UrlSerializer);\n    location = inject(Location);\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    injector = inject(EnvironmentInjector);\n    /**\n     * The private `Subject` type for the public events exposed in the getter. This is used internally\n     * to push events to. The separate field allows us to expose separate types in the public API\n     * (i.e., an Observable rather than the Subject).\n     */\n    _events = new Subject();\n    /**\n     * An event stream for routing events.\n     */\n    get events() {\n        // TODO(atscott): This _should_ be events.asObservable(). However, this change requires internal\n        // cleanup: tests are doing `(route.events as Subject<Event>).next(...)`. This isn't\n        // allowed/supported but we still have to fix these or file bugs against the teams before making\n        // the change.\n        return this._events;\n    }\n    /**\n     * The current state of routing in this NgModule.\n     */\n    get routerState() {\n        return this.stateManager.getRouterState();\n    }\n    /**\n     * True if at least one navigation event has occurred,\n     * false otherwise.\n     */\n    navigated = false;\n    /**\n     * A strategy for re-using routes.\n     *\n     * @deprecated Configure using `providers` instead:\n     *   `{provide: RouteReuseStrategy, useClass: MyStrategy}`.\n     */\n    routeReuseStrategy = inject(RouteReuseStrategy);\n    /**\n     * How to handle a navigation request to the current URL.\n     *\n     *\n     * @deprecated Configure this through `provideRouter` or `RouterModule.forRoot` instead.\n     * @see {@link withRouterConfig}\n     * @see {@link provideRouter}\n     * @see {@link RouterModule}\n     */\n    onSameUrlNavigation = this.options.onSameUrlNavigation || 'ignore';\n    config = inject(ROUTES, { optional: true })?.flat() ?? [];\n    /**\n     * Indicates whether the application has opted in to binding Router data to component inputs.\n     *\n     * This option is enabled by the `withComponentInputBinding` feature of `provideRouter` or\n     * `bindToComponentInputs` in the `ExtraOptions` of `RouterModule.forRoot`.\n     */\n    componentInputBindingEnabled = !!inject(INPUT_BINDER, { optional: true });\n    /**\n     * Signal of the current `Navigation` object when the router is navigating, and `null` when idle.\n     *\n     * Note: The current navigation becomes to null after the NavigationEnd event is emitted.\n     */\n    currentNavigation = this.navigationTransitions.currentNavigation.asReadonly();\n    constructor() {\n        this.resetConfig(this.config);\n        this.navigationTransitions.setupNavigations(this).subscribe({\n            error: (e) => {\n                this.console.warn(ngDevMode ? `Unhandled Navigation Error: ${e}` : e);\n            },\n        });\n        this.subscribeToNavigationEvents();\n    }\n    eventsSubscription = new Subscription();\n    subscribeToNavigationEvents() {\n        const subscription = this.navigationTransitions.events.subscribe((e) => {\n            try {\n                const currentTransition = this.navigationTransitions.currentTransition;\n                const currentNavigation = untracked(this.navigationTransitions.currentNavigation);\n                if (currentTransition !== null && currentNavigation !== null) {\n                    this.stateManager.handleRouterEvent(e, currentNavigation);\n                    if (e instanceof NavigationCancel &&\n                        e.code !== NavigationCancellationCode.Redirect &&\n                        e.code !== NavigationCancellationCode.SupersededByNewNavigation) {\n                        // It seems weird that `navigated` is set to `true` when the navigation is rejected,\n                        // however it's how things were written initially. Investigation would need to be done\n                        // to determine if this can be removed.\n                        this.navigated = true;\n                    }\n                    else if (e instanceof NavigationEnd) {\n                        this.navigated = true;\n                    }\n                    else if (e instanceof RedirectRequest) {\n                        const opts = e.navigationBehaviorOptions;\n                        const mergedTree = this.urlHandlingStrategy.merge(e.url, currentTransition.currentRawUrl);\n                        const extras = {\n                            browserUrl: currentTransition.extras.browserUrl,\n                            info: currentTransition.extras.info,\n                            skipLocationChange: currentTransition.extras.skipLocationChange,\n                            // The URL is already updated at this point if we have 'eager' URL\n                            // updates or if the navigation was triggered by the browser (back\n                            // button, URL bar, etc). We want to replace that item in history\n                            // if the navigation is rejected.\n                            replaceUrl: currentTransition.extras.replaceUrl ||\n                                this.urlUpdateStrategy === 'eager' ||\n                                isBrowserTriggeredNavigation(currentTransition.source),\n                            // allow developer to override default options with RedirectCommand\n                            ...opts,\n                        };\n                        this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras, {\n                            resolve: currentTransition.resolve,\n                            reject: currentTransition.reject,\n                            promise: currentTransition.promise,\n                        });\n                    }\n                }\n                // Note that it's important to have the Router process the events _before_ the event is\n                // pushed through the public observable. This ensures the correct router state is in place\n                // before applications observe the events.\n                if (isPublicRouterEvent(e)) {\n                    this._events.next(e);\n                }\n            }\n            catch (e) {\n                this.navigationTransitions.transitionAbortWithErrorSubject.next(e);\n            }\n        });\n        this.eventsSubscription.add(subscription);\n    }\n    /** @internal */\n    resetRootComponentType(rootComponentType) {\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = rootComponentType;\n        this.navigationTransitions.rootComponentType = rootComponentType;\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    initialNavigation() {\n        this.setUpLocationChangeListener();\n        if (!this.navigationTransitions.hasRequestedNavigation) {\n            this.navigateToSyncWithBrowser(this.location.path(true), IMPERATIVE_NAVIGATION, this.stateManager.restoredState());\n        }\n    }\n    /**\n     * Sets up the location change listener. This listener detects navigations triggered from outside\n     * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n     * navigation so that the correct events, guards, etc. are triggered.\n     */\n    setUpLocationChangeListener() {\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        this.nonRouterCurrentEntryChangeSubscription ??=\n            this.stateManager.registerNonRouterCurrentEntryChangeListener((url, state, source) => {\n                this.navigateToSyncWithBrowser(url, source, state);\n            });\n    }\n    /**\n     * Schedules a router navigation to synchronize Router state with the browser state.\n     *\n     * This is done as a response to a popstate event and the initial navigation. These\n     * two scenarios represent times when the browser URL/state has been updated and\n     * the Router needs to respond to ensure its internal state matches.\n     */\n    navigateToSyncWithBrowser(url, source, state) {\n        const extras = { replaceUrl: true };\n        // TODO: restoredState should always include the entire state, regardless\n        // of navigationId. This requires a breaking change to update the type on\n        // NavigationStart’s restoredState, which currently requires navigationId\n        // to always be present. The Router used to only restore history state if\n        // a navigationId was present.\n        // The stored navigationId is used by the RouterScroller to retrieve the scroll\n        // position for the page.\n        const restoredState = state?.navigationId ? state : null;\n        // Separate to NavigationStart.restoredState, we must also restore the state to\n        // history.state and generate a new navigationId, since it will be overwritten\n        if (state) {\n            const stateCopy = { ...state };\n            delete stateCopy.navigationId;\n            delete stateCopy.ɵrouterPageId;\n            if (Object.keys(stateCopy).length !== 0) {\n                extras.state = stateCopy;\n            }\n        }\n        const urlTree = this.parseUrl(url);\n        this.scheduleNavigation(urlTree, source, restoredState, extras).catch((e) => {\n            if (this.disposed) {\n                return;\n            }\n            this.injector.get(_INTERNAL_APPLICATION_ERROR_HANDLER)(e);\n        });\n    }\n    /** The current URL. */\n    get url() {\n        return this.serializeUrl(this.currentUrlTree);\n    }\n    /**\n     * Returns the current `Navigation` object when the router is navigating,\n     * and `null` when idle.\n     *\n     * @deprecated 20.2 Use the `currentNavigation` signal instead.\n     */\n    getCurrentNavigation() {\n        return untracked(this.navigationTransitions.currentNavigation);\n    }\n    /**\n     * The `Navigation` object of the most recent navigation to succeed and `null` if there\n     *     has not been a successful navigation yet.\n     */\n    get lastSuccessfulNavigation() {\n        return this.navigationTransitions.lastSuccessfulNavigation;\n    }\n    /**\n     * Resets the route configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```ts\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    resetConfig(config) {\n        (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(config);\n        this.config = config.map(standardizeConfig);\n        this.navigated = false;\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        this.dispose();\n    }\n    /** Disposes of the router. */\n    dispose() {\n        // We call `unsubscribe()` to release observers, as users may forget to\n        // unsubscribe manually when subscribing to `router.events`. We do not call\n        // `complete()` because it is unsafe; if someone subscribes using the `first`\n        // operator and the observable completes before emitting a value,\n        // RxJS will throw an error.\n        this._events.unsubscribe();\n        this.navigationTransitions.complete();\n        if (this.nonRouterCurrentEntryChangeSubscription) {\n            this.nonRouterCurrentEntryChangeSubscription.unsubscribe();\n            this.nonRouterCurrentEntryChangeSubscription = undefined;\n        }\n        this.disposed = true;\n        this.eventsSubscription.unsubscribe();\n    }\n    /**\n     * Appends URL segments to the current URL tree to create a new URL tree.\n     *\n     * @param commands An array of URL fragments with which to construct the new URL tree.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n     * property of the options object, if supplied.\n     * @param navigationExtras Options that control the navigation strategy.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     *\n     * Note that a value of `null` or `undefined` for `relativeTo` indicates that the\n     * tree should be created relative to the root.\n     * ```\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n        const { relativeTo, queryParams, fragment, queryParamsHandling, preserveFragment } = navigationExtras;\n        const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        let q = null;\n        switch (queryParamsHandling ?? this.options.defaultQueryParamsHandling) {\n            case 'merge':\n                q = { ...this.currentUrlTree.queryParams, ...queryParams };\n                break;\n            case 'preserve':\n                q = this.currentUrlTree.queryParams;\n                break;\n            default:\n                q = queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        let relativeToUrlSegmentGroup;\n        try {\n            const relativeToSnapshot = relativeTo ? relativeTo.snapshot : this.routerState.snapshot.root;\n            relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeToSnapshot);\n        }\n        catch (e) {\n            // This is strictly for backwards compatibility with tests that create\n            // invalid `ActivatedRoute` mocks.\n            // Note: the difference between having this fallback for invalid `ActivatedRoute` setups and\n            // just throwing is ~500 test failures. Fixing all of those tests by hand is not feasible at\n            // the moment.\n            if (typeof commands[0] !== 'string' || commands[0][0] !== '/') {\n                // Navigations that were absolute in the old way of creating UrlTrees\n                // would still work because they wouldn't attempt to match the\n                // segments in the `ActivatedRoute` to the `currentUrlTree` but\n                // instead just replace the root segment with the navigation result.\n                // Non-absolute navigations would fail to apply the commands because\n                // the logic could not find the segment to replace (so they'd act like there were no\n                // commands).\n                commands = [];\n            }\n            relativeToUrlSegmentGroup = this.currentUrlTree.root;\n        }\n        return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, q, f ?? null);\n    }\n    /**\n     * Navigates to a view using an absolute route path.\n     *\n     * @param url An absolute path for a defined route. The function does not apply any delta to the\n     *     current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to an absolute path.\n     *\n     * ```ts\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/routing/common-router-tasks)\n     *\n     */\n    navigateByUrl(url, extras = {\n        skipLocationChange: false,\n    }) {\n        const urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n        const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * @param commands An array of URL fragments with which to construct the target URL.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n     * of the options object, if supplied.\n     * @param extras An options object that determines how the URL should be constructed or\n     *     interpreted.\n     *\n     * @returns A Promise that resolves to `true` when navigation succeeds, or `false` when navigation\n     *     fails. The Promise is rejected when an error occurs if `resolveNavigationPromiseOnError` is\n     * not `true`.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to a dynamic route path relative to the current URL.\n     *\n     * ```ts\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL, overriding the default behavior\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/routing/common-router-tasks)\n     *\n     */\n    navigate(commands, extras = { skipLocationChange: false }) {\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /** Serializes a `UrlTree` into a string */\n    serializeUrl(url) {\n        return this.urlSerializer.serialize(url);\n    }\n    /** Parses a string into a `UrlTree` */\n    parseUrl(url) {\n        try {\n            return this.urlSerializer.parse(url);\n        }\n        catch {\n            return this.urlSerializer.parse('/');\n        }\n    }\n    isActive(url, matchOptions) {\n        let options;\n        if (matchOptions === true) {\n            options = { ...exactMatchOptions };\n        }\n        else if (matchOptions === false) {\n            options = { ...subsetMatchOptions };\n        }\n        else {\n            options = matchOptions;\n        }\n        if (isUrlTree(url)) {\n            return containsTree(this.currentUrlTree, url, options);\n        }\n        const urlTree = this.parseUrl(url);\n        return containsTree(this.currentUrlTree, urlTree, options);\n    }\n    removeEmptyProps(params) {\n        return Object.entries(params).reduce((result, [key, value]) => {\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    }\n    scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n        if (this.disposed) {\n            return Promise.resolve(false);\n        }\n        let resolve;\n        let reject;\n        let promise;\n        if (priorPromise) {\n            resolve = priorPromise.resolve;\n            reject = priorPromise.reject;\n            promise = priorPromise.promise;\n        }\n        else {\n            promise = new Promise((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n        }\n        // Indicate that the navigation is happening.\n        const taskId = this.pendingTasks.add();\n        afterNextNavigation(this, () => {\n            // Remove pending task in a microtask to allow for cancelled\n            // initial navigations and redirects within the same task.\n            queueMicrotask(() => this.pendingTasks.remove(taskId));\n        });\n        this.navigationTransitions.handleNavigationRequest({\n            source,\n            restoredState,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.currentUrlTree,\n            rawUrl,\n            extras,\n            resolve: resolve,\n            reject: reject,\n            promise,\n            currentSnapshot: this.routerState.snapshot,\n            currentRouterState: this.routerState,\n        });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch((e) => {\n            return Promise.reject(e);\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: Router, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: Router, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: Router, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\nfunction validateCommands(commands) {\n    for (let i = 0; i < commands.length; i++) {\n        const cmd = commands[i];\n        if (cmd == null) {\n            throw new _RuntimeError(4008 /* RuntimeErrorCode.NULLISH_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `The requested path contains ${cmd} segment at index ${i}`);\n        }\n    }\n}\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, CREATE_VIEW_TRANSITION, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultTitleStrategy, DefaultUrlSerializer, EventType, GuardsCheckEnd, GuardsCheckStart, IMPERATIVE_NAVIGATION, INPUT_BINDER, NAVIGATION_ERROR_HANDLER, NavigationCancel, NavigationCancellationCode, NavigationEnd, NavigationError, NavigationSkipped, NavigationSkippedCode, NavigationStart, NavigationTransitions, OutletContext, PRIMARY_OUTLET, ROUTER_CONFIGURATION, ROUTER_OUTLET_DATA, ROUTES, RedirectCommand, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, RoutedComponentInputBinder, Router, RouterConfigLoader, RouterEvent, RouterOutlet, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, TitleStrategy, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VIEW_TRANSITION_OPTIONS, afterNextNavigation, convertToParamMap, createUrlTreeFromSnapshot, createViewTransition, defaultUrlMatcher, isUrlTree, loadChildren, stringifyEvent, ɵEmptyOutletComponent };\n\n","/**\n * @license Angular v20.2.1\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i3 from '@angular/common';\nimport { LOCATION_INITIALIZED, ViewportScroller, LocationStrategy, HashLocationStrategy, Location, PathLocationStrategy } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { signal, untracked, inject, ɵINTERNAL_APPLICATION_ERROR_HANDLER as _INTERNAL_APPLICATION_ERROR_HANDLER, HostAttributeToken, ɵRuntimeError as _RuntimeError, booleanAttribute, Directive, Attribute, HostBinding, Input, HostListener, EventEmitter, Optional, ContentChildren, Output, Injectable, createEnvironmentInjector, InjectionToken, makeEnvironmentProviders, APP_BOOTSTRAP_LISTENER, Injector, ApplicationRef, ɵIS_ENABLED_BLOCKING_INITIAL_NAVIGATION as _IS_ENABLED_BLOCKING_INITIAL_NAVIGATION, provideAppInitializer, ɵperformanceMarkFeature as _performanceMarkFeature, ENVIRONMENT_INITIALIZER, NgZone, SkipSelf, NgModule } from '@angular/core';\nimport { ROUTER_CONFIGURATION, NavigationEnd, isUrlTree, Router, ActivatedRoute, RouterConfigLoader, IMPERATIVE_NAVIGATION, NavigationStart, NavigationSkipped, NavigationSkippedCode, Scroll, UrlSerializer, NavigationTransitions, ROUTES, afterNextNavigation, stringifyEvent, NAVIGATION_ERROR_HANDLER, RoutedComponentInputBinder, INPUT_BINDER, CREATE_VIEW_TRANSITION, createViewTransition, VIEW_TRANSITION_OPTIONS, DefaultUrlSerializer, ChildrenOutletContexts, RouterOutlet, ɵEmptyOutletComponent as _EmptyOutletComponent } from './router2.mjs';\nimport { Subject, of, from } from 'rxjs';\nimport { mergeAll, catchError, filter, concatMap, mergeMap } from 'rxjs/operators';\n\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segments.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * `queryParams`, `fragment`, `queryParamsHandling`, `preserveFragment`, and `relativeTo`\n * cannot be used when the `routerLink` input is a `UrlTree`.\n *\n * See {@link UrlCreationOptions#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```ts\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * ### RouterLink compatible custom elements\n *\n * In order to make a custom element work with routerLink, the corresponding custom\n * element must implement the `href` attribute and must list `href` in the array of\n * the static property/getter `observedAttributes`.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLink {\n    router;\n    route;\n    tabIndexAttribute;\n    renderer;\n    el;\n    locationStrategy;\n    /** @nodoc */\n    reactiveHref = signal(null, ...(ngDevMode ? [{ debugName: \"reactiveHref\" }] : []));\n    /**\n     * Represents an `href` attribute value applied to a host element,\n     * when a host element is an `<a>`/`<area>` tag or a compatible custom element.\n     * For other tags, the value is `null`.\n     */\n    get href() {\n        return untracked(this.reactiveHref);\n    }\n    /** @deprecated */\n    set href(value) {\n        this.reactiveHref.set(value);\n    }\n    /**\n     * Represents the `target` attribute on a host element.\n     * This is only used when the host element is\n     * an `<a>`/`<area>` tag or a compatible custom element.\n     */\n    target;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#queryParams}\n     * @see {@link Router#createUrlTree}\n     */\n    queryParams;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#fragment}\n     * @see {@link Router#createUrlTree}\n     */\n    fragment;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#queryParamsHandling}\n     * @see {@link Router#createUrlTree}\n     */\n    queryParamsHandling;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#state}\n     * @see {@link Router#navigateByUrl}\n     */\n    state;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#info}\n     * @see {@link Router#navigateByUrl}\n     */\n    info;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * Specify a value here when you do not want to use the default value\n     * for `routerLink`, which is the current activated route.\n     * Note that a value of `undefined` here will use the `routerLink` default.\n     * @see {@link UrlCreationOptions#relativeTo}\n     * @see {@link Router#createUrlTree}\n     */\n    relativeTo;\n    /** Whether a host element is an `<a>`/`<area>` tag or a compatible custom element. */\n    isAnchorElement;\n    subscription;\n    /** @internal */\n    onChanges = new Subject();\n    applicationErrorHandler = inject(_INTERNAL_APPLICATION_ERROR_HANDLER);\n    options = inject(ROUTER_CONFIGURATION, { optional: true });\n    constructor(router, route, tabIndexAttribute, renderer, el, locationStrategy) {\n        this.router = router;\n        this.route = route;\n        this.tabIndexAttribute = tabIndexAttribute;\n        this.renderer = renderer;\n        this.el = el;\n        this.locationStrategy = locationStrategy;\n        // Set the initial href value to whatever exists on the host element already\n        this.reactiveHref.set(inject(new HostAttributeToken('href'), { optional: true }));\n        const tagName = el.nativeElement.tagName?.toLowerCase();\n        this.isAnchorElement =\n            tagName === 'a' ||\n                tagName === 'area' ||\n                !!(\n                // Avoid breaking in an SSR context where customElements might not be defined.\n                (typeof customElements === 'object' &&\n                    // observedAttributes is an optional static property/getter on a custom element.\n                    // The spec states that this must be an array of strings.\n                    customElements.get(tagName)?.observedAttributes?.includes?.('href')));\n        if (!this.isAnchorElement) {\n            this.subscribeToNavigationEventsIfNecessary();\n        }\n        else {\n            this.setTabIndexIfNotOnNativeEl('0');\n        }\n    }\n    subscribeToNavigationEventsIfNecessary() {\n        if (this.subscription !== undefined || !this.isAnchorElement) {\n            return;\n        }\n        // preserving fragment in router state\n        let createSubcription = this.preserveFragment;\n        // preserving or merging with query params in router state\n        const dependsOnRouterState = (handling) => handling === 'merge' || handling === 'preserve';\n        createSubcription ||= dependsOnRouterState(this.queryParamsHandling);\n        createSubcription ||=\n            !this.queryParamsHandling && !dependsOnRouterState(this.options?.defaultQueryParamsHandling);\n        if (!createSubcription) {\n            return;\n        }\n        this.subscription = this.router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.updateHref();\n            }\n        });\n    }\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#preserveFragment}\n     * @see {@link Router#createUrlTree}\n     */\n    preserveFragment = false;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#skipLocationChange}\n     * @see {@link Router#navigateByUrl}\n     */\n    skipLocationChange = false;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#replaceUrl}\n     * @see {@link Router#navigateByUrl}\n     */\n    replaceUrl = false;\n    /**\n     * Modifies the tab index if there was not a tabindex attribute on the element during\n     * instantiation.\n     */\n    setTabIndexIfNotOnNativeEl(newTabIndex) {\n        if (this.tabIndexAttribute != null /* both `null` and `undefined` */ || this.isAnchorElement) {\n            return;\n        }\n        this.applyAttributeValue('tabindex', newTabIndex);\n    }\n    /** @docs-private */\n    // TODO(atscott): Remove changes parameter in major version as a breaking change.\n    ngOnChanges(changes) {\n        if (ngDevMode &&\n            isUrlTree(this.routerLinkInput) &&\n            (this.fragment !== undefined ||\n                this.queryParams ||\n                this.queryParamsHandling ||\n                this.preserveFragment ||\n                this.relativeTo)) {\n            throw new _RuntimeError(4016 /* RuntimeErrorCode.INVALID_ROUTER_LINK_INPUTS */, 'Cannot configure queryParams or fragment when using a UrlTree as the routerLink input value.');\n        }\n        if (this.isAnchorElement) {\n            this.updateHref();\n            this.subscribeToNavigationEventsIfNecessary();\n        }\n        // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n        // to the RouterLinks it's tracking.\n        this.onChanges.next(this);\n    }\n    routerLinkInput = null;\n    /**\n     * Commands to pass to {@link Router#createUrlTree} or a `UrlTree`.\n     *   - **array**: commands to pass to {@link Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **UrlTree**: a `UrlTree` for this link rather than creating one from the commands\n     *     and other inputs that correspond to properties of `UrlCreationOptions`.\n     *   - **null|undefined**: effectively disables the `routerLink`\n     * @see {@link Router#createUrlTree}\n     */\n    set routerLink(commandsOrUrlTree) {\n        if (commandsOrUrlTree == null) {\n            this.routerLinkInput = null;\n            this.setTabIndexIfNotOnNativeEl(null);\n        }\n        else {\n            if (isUrlTree(commandsOrUrlTree)) {\n                this.routerLinkInput = commandsOrUrlTree;\n            }\n            else {\n                this.routerLinkInput = Array.isArray(commandsOrUrlTree)\n                    ? commandsOrUrlTree\n                    : [commandsOrUrlTree];\n            }\n            this.setTabIndexIfNotOnNativeEl('0');\n        }\n    }\n    /** @docs-private */\n    onClick(button, ctrlKey, shiftKey, altKey, metaKey) {\n        const urlTree = this.urlTree;\n        if (urlTree === null) {\n            return true;\n        }\n        if (this.isAnchorElement) {\n            if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n        }\n        const extras = {\n            skipLocationChange: this.skipLocationChange,\n            replaceUrl: this.replaceUrl,\n            state: this.state,\n            info: this.info,\n        };\n        // navigateByUrl is mocked frequently in tests... Reduce breakages when adding `catch`\n        this.router.navigateByUrl(urlTree, extras)?.catch((e) => {\n            this.applicationErrorHandler(e);\n        });\n        // Return `false` for `<a>` elements to prevent default action\n        // and cancel the native behavior, since the navigation is handled\n        // by the Router.\n        return !this.isAnchorElement;\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n    updateHref() {\n        const urlTree = this.urlTree;\n        this.reactiveHref.set(urlTree !== null && this.locationStrategy\n            ? (this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(urlTree)) ?? '')\n            : null);\n    }\n    applyAttributeValue(attrName, attrValue) {\n        const renderer = this.renderer;\n        const nativeElement = this.el.nativeElement;\n        if (attrValue !== null) {\n            renderer.setAttribute(nativeElement, attrName, attrValue);\n        }\n        else {\n            renderer.removeAttribute(nativeElement, attrName);\n        }\n    }\n    get urlTree() {\n        if (this.routerLinkInput === null) {\n            return null;\n        }\n        else if (isUrlTree(this.routerLinkInput)) {\n            return this.routerLinkInput;\n        }\n        return this.router.createUrlTree(this.routerLinkInput, {\n            // If the `relativeTo` input is not defined, we want to use `this.route` by default.\n            // Otherwise, we should use the value provided by the user in the input.\n            relativeTo: this.relativeTo !== undefined ? this.relativeTo : this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: this.preserveFragment,\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterLink, deps: [{ token: Router }, { token: ActivatedRoute }, { token: 'tabindex', attribute: true }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i3.LocationStrategy }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.2.0-next.2\", type: RouterLink, isStandalone: true, selector: \"[routerLink]\", inputs: { target: \"target\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", state: \"state\", info: \"info\", relativeTo: \"relativeTo\", preserveFragment: [\"preserveFragment\", \"preserveFragment\", booleanAttribute], skipLocationChange: [\"skipLocationChange\", \"skipLocationChange\", booleanAttribute], replaceUrl: [\"replaceUrl\", \"replaceUrl\", booleanAttribute], routerLink: \"routerLink\" }, host: { listeners: { \"click\": \"onClick($event.button,$event.ctrlKey,$event.shiftKey,$event.altKey,$event.metaKey)\" }, properties: { \"attr.href\": \"reactiveHref()\", \"attr.target\": \"this.target\" } }, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[routerLink]',\n                    host: {\n                        '[attr.href]': 'reactiveHref()',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: Router }, { type: ActivatedRoute }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i3.LocationStrategy }], propDecorators: { target: [{\n                type: HostBinding,\n                args: ['attr.target']\n            }, {\n                type: Input\n            }], queryParams: [{\n                type: Input\n            }], fragment: [{\n                type: Input\n            }], queryParamsHandling: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], info: [{\n                type: Input\n            }], relativeTo: [{\n                type: Input\n            }], preserveFragment: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], skipLocationChange: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], replaceUrl: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], routerLink: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', [\n                        '$event.button',\n                        '$event.ctrlKey',\n                        '$event.shiftKey',\n                        '$event.altKey',\n                        '$event.metaKey',\n                    ]]\n            }] } });\n\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the router\n * activates the associated route:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```html\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * The `RouterLinkActive` directive can also be used to set the aria-current attribute\n * to provide an alternative distinction for active elements to visually impaired users.\n *\n * For example, the following code adds the 'active' class to the Home Page link when it is\n * indeed active and in such case also sets its aria-current attribute to 'page':\n *\n * ```html\n * <a routerLink=\"/\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Home Page</a>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLinkActive {\n    router;\n    element;\n    renderer;\n    cdr;\n    link;\n    links;\n    classes = [];\n    routerEventsSubscription;\n    linkInputChangesSubscription;\n    _isActive = false;\n    get isActive() {\n        return this._isActive;\n    }\n    /**\n     * Options to configure how to determine if the router link is active.\n     *\n     * These options are passed to the `Router.isActive()` function.\n     *\n     * @see {@link Router#isActive}\n     */\n    routerLinkActiveOptions = { exact: false };\n    /**\n     * Aria-current attribute to apply when the router link is active.\n     *\n     * Possible values: `'page'` | `'step'` | `'location'` | `'date'` | `'time'` | `true` | `false`.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current}\n     */\n    ariaCurrentWhenActive;\n    /**\n     *\n     * You can use the output `isActiveChange` to get notified each time the link becomes\n     * active or inactive.\n     *\n     * Emits:\n     * true  -> Route is active\n     * false -> Route is inactive\n     *\n     * ```html\n     * <a\n     *  routerLink=\"/user/bob\"\n     *  routerLinkActive=\"active-link\"\n     *  (isActiveChange)=\"this.onRouterLinkActive($event)\">Bob</a>\n     * ```\n     */\n    isActiveChange = new EventEmitter();\n    constructor(router, element, renderer, cdr, link) {\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.link = link;\n        this.routerEventsSubscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.update();\n            }\n        });\n    }\n    /** @docs-private */\n    ngAfterContentInit() {\n        // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n        of(this.links.changes, of(null))\n            .pipe(mergeAll())\n            .subscribe((_) => {\n            this.update();\n            this.subscribeToEachLinkOnChanges();\n        });\n    }\n    subscribeToEachLinkOnChanges() {\n        this.linkInputChangesSubscription?.unsubscribe();\n        const allLinkChanges = [...this.links.toArray(), this.link]\n            .filter((link) => !!link)\n            .map((link) => link.onChanges);\n        this.linkInputChangesSubscription = from(allLinkChanges)\n            .pipe(mergeAll())\n            .subscribe((link) => {\n            if (this._isActive !== this.isLinkActive(this.router)(link)) {\n                this.update();\n            }\n        });\n    }\n    set routerLinkActive(data) {\n        const classes = Array.isArray(data) ? data : data.split(' ');\n        this.classes = classes.filter((c) => !!c);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        this.update();\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        this.routerEventsSubscription.unsubscribe();\n        this.linkInputChangesSubscription?.unsubscribe();\n    }\n    update() {\n        if (!this.links || !this.router.navigated)\n            return;\n        queueMicrotask(() => {\n            const hasActiveLinks = this.hasActiveLinks();\n            this.classes.forEach((c) => {\n                if (hasActiveLinks) {\n                    this.renderer.addClass(this.element.nativeElement, c);\n                }\n                else {\n                    this.renderer.removeClass(this.element.nativeElement, c);\n                }\n            });\n            if (hasActiveLinks && this.ariaCurrentWhenActive !== undefined) {\n                this.renderer.setAttribute(this.element.nativeElement, 'aria-current', this.ariaCurrentWhenActive.toString());\n            }\n            else {\n                this.renderer.removeAttribute(this.element.nativeElement, 'aria-current');\n            }\n            // Only emit change if the active state changed.\n            if (this._isActive !== hasActiveLinks) {\n                this._isActive = hasActiveLinks;\n                this.cdr.markForCheck();\n                // Emit on isActiveChange after classes are updated\n                this.isActiveChange.emit(hasActiveLinks);\n            }\n        });\n    }\n    isLinkActive(router) {\n        const options = isActiveMatchOptions(this.routerLinkActiveOptions)\n            ? this.routerLinkActiveOptions\n            : // While the types should disallow `undefined` here, it's possible without strict inputs\n                this.routerLinkActiveOptions.exact || false;\n        return (link) => {\n            const urlTree = link.urlTree;\n            return urlTree ? router.isActive(urlTree, options) : false;\n        };\n    }\n    hasActiveLinks() {\n        const isActiveCheckFn = this.isLinkActive(this.router);\n        return (this.link && isActiveCheckFn(this.link)) || this.links.some(isActiveCheckFn);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterLinkActive, deps: [{ token: Router }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: RouterLink, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: RouterLinkActive, isStandalone: true, selector: \"[routerLinkActive]\", inputs: { routerLinkActiveOptions: \"routerLinkActiveOptions\", ariaCurrentWhenActive: \"ariaCurrentWhenActive\", routerLinkActive: \"routerLinkActive\" }, outputs: { isActiveChange: \"isActiveChange\" }, queries: [{ propertyName: \"links\", predicate: RouterLink, descendants: true }], exportAs: [\"routerLinkActive\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterLinkActive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[routerLinkActive]',\n                    exportAs: 'routerLinkActive',\n                }]\n        }], ctorParameters: () => [{ type: Router }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: RouterLink, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { links: [{\n                type: ContentChildren,\n                args: [RouterLink, { descendants: true }]\n            }], routerLinkActiveOptions: [{\n                type: Input\n            }], ariaCurrentWhenActive: [{\n                type: Input\n            }], isActiveChange: [{\n                type: Output\n            }], routerLinkActive: [{\n                type: Input\n            }] } });\n/**\n * Use instead of `'paths' in options` to be compatible with property renaming\n */\nfunction isActiveMatchOptions(options) {\n    return !!options.paths;\n}\n\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nclass PreloadingStrategy {\n}\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```ts\n * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nclass PreloadAllModules {\n    preload(route, fn) {\n        return fn().pipe(catchError(() => of(null)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: PreloadAllModules, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: PreloadAllModules, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: PreloadAllModules, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nclass NoPreloading {\n    preload(route, fn) {\n        return of(null);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NoPreloading, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NoPreloading, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NoPreloading, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nclass RouterPreloader {\n    router;\n    injector;\n    preloadingStrategy;\n    loader;\n    subscription;\n    constructor(router, injector, preloadingStrategy, loader) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        this.loader = loader;\n    }\n    setUpPreloading() {\n        this.subscription = this.router.events\n            .pipe(filter((e) => e instanceof NavigationEnd), concatMap(() => this.preload()))\n            .subscribe(() => { });\n    }\n    preload() {\n        return this.processRoutes(this.injector, this.router.config);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    processRoutes(injector, routes) {\n        const res = [];\n        for (const route of routes) {\n            if (route.providers && !route._injector) {\n                route._injector = createEnvironmentInjector(route.providers, injector, `Route: ${route.path}`);\n            }\n            const injectorForCurrentRoute = route._injector ?? injector;\n            const injectorForChildren = route._loadedInjector ?? injectorForCurrentRoute;\n            // Note that `canLoad` is only checked as a condition that prevents `loadChildren` and not\n            // `loadComponent`. `canLoad` guards only block loading of child routes by design. This\n            // happens as a consequence of needing to descend into children for route matching immediately\n            // while component loading is deferred until route activation. Because `canLoad` guards can\n            // have side effects, we cannot execute them here so we instead skip preloading altogether\n            // when present. Lastly, it remains to be decided whether `canLoad` should behave this way\n            // at all. Code splitting and lazy loading is separate from client-side authorization checks\n            // and should not be used as a security measure to prevent loading of code.\n            if ((route.loadChildren && !route._loadedRoutes && route.canLoad === undefined) ||\n                (route.loadComponent && !route._loadedComponent)) {\n                res.push(this.preloadConfig(injectorForCurrentRoute, route));\n            }\n            if (route.children || route._loadedRoutes) {\n                res.push(this.processRoutes(injectorForChildren, (route.children ?? route._loadedRoutes)));\n            }\n        }\n        return from(res).pipe(mergeAll());\n    }\n    preloadConfig(injector, route) {\n        return this.preloadingStrategy.preload(route, () => {\n            let loadedChildren$;\n            if (route.loadChildren && route.canLoad === undefined) {\n                loadedChildren$ = this.loader.loadChildren(injector, route);\n            }\n            else {\n                loadedChildren$ = of(null);\n            }\n            const recursiveLoadChildren$ = loadedChildren$.pipe(mergeMap((config) => {\n                if (config === null) {\n                    return of(void 0);\n                }\n                route._loadedRoutes = config.routes;\n                route._loadedInjector = config.injector;\n                // If the loaded config was a module, use that as the module/module injector going\n                // forward. Otherwise, continue using the current module/module injector.\n                return this.processRoutes(config.injector ?? injector, config.routes);\n            }));\n            if (route.loadComponent && !route._loadedComponent) {\n                const loadComponent$ = this.loader.loadComponent(injector, route);\n                return from([recursiveLoadChildren$, loadComponent$]).pipe(mergeAll());\n            }\n            else {\n                return recursiveLoadChildren$;\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterPreloader, deps: [{ token: Router }, { token: i0.EnvironmentInjector }, { token: PreloadingStrategy }, { token: RouterConfigLoader }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterPreloader, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterPreloader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: Router }, { type: i0.EnvironmentInjector }, { type: PreloadingStrategy }, { type: RouterConfigLoader }] });\n\nconst ROUTER_SCROLLER = new InjectionToken('');\nclass RouterScroller {\n    urlSerializer;\n    transitions;\n    viewportScroller;\n    zone;\n    options;\n    routerEventsSubscription;\n    scrollEventsSubscription;\n    lastId = 0;\n    lastSource = IMPERATIVE_NAVIGATION;\n    restoredId = 0;\n    store = {};\n    /** @docs-private */\n    constructor(urlSerializer, transitions, viewportScroller, zone, options = {}) {\n        this.urlSerializer = urlSerializer;\n        this.transitions = transitions;\n        this.viewportScroller = viewportScroller;\n        this.zone = zone;\n        this.options = options;\n        // Default both options to 'disabled'\n        options.scrollPositionRestoration ||= 'disabled';\n        options.anchorScrolling ||= 'disabled';\n    }\n    init() {\n        // we want to disable the automatic scrolling because having two places\n        // responsible for scrolling results race conditions, especially given\n        // that browser don't implement this behavior consistently\n        if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.setHistoryScrollRestoration('manual');\n        }\n        this.routerEventsSubscription = this.createScrollEvents();\n        this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    createScrollEvents() {\n        return this.transitions.events.subscribe((e) => {\n            if (e instanceof NavigationStart) {\n                // store the scroll position of the current stable navigations.\n                this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n                this.lastSource = e.navigationTrigger;\n                this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n            }\n            else if (e instanceof NavigationEnd) {\n                this.lastId = e.id;\n                this.scheduleScrollEvent(e, this.urlSerializer.parse(e.urlAfterRedirects).fragment);\n            }\n            else if (e instanceof NavigationSkipped &&\n                e.code === NavigationSkippedCode.IgnoredSameUrlNavigation) {\n                this.lastSource = undefined;\n                this.restoredId = 0;\n                this.scheduleScrollEvent(e, this.urlSerializer.parse(e.url).fragment);\n            }\n        });\n    }\n    consumeScrollEvents() {\n        return this.transitions.events.subscribe((e) => {\n            if (!(e instanceof Scroll))\n                return;\n            // a popstate event. The pop state event will always ignore anchor scrolling.\n            if (e.position) {\n                if (this.options.scrollPositionRestoration === 'top') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n                else if (this.options.scrollPositionRestoration === 'enabled') {\n                    this.viewportScroller.scrollToPosition(e.position);\n                }\n                // imperative navigation \"forward\"\n            }\n            else {\n                if (e.anchor && this.options.anchorScrolling === 'enabled') {\n                    this.viewportScroller.scrollToAnchor(e.anchor);\n                }\n                else if (this.options.scrollPositionRestoration !== 'disabled') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n            }\n        });\n    }\n    scheduleScrollEvent(routerEvent, anchor) {\n        this.zone.runOutsideAngular(async () => {\n            // The scroll event needs to be delayed until after change detection. Otherwise, we may\n            // attempt to restore the scroll position before the router outlet has fully rendered the\n            // component by executing its update block of the template function.\n            //\n            // #57109 (we need to wait at least a macrotask before scrolling. AfterNextRender resolves in microtask event loop with Zones)\n            // We could consider _also_ waiting for a render promise though one should have already happened or been scheduled by this point\n            // and should definitely happen before rAF/setTimeout.\n            // #53985 (cannot rely solely on setTimeout because a frame may paint before the timeout)\n            await new Promise((resolve) => {\n                setTimeout(resolve);\n                if (typeof requestAnimationFrame !== 'undefined') {\n                    requestAnimationFrame(resolve);\n                }\n            });\n            this.zone.run(() => {\n                this.transitions.events.next(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n            });\n        });\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        this.routerEventsSubscription?.unsubscribe();\n        this.scrollEventsSubscription?.unsubscribe();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterScroller, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterScroller });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterScroller, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: UrlSerializer }, { type: NavigationTransitions }, { type: i3.ViewportScroller }, { type: i0.NgZone }, { type: undefined }] });\n\n/**\n * Sets up providers necessary to enable `Router` functionality for the application.\n * Allows to configure a set of routes as well as extra features that should be enabled.\n *\n * @usageNotes\n *\n * Basic example of how you can add a Router to your application:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent, {\n *   providers: [provideRouter(appRoutes)]\n * });\n * ```\n *\n * You can also enable optional features in the Router by adding functions from the `RouterFeatures`\n * type:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes,\n *         withDebugTracing(),\n *         withRouterConfig({paramsInheritanceStrategy: 'always'}))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link RouterFeatures}\n *\n * @publicApi\n * @param routes A set of `Route`s to use for the application routing table.\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to setup a Router.\n */\nfunction provideRouter(routes, ...features) {\n    return makeEnvironmentProviders([\n        { provide: ROUTES, multi: true, useValue: routes },\n        typeof ngDevMode === 'undefined' || ngDevMode\n            ? { provide: ROUTER_IS_PROVIDED, useValue: true }\n            : [],\n        { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useFactory: getBootstrapListener },\n        features.map((feature) => feature.ɵproviders),\n    ]);\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * Helper function to create an object that represents a Router feature.\n */\nfunction routerFeature(kind, providers) {\n    return { ɵkind: kind, ɵproviders: providers };\n}\n/**\n * An Injection token used to indicate whether `provideRouter` or `RouterModule.forRoot` was ever\n * called.\n */\nconst ROUTER_IS_PROVIDED = new InjectionToken('', {\n    providedIn: 'root',\n    factory: () => false,\n});\nconst routerIsProvidedDevModeCheck = {\n    provide: ENVIRONMENT_INITIALIZER,\n    multi: true,\n    useFactory() {\n        return () => {\n            if (!inject(ROUTER_IS_PROVIDED)) {\n                console.warn('`provideRoutes` was called without `provideRouter` or `RouterModule.forRoot`. ' +\n                    'This is likely a mistake.');\n            }\n        };\n    },\n};\n/**\n * Registers a DI provider for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```ts\n * @NgModule({\n *   providers: [provideRoutes(ROUTES)]\n * })\n * class LazyLoadedChildModule {}\n * ```\n *\n * @deprecated If necessary, provide routes using the `ROUTES` `InjectionToken`.\n * @see {@link ROUTES}\n * @publicApi\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ROUTES, multi: true, useValue: routes },\n        typeof ngDevMode === 'undefined' || ngDevMode ? routerIsProvidedDevModeCheck : [],\n    ];\n}\n/**\n * Enables customizable scrolling behavior for router navigations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable scrolling feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withInMemoryScrolling())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link ViewportScroller}\n *\n * @publicApi\n * @param options Set of configuration parameters to customize scrolling behavior, see\n *     `InMemoryScrollingOptions` for additional information.\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withInMemoryScrolling(options = {}) {\n    const providers = [\n        {\n            provide: ROUTER_SCROLLER,\n            useFactory: () => {\n                const viewportScroller = inject(ViewportScroller);\n                const zone = inject(NgZone);\n                const transitions = inject(NavigationTransitions);\n                const urlSerializer = inject(UrlSerializer);\n                return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, options);\n            },\n        },\n    ];\n    return routerFeature(4 /* RouterFeatureKind.InMemoryScrollingFeature */, providers);\n}\nfunction getBootstrapListener() {\n    const injector = inject(Injector);\n    return (bootstrappedComponentRef) => {\n        const ref = injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        const router = injector.get(Router);\n        const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n        if (injector.get(INITIAL_NAVIGATION) === 1 /* InitialNavigation.EnabledNonBlocking */) {\n            router.initialNavigation();\n        }\n        injector.get(ROUTER_PRELOADER, null, { optional: true })?.setUpPreloading();\n        injector.get(ROUTER_SCROLLER, null, { optional: true })?.init();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        if (!bootstrapDone.closed) {\n            bootstrapDone.next();\n            bootstrapDone.complete();\n            bootstrapDone.unsubscribe();\n        }\n    };\n}\n/**\n * A subject used to indicate that the bootstrapping phase is done. When initial navigation is\n * `enabledBlocking`, the first navigation waits until bootstrapping is finished before continuing\n * to the activation phase.\n */\nconst BOOTSTRAP_DONE = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'bootstrap done indicator' : '', {\n    factory: () => {\n        return new Subject();\n    },\n});\nconst INITIAL_NAVIGATION = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'initial navigation' : '', { providedIn: 'root', factory: () => 1 /* InitialNavigation.EnabledNonBlocking */ });\n/**\n * Configures initial navigation to start before the root component is created.\n *\n * The bootstrap is blocked until the initial navigation is complete. This should be set in case\n * you use [server-side rendering](guide/ssr), but do not enable [hydration](guide/hydration) for\n * your application.\n *\n * @usageNotes\n *\n * Basic example of how you can enable this navigation behavior:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withEnabledBlockingInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @publicApi\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withEnabledBlockingInitialNavigation() {\n    const providers = [\n        { provide: _IS_ENABLED_BLOCKING_INITIAL_NAVIGATION, useValue: true },\n        { provide: INITIAL_NAVIGATION, useValue: 0 /* InitialNavigation.EnabledBlocking */ },\n        provideAppInitializer(() => {\n            const injector = inject(Injector);\n            const locationInitialized = injector.get(LOCATION_INITIALIZED, Promise.resolve());\n            return locationInitialized.then(() => {\n                return new Promise((resolve) => {\n                    const router = injector.get(Router);\n                    const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n                    afterNextNavigation(router, () => {\n                        // Unblock APP_INITIALIZER in case the initial navigation was canceled or errored\n                        // without a redirect.\n                        resolve(true);\n                    });\n                    injector.get(NavigationTransitions).afterPreactivation = () => {\n                        // Unblock APP_INITIALIZER once we get to `afterPreactivation`. At this point, we\n                        // assume activation will complete successfully (even though this is not\n                        // guaranteed).\n                        resolve(true);\n                        return bootstrapDone.closed ? of(void 0) : bootstrapDone;\n                    };\n                    router.initialNavigation();\n                });\n            });\n        }),\n    ];\n    return routerFeature(2 /* RouterFeatureKind.EnabledBlockingInitialNavigationFeature */, providers);\n}\n/**\n * Disables initial navigation.\n *\n * Use if there is a reason to have more control over when the router starts its initial navigation\n * due to some complex initialization logic.\n *\n * @usageNotes\n *\n * Basic example of how you can disable initial navigation:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDisabledInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDisabledInitialNavigation() {\n    const providers = [\n        provideAppInitializer(() => {\n            inject(Router).setUpLocationChangeListener();\n        }),\n        { provide: INITIAL_NAVIGATION, useValue: 2 /* InitialNavigation.Disabled */ },\n    ];\n    return routerFeature(3 /* RouterFeatureKind.DisabledInitialNavigationFeature */, providers);\n}\n/**\n * Enables logging of all internal navigation events to the console.\n * Extra logging might be useful for debugging purposes to inspect Router event sequence.\n *\n * @usageNotes\n *\n * Basic example of how you can enable debug tracing:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDebugTracing())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDebugTracing() {\n    let providers = [];\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        providers = [\n            {\n                provide: ENVIRONMENT_INITIALIZER,\n                multi: true,\n                useFactory: () => {\n                    const router = inject(Router);\n                    return () => router.events.subscribe((e) => {\n                        // tslint:disable:no-console\n                        console.group?.(`Router Event: ${e.constructor.name}`);\n                        console.log(stringifyEvent(e));\n                        console.log(e);\n                        console.groupEnd?.();\n                        // tslint:enable:no-console\n                    });\n                },\n            },\n        ];\n    }\n    else {\n        providers = [];\n    }\n    return routerFeature(1 /* RouterFeatureKind.DebugTracingFeature */, providers);\n}\nconst ROUTER_PRELOADER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router preloader' : '');\n/**\n * Allows to configure a preloading strategy to use. The strategy is configured by providing a\n * reference to a class that implements a `PreloadingStrategy`.\n *\n * @usageNotes\n *\n * Basic example of how you can configure preloading:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withPreloading(PreloadAllModules))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param preloadingStrategy A reference to a class that implements a `PreloadingStrategy` that\n *     should be used.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withPreloading(preloadingStrategy) {\n    const providers = [\n        { provide: ROUTER_PRELOADER, useExisting: RouterPreloader },\n        { provide: PreloadingStrategy, useExisting: preloadingStrategy },\n    ];\n    return routerFeature(0 /* RouterFeatureKind.PreloadingFeature */, providers);\n}\n/**\n * Allows to provide extra parameters to configure Router.\n *\n * @usageNotes\n *\n * Basic example of how you can provide extra configuration options:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withRouterConfig({\n *          onSameUrlNavigation: 'reload'\n *       }))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param options A set of parameters to configure Router, see `RouterConfigOptions` for\n *     additional information.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withRouterConfig(options) {\n    const providers = [{ provide: ROUTER_CONFIGURATION, useValue: options }];\n    return routerFeature(5 /* RouterFeatureKind.RouterConfigurationFeature */, providers);\n}\n/**\n * Provides the location strategy that uses the URL fragment instead of the history API.\n *\n * @usageNotes\n *\n * Basic example of how you can use the hash location option:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withHashLocation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link /api/common/HashLocationStrategy HashLocationStrategy}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withHashLocation() {\n    const providers = [{ provide: LocationStrategy, useClass: HashLocationStrategy }];\n    return routerFeature(6 /* RouterFeatureKind.RouterHashLocationFeature */, providers);\n}\n/**\n * Provides a function which is called when a navigation error occurs.\n *\n * This function is run inside application's [injection context](guide/di/dependency-injection-context)\n * so you can use the [`inject`](api/core/inject) function.\n *\n * This function can return a `RedirectCommand` to convert the error to a redirect, similar to returning\n * a `UrlTree` or `RedirectCommand` from a guard. This will also prevent the `Router` from emitting\n * `NavigationError`; it will instead emit `NavigationCancel` with code NavigationCancellationCode.Redirect.\n * Return values other than `RedirectCommand` are ignored and do not change any behavior with respect to\n * how the `Router` handles the error.\n *\n * @usageNotes\n *\n * Basic example of how you can use the error handler option:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withNavigationErrorHandler((e: NavigationError) =>\n * inject(MyErrorTracker).trackError(e)))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link NavigationError}\n * @see {@link /api/core/inject inject}\n * @see {@link runInInjectionContext}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withNavigationErrorHandler(handler) {\n    const providers = [\n        {\n            provide: NAVIGATION_ERROR_HANDLER,\n            useValue: handler,\n        },\n    ];\n    return routerFeature(7 /* RouterFeatureKind.NavigationErrorHandlerFeature */, providers);\n}\n/**\n * Enables binding information from the `Router` state directly to the inputs of the component in\n * `Route` configurations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withComponentInputBinding())\n *     ]\n *   }\n * );\n * ```\n *\n * The router bindings information from any of the following sources:\n *\n *  - query parameters\n *  - path and matrix parameters\n *  - static route data\n *  - data from resolvers\n *\n * Duplicate keys are resolved in the same order from above, from least to greatest,\n * meaning that resolvers have the highest precedence and override any of the other information\n * from the route.\n *\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. This prevents previous information from being\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n * Default values can be provided with a resolver on the route to ensure the value is always present\n * or an input and use an input transform in the component.\n *\n * @see {@link /guide/components/inputs#input-transforms Input Transforms}\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withComponentInputBinding() {\n    const providers = [\n        RoutedComponentInputBinder,\n        { provide: INPUT_BINDER, useExisting: RoutedComponentInputBinder },\n    ];\n    return routerFeature(8 /* RouterFeatureKind.ComponentInputBindingFeature */, providers);\n}\n/**\n * Enables view transitions in the Router by running the route activation and deactivation inside of\n * `document.startViewTransition`.\n *\n * Note: The View Transitions API is not available in all browsers. If the browser does not support\n * view transitions, the Router will not attempt to start a view transition and continue processing\n * the navigation as usual.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withViewTransitions())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n * @see https://developer.chrome.com/docs/web-platform/view-transitions/\n * @see https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API\n * @developerPreview 19.0\n */\nfunction withViewTransitions(options) {\n    _performanceMarkFeature('NgRouterViewTransitions');\n    const providers = [\n        { provide: CREATE_VIEW_TRANSITION, useValue: createViewTransition },\n        {\n            provide: VIEW_TRANSITION_OPTIONS,\n            useValue: { skipNextTransition: !!options?.skipInitialTransition, ...options },\n        },\n    ];\n    return routerFeature(9 /* RouterFeatureKind.ViewTransitionsFeature */, providers);\n}\n\n/**\n * The directives defined in the `RouterModule`.\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkActive, _EmptyOutletComponent];\n/**\n * @docsNotRequired\n */\nconst ROUTER_FORROOT_GUARD = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router duplicate forRoot guard' : '');\n// TODO(atscott): All of these except `ActivatedRoute` are `providedIn: 'root'`. They are only kept\n// here to avoid a breaking change whereby the provider order matters based on where the\n// `RouterModule`/`RouterTestingModule` is imported. These can/should be removed as a \"breaking\"\n// change in a major version.\nconst ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    Router,\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    RouterConfigLoader,\n    // Only used to warn when `provideRoutes` is used without `RouterModule` or `provideRouter`. Can\n    // be removed when `provideRoutes` is removed.\n    typeof ngDevMode === 'undefined' || ngDevMode\n        ? { provide: ROUTER_IS_PROVIDED, useValue: true }\n        : [],\n];\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/routing/common-router-tasks) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\nclass RouterModule {\n    constructor() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            inject(ROUTER_FORROOT_GUARD, { optional: true });\n        }\n    }\n    /**\n     * Creates and configures a module with all the router providers and directives.\n     * Optionally sets up an application listener to perform an initial navigation.\n     *\n     * When registering the NgModule at the root, import as follows:\n     *\n     * ```ts\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the application.\n     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n     * @return The new `NgModule`.\n     *\n     */\n    static forRoot(routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                typeof ngDevMode === 'undefined' || ngDevMode\n                    ? config?.enableTracing\n                        ? withDebugTracing().ɵproviders\n                        : []\n                    : [],\n                { provide: ROUTES, multi: true, useValue: routes },\n                typeof ngDevMode === 'undefined' || ngDevMode\n                    ? {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new Optional(), new SkipSelf()]],\n                    }\n                    : [],\n                config?.errorHandler\n                    ? {\n                        provide: NAVIGATION_ERROR_HANDLER,\n                        useValue: config.errorHandler,\n                    }\n                    : [],\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                config?.useHash ? provideHashLocationStrategy() : providePathLocationStrategy(),\n                provideRouterScroller(),\n                config?.preloadingStrategy ? withPreloading(config.preloadingStrategy).ɵproviders : [],\n                config?.initialNavigation ? provideInitialNavigation(config) : [],\n                config?.bindToComponentInputs ? withComponentInputBinding().ɵproviders : [],\n                config?.enableViewTransitions ? withViewTransitions().ɵproviders : [],\n                provideRouterInitializer(),\n            ],\n        };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes,\n     * without creating a new Router service.\n     * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n     *\n     * ```ts\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n     * @return The new NgModule.\n     *\n     */\n    static forChild(routes) {\n        return {\n            ngModule: RouterModule,\n            providers: [{ provide: ROUTES, multi: true, useValue: routes }],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterModule, imports: [RouterOutlet, RouterLink, RouterLinkActive, _EmptyOutletComponent], exports: [RouterOutlet, RouterLink, RouterLinkActive, _EmptyOutletComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RouterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: ROUTER_DIRECTIVES,\n                    exports: ROUTER_DIRECTIVES,\n                }]\n        }], ctorParameters: () => [] });\n/**\n * For internal use by `RouterModule` only. Note that this differs from `withInMemoryRouterScroller`\n * because it reads from the `ExtraOptions` which should not be used in the standalone world.\n */\nfunction provideRouterScroller() {\n    return {\n        provide: ROUTER_SCROLLER,\n        useFactory: () => {\n            const viewportScroller = inject(ViewportScroller);\n            const zone = inject(NgZone);\n            const config = inject(ROUTER_CONFIGURATION);\n            const transitions = inject(NavigationTransitions);\n            const urlSerializer = inject(UrlSerializer);\n            if (config.scrollOffset) {\n                viewportScroller.setOffset(config.scrollOffset);\n            }\n            return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, config);\n        },\n    };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` should\n// provide hash location directly via `{provide: LocationStrategy, useClass: HashLocationStrategy}`.\nfunction provideHashLocationStrategy() {\n    return { provide: LocationStrategy, useClass: HashLocationStrategy };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` does not\n// need this at all because `PathLocationStrategy` is the default factory for `LocationStrategy`.\nfunction providePathLocationStrategy() {\n    return { provide: LocationStrategy, useClass: PathLocationStrategy };\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new _RuntimeError(4007 /* RuntimeErrorCode.FOR_ROOT_CALLED_TWICE */, `The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector.` +\n            ` Lazy loaded modules should use RouterModule.forChild() instead.`);\n    }\n    return 'guarded';\n}\n// Note: For internal use only with `RouterModule`. Standalone router setup with `provideRouter`\n// users call `withXInitialNavigation` directly.\nfunction provideInitialNavigation(config) {\n    return [\n        config.initialNavigation === 'disabled' ? withDisabledInitialNavigation().ɵproviders : [],\n        config.initialNavigation === 'enabledBlocking'\n            ? withEnabledBlockingInitialNavigation().ɵproviders\n            : [],\n    ];\n}\n// TODO(atscott): This should not be in the public API\n/**\n * A DI token for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nconst ROUTER_INITIALIZER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'Router Initializer' : '');\nfunction provideRouterInitializer() {\n    return [\n        // ROUTER_INITIALIZER token should be removed. It's public API but shouldn't be. We can just\n        // have `getBootstrapListener` directly attached to APP_BOOTSTRAP_LISTENER.\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\nexport { NoPreloading, PreloadAllModules, PreloadingStrategy, ROUTER_INITIALIZER, ROUTER_PROVIDERS, RouterLink, RouterLinkActive, RouterModule, RouterPreloader, provideRouter, provideRoutes, withComponentInputBinding, withDebugTracing, withDisabledInitialNavigation, withEnabledBlockingInitialNavigation, withHashLocation, withInMemoryScrolling, withNavigationErrorHandler, withPreloading, withRouterConfig, withViewTransitions };\n\n","/**\n * @license Angular v20.2.1\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultTitleStrategy, DefaultUrlSerializer, EventType, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationCancellationCode, NavigationEnd, NavigationError, NavigationSkipped, NavigationSkippedCode, NavigationStart, OutletContext, PRIMARY_OUTLET, ROUTER_CONFIGURATION, ROUTER_OUTLET_DATA, ROUTES, RedirectCommand, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterOutlet, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, TitleStrategy, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, convertToParamMap, createUrlTreeFromSnapshot, defaultUrlMatcher, ɵEmptyOutletComponent, afterNextNavigation as ɵafterNextNavigation, loadChildren as ɵloadChildren } from './router2.mjs';\nexport { NoPreloading, PreloadAllModules, PreloadingStrategy, ROUTER_INITIALIZER, RouterLink, RouterLinkActive, RouterLink as RouterLinkWithHref, RouterModule, RouterPreloader, provideRouter, provideRoutes, withComponentInputBinding, withDebugTracing, withDisabledInitialNavigation, withEnabledBlockingInitialNavigation, withHashLocation, withInMemoryScrolling, withNavigationErrorHandler, withPreloading, withRouterConfig, withViewTransitions, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS } from './router_module.mjs';\nimport { inject, Version } from '@angular/core';\nimport '@angular/common';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/platform-browser';\n\n/**\n * Maps an array of injectable classes with canMatch functions to an array of equivalent\n * `CanMatchFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanMatch(providers) {\n    return providers.map((provider) => (...params) => inject(provider).canMatch(...params));\n}\n/**\n * Maps an array of injectable classes with canActivate functions to an array of equivalent\n * `CanActivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivate(providers) {\n    return providers.map((provider) => (...params) => inject(provider).canActivate(...params));\n}\n/**\n * Maps an array of injectable classes with canActivateChild functions to an array of equivalent\n * `CanActivateChildFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivateChild(providers) {\n    return providers.map((provider) => (...params) => inject(provider).canActivateChild(...params));\n}\n/**\n * Maps an array of injectable classes with canDeactivate functions to an array of equivalent\n * `CanDeactivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanDeactivate(providers) {\n    return providers.map((provider) => (...params) => inject(provider).canDeactivate(...params));\n}\n/**\n * Maps an injectable class with a resolve function to an equivalent `ResolveFn`\n * for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='Resolve'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToResolve(provider) {\n    return (...params) => inject(provider).resolve(...params);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('20.2.1');\n\nexport { VERSION, mapToCanActivate, mapToCanActivateChild, mapToCanDeactivate, mapToCanMatch, mapToResolve };\n\n","/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\nexport { coerceCssPixelValue };\n\n","export { _isNumberValue, coerceElement, coerceNumberProperty } from './element.mjs';\nexport { coerceArray } from './array.mjs';\nexport { coerceCssPixelValue } from './css-pixel-value.mjs';\nimport '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { coerceBooleanProperty, coerceStringArray };\n\n","import { ConnectableObservable } from 'rxjs';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\nexport { DataSource, isDataSource };\n\n","import { isObservable, of } from 'rxjs';\nimport { DataSource } from './data-source.mjs';\nimport { InjectionToken } from '@angular/core';\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    _data;\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/** Indicates how a view was changed by a `_ViewRepeater`. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n    /** The content of an existing view was replaced with another item. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n    /** A new view was created with `createEmbeddedView`. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n    /** The position of a view changed, but the content remains the same. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n    /** A view was detached from the view container. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for `_ViewRepeater`. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that caches views when they are removed from a\n * `ViewContainerRef`. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    /**\n     * The size of the cache used to store unused views.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n     */\n    viewCacheSize = 20;\n    /**\n     * View cache that stores embedded view instances that have been previously stamped out,\n     * but don't are not currently rendered. The view repeater will reuse these views rather than\n     * creating brand new ones.\n     *\n     * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n     */\n    _viewCache = [];\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\nexport { ArrayDataSource, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, inject, NgZone, RendererFactory2, Injectable, ElementRef, Renderer2, DOCUMENT, ChangeDetectorRef, signal, Injector, effect, ApplicationRef, DestroyRef, untracked, afterNextRender, booleanAttribute, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, NgModule } from '@angular/core';\nimport { Subject, of, Observable, Subscription, animationFrameScheduler, asapScheduler, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, startWith, takeUntil, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceElement } from './element.mjs';\nimport { Platform } from './platform2.mjs';\nimport { Directionality } from './directionality.mjs';\nimport { getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior } from './scrolling2.mjs';\nimport { BidiModule } from './bidi.mjs';\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport { _VIEW_REPEATER_STRATEGY, ArrayDataSource, _RecycleViewRepeaterStrategy } from './recycle-view-repeater-strategy.mjs';\nimport { isDataSource } from './data-source.mjs';\nimport '@angular/common';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    _scrolledIndexChange = new Subject();\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n    /** The attached viewport. */\n    _viewport = null;\n    /** The size of the items in the virtually scrolling list. */\n    _itemSize;\n    /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n    _minBufferPx;\n    /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n    _maxBufferPx;\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    _itemSize = 20;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    _minBufferPx = 100;\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    _maxBufferPx = 200;\n    /** The scroll strategy used by this directive. */\n    _scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkFixedSizeVirtualScroll, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupGlobalListener;\n    constructor() { }\n    /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n    _scrolled = new Subject();\n    /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n    _scrolledCount = 0;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     */\n    scrollContainers = new Map();\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._cleanupGlobalListener) {\n                this._cleanupGlobalListener = this._ngZone.runOutsideAngular(() => this._renderer.listen('document', 'scroll', () => this._scrolled.next()));\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._cleanupGlobalListener?.();\n                    this._cleanupGlobalListener = undefined;\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._cleanupGlobalListener?.();\n        this._cleanupGlobalListener = undefined;\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => !target || ancestors.indexOf(target) > -1));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    elementRef = inject(ElementRef);\n    scrollDispatcher = inject(ScrollDispatcher);\n    ngZone = inject(NgZone);\n    dir = inject(Directionality, { optional: true });\n    _scrollElement = this.elementRef.nativeElement;\n    _destroyed = new Subject();\n    _renderer = inject(Renderer2);\n    _cleanupScroll;\n    _elementScrolled = new Subject();\n    constructor() { }\n    ngOnInit() {\n        this._cleanupScroll = this.ngZone.runOutsideAngular(() => this._renderer.listen(this._scrollElement, 'scroll', event => this._elementScrolled.next(event)));\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this._cleanupScroll?.();\n        this._elementScrolled.complete();\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkScrollable, isStandalone: true, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                }]\n        }], ctorParameters: () => [] });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    _platform = inject(Platform);\n    _listeners;\n    /** Cached viewport dimensions. */\n    _viewportSize;\n    /** Stream of viewport change events. */\n    _change = new Subject();\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT);\n    constructor() {\n        const ngZone = inject(NgZone);\n        const renderer = inject(RendererFactory2).createRenderer(null, null);\n        ngZone.runOutsideAngular(() => {\n            if (this._platform.isBrowser) {\n                const changeListener = (event) => this._change.next(event);\n                this._listeners = [\n                    renderer.listen('window', 'resize', changeListener),\n                    renderer.listen('window', 'orientationchange', changeListener),\n                ];\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        this._listeners?.forEach(cleanup => cleanup());\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ViewportRuler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ViewportRuler, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the `CdkScrollable` to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor() {\n        super();\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkVirtualScrollable, isStandalone: true, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [] });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _scrollStrategy = inject(VIRTUAL_SCROLL_STRATEGY, {\n        optional: true,\n    });\n    scrollable = inject(VIRTUAL_SCROLLABLE, { optional: true });\n    _platform = inject(Platform);\n    /** Emits when the viewport is detached from a CdkVirtualForOf. */\n    _detachedSubject = new Subject();\n    /** Emits when the rendered range changes. */\n    _renderedRangeSubject = new Subject();\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    _orientation = 'vertical';\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    appendOnly = false;\n    // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n    // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n    // depending on how the strategy calculates the scrolled index, it may come at a cost to\n    // performance.\n    /** Emits when the index of the first element visible in the viewport changes. */\n    scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n    /** The element that wraps the rendered content. */\n    _contentWrapper;\n    /** A stream that emits whenever the rendered range changes. */\n    renderedRangeStream = this._renderedRangeSubject;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     */\n    _totalContentSize = 0;\n    /** A string representing the `style.width` property value to be used for the spacer element. */\n    _totalContentWidth = signal('', ...(ngDevMode ? [{ debugName: \"_totalContentWidth\" }] : []));\n    /** A string representing the `style.height` property value to be used for the spacer element. */\n    _totalContentHeight = signal('', ...(ngDevMode ? [{ debugName: \"_totalContentHeight\" }] : []));\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     */\n    _renderedContentTransform;\n    /** The currently rendered range of indices. */\n    _renderedRange = { start: 0, end: 0 };\n    /** The length of the data bound to this viewport (in number of items). */\n    _dataLength = 0;\n    /** The size of the viewport (in pixels). */\n    _viewportSize = 0;\n    /** the currently attached CdkVirtualScrollRepeater. */\n    _forOf;\n    /** The last rendered content offset that was set. */\n    _renderedContentOffset = 0;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     */\n    _renderedContentOffsetNeedsRewrite = false;\n    _changeDetectionNeeded = signal(false, ...(ngDevMode ? [{ debugName: \"_changeDetectionNeeded\" }] : []));\n    /** A list of functions to run after the next change detection cycle. */\n    _runAfterChangeDetection = [];\n    /** Subscription to changes in the viewport size. */\n    _viewportChanges = Subscription.EMPTY;\n    _injector = inject(Injector);\n    _isDestroyed = false;\n    constructor() {\n        super();\n        const viewportRuler = inject(ViewportRuler);\n        if (!this._scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n        const ref = effect(() => {\n            if (this._changeDetectionNeeded()) {\n                this._doChangeDetection();\n            }\n        }, ...(ngDevMode ? [{ debugName: \"ref\", injector: inject(ApplicationRef).injector }] : [\n            // Using ApplicationRef injector is important here because we want this to be a root\n            // effect that runs before change detection of any application views (since we're depending on markForCheck marking parents dirty)\n            { injector: inject(ApplicationRef).injector }]));\n        inject(DestroyRef).onDestroy(() => void ref.destroy());\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER), \n            // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n            // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n            // to unsubscribe here just in case.\n            takeUntil(this._destroyed))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        this._isDestroyed = true;\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        if (untracked(this._changeDetectionNeeded)) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            Promise.resolve().then(() => {\n                this.ngZone.run(() => {\n                    this._changeDetectionNeeded.set(true);\n                });\n            });\n        });\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        if (this._isDestroyed) {\n            return;\n        }\n        this.ngZone.run(() => {\n            // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n            // from the root, since the repeated items are content projected in. Calling `detectChanges`\n            // instead does not properly check the projected content.\n            this._changeDetectorRef.markForCheck();\n            // Apply the content transform. The transform can't be set via an Angular binding because\n            // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n            // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n            // the `Number` function first to coerce it to a numeric value.\n            this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n            afterNextRender(() => {\n                this._changeDetectionNeeded.set(false);\n                const runAfterChangeDetection = this._runAfterChangeDetection;\n                this._runAfterChangeDetection = [];\n                for (const fn of runAfterChangeDetection) {\n                    fn();\n                }\n            }, { injector: this._injector });\n        });\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight.set(this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`);\n        this._totalContentWidth.set(this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: CdkVirtualScrollViewport, isStandalone: true, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute] }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n            },\n        ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    _viewContainerRef = inject(ViewContainerRef);\n    _template = inject(TemplateRef);\n    _differs = inject(IterableDiffers);\n    _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n    _viewport = inject(CdkVirtualScrollViewport, { skipSelf: true });\n    /** Emits when the rendered view of the data changes. */\n    viewChange = new Subject();\n    /** Subject that emits when a new DataSource instance is given. */\n    _dataSourceChanges = new Subject();\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    _cdkVirtualForOf;\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    _cdkVirtualForTrackBy;\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /** Emits whenever the data in the current DataSource changes. */\n    dataStream = this._dataSourceChanges.pipe(\n    // Start off with null `DataSource`.\n    startWith(null), \n    // Bundle up the previous and current data sources so we can work with both.\n    pairwise(), \n    // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n    // new one, passing back a stream of data changes which we run through `switchMap` to give\n    // us a data stream that emits the latest data from whatever the current `DataSource` is.\n    switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n    // Replay the last emitted data when someone subscribes.\n    shareReplay(1));\n    /** The differ used to calculate changes to the data. */\n    _differ = null;\n    /** The most recent data emitted from the DataSource. */\n    _data;\n    /** The currently rendered items. */\n    _renderedItems;\n    /** The currently rendered range of indices. */\n    _renderedRange;\n    /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n    _needsUpdate = false;\n    _destroyed = new Subject();\n    constructor() {\n        const ngZone = inject(NgZone);\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n    static ngTemplateContextGuard(directive, context) {\n        return true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualForOf, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkVirtualForOf, isStandalone: true, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor() {\n        super();\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkVirtualScrollableElement, isStandalone: true, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor() {\n        super();\n        const document = inject(DOCUMENT);\n        this.elementRef = new ElementRef(document.documentElement);\n        this._scrollElement = document;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkVirtualScrollableWindow, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                }]\n        }], ctorParameters: () => [] });\n\nclass CdkScrollableModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkScrollableModule, imports: [CdkScrollable], exports: [CdkScrollable] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkScrollableModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    imports: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport,\n            CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollViewport,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollingModule, imports: [BidiModule,\n            CdkScrollableModule, BidiModule, CdkScrollableModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkVirtualScrollViewport,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nexport { BreakpointObserver, MediaMatcher } from './breakpoints-observer.mjs';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport './platform2.mjs';\nimport '@angular/common';\nimport './array.mjs';\n\nclass LayoutModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: LayoutModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: LayoutModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\nexport { Breakpoints, LayoutModule };\n\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { InjectionToken, inject, ANIMATION_MODULE_TYPE } from '@angular/core';\n\n/** Injection token used to configure the animations in Angular Material. */\nconst MATERIAL_ANIMATIONS = new InjectionToken('MATERIAL_ANIMATIONS');\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationCurves {\n    static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationDurations {\n    static COMPLEX = '375ms';\n    static ENTERING = '225ms';\n    static EXITING = '195ms';\n}\nlet reducedMotion = null;\n/**\n * Gets the the configured animations state.\n * @docs-private\n */\nfunction _getAnimationsState() {\n    if (inject(MATERIAL_ANIMATIONS, { optional: true })?.animationsDisabled ||\n        inject(ANIMATION_MODULE_TYPE, { optional: true }) === 'NoopAnimations') {\n        return 'di-disabled';\n    }\n    reducedMotion ??= inject(MediaMatcher).matchMedia('(prefers-reduced-motion)').matches;\n    return reducedMotion ? 'reduced-motion' : 'enabled';\n}\n/**\n * Returns whether animations have been disabled by DI. Must be called in a DI context.\n * @docs-private\n */\nfunction _animationsDisabled() {\n    return _getAnimationsState() !== 'enabled';\n}\n\nexport { AnimationCurves, AnimationDurations, MATERIAL_ANIMATIONS, _animationsDisabled, _getAnimationsState };\n\n","import { FocusTrapFactory, FocusMonitor, InteractivityChecker } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, DOCUMENT, signal, EventEmitter, Injector, afterNextRender, Input, Output, ViewChild, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, take, startWith, debounceTime } from 'rxjs/operators';\nimport { _animationsDisabled } from './animation.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/layout';\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    _platform = inject(Platform);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _container = inject(MatDrawerContainer);\n    constructor() {\n        const elementRef = inject(ElementRef);\n        const scrollDispatcher = inject(ScrollDispatcher);\n        const ngZone = inject(NgZone);\n        super(elementRef, scrollDispatcher, ngZone);\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Determines whether the content element should be hidden from the user. */\n    _shouldBeHidden() {\n        // In some modes the content is pushed based on the width of the opened sidenavs, however on\n        // the server we can't measure the sidenav so the margin is always zero. This can cause the\n        // content to jump around when it's rendered on the server and hydrated on the client. We\n        // avoid it by hiding the content on the initial render and then showing it once the sidenav\n        // has been measured on the client.\n        if (this._platform.isBrowser) {\n            return false;\n        }\n        const { start, end } = this._container;\n        return ((start != null && start.mode !== 'over' && start.opened) ||\n            (end != null && end.mode !== 'over' && end.opened));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDrawerContent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatDrawerContent, isStandalone: true, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\", \"class.mat-drawer-content-hidden\": \"_shouldBeHidden()\" }, classAttribute: \"mat-drawer-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatDrawerContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                        '[class.mat-drawer-content-hidden]': '_shouldBeHidden()',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatDrawerContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: () => [] });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    _elementRef = inject(ElementRef);\n    _focusTrapFactory = inject(FocusTrapFactory);\n    _focusMonitor = inject(FocusMonitor);\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _interactivityChecker = inject(InteractivityChecker);\n    _doc = inject(DOCUMENT);\n    _container = inject(MAT_DRAWER_CONTAINER, { optional: true });\n    _focusTrap = null;\n    _elementFocusedBeforeDrawerWasOpened = null;\n    _eventCleanups;\n    /** Whether the view of the component has been attached. */\n    _isAttached;\n    /** Anchor node used to restore the drawer to its initial position. */\n    _anchor;\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value !== this._position) {\n            // Static inputs in Ivy are set before the element is in the DOM.\n            if (this._isAttached) {\n                this._updatePositionInParent(value);\n            }\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    _position = 'start';\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    _mode = 'over';\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    _disableClose = false;\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    _autoFocus;\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened();\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    _opened = signal(false, ...(ngDevMode ? [{ debugName: \"_opened\" }] : []));\n    /** How the sidenav was opened (keypress, mouse click etc.) */\n    _openedVia;\n    /** Emits whenever the drawer has started animating. */\n    _animationStarted = new Subject();\n    /** Emits whenever the drawer is done animating. */\n    _animationEnd = new Subject();\n    /** Event emitted when the drawer open state is changed. */\n    openedChange = \n    // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter(/* isAsync */ true);\n    /** Event emitted when the drawer has been opened. */\n    _openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n    /** Event emitted when the drawer has started opening. */\n    openedStart = this._animationStarted.pipe(filter(() => this.opened), mapTo(undefined));\n    /** Event emitted when the drawer has been closed. */\n    _closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n    /** Event emitted when the drawer has started closing. */\n    closedStart = this._animationStarted.pipe(filter(() => !this.opened), mapTo(undefined));\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Event emitted when the drawer's position changes. */\n    // tslint:disable-next-line:no-output-on-prefix\n    onPositionChanged = new EventEmitter();\n    /** Reference to the inner element that contains all the content. */\n    _content;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n    _modeChanged = new Subject();\n    _injector = inject(Injector);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    constructor() {\n        this.openedChange.pipe(takeUntil(this._destroyed)).subscribe((opened) => {\n            if (opened) {\n                this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            const element = this._elementRef.nativeElement;\n            fromEvent(element, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n            this._eventCleanups = [\n                this._renderer.listen(element, 'transitionrun', this._handleTransitionEvent),\n                this._renderer.listen(element, 'transitionend', this._handleTransitionEvent),\n                this._renderer.listen(element, 'transitioncancel', this._handleTransitionEvent),\n            ];\n        });\n        this._animationEnd.subscribe(() => {\n            this.openedChange.emit(this.opened);\n        });\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    cleanupBlur();\n                    cleanupMousedown();\n                    element.removeAttribute('tabindex');\n                };\n                const cleanupBlur = this._renderer.listen(element, 'blur', callback);\n                const cleanupMousedown = this._renderer.listen(element, 'mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                afterNextRender(() => {\n                    const hasMovedFocus = this._focusTrap.focusInitialElement();\n                    if (!hasMovedFocus && typeof element.focus === 'function') {\n                        element.focus();\n                    }\n                }, { injector: this._injector });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        const activeEl = this._doc.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n        this._isAttached = true;\n        // Only update the DOM position when the sidenav is positioned at\n        // the end since we project the sidenav before the content by default.\n        if (this._position === 'end') {\n            this._updatePositionInParent('end');\n        }\n        // Needs to happen after the position is updated\n        // so the focus trap anchors are in the right place.\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            this._updateFocusTrapState();\n        }\n    }\n    ngOnDestroy() {\n        this._eventCleanups.forEach(cleanup => cleanup());\n        this._focusTrap?.destroy();\n        this._anchor?.remove();\n        this._anchor = null;\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        if (isOpen === this.opened) {\n            return Promise.resolve(isOpen ? 'open' : 'close');\n        }\n        this._opened.set(isOpen);\n        if (this._container?._transitionsEnabled) {\n            // Note: it's importatnt to set this as early as possible,\n            // otherwise the animation can look glitchy in some cases.\n            this._setIsAnimating(true);\n        }\n        else {\n            // Simulate the animation events if animations are disabled.\n            setTimeout(() => {\n                this._animationStarted.next();\n                this._animationEnd.next();\n            });\n        }\n        this._elementRef.nativeElement.classList.toggle('mat-drawer-opened', isOpen);\n        if (!isOpen && restoreFocus) {\n            this._restoreFocus(focusOrigin);\n        }\n        // Needed to ensure that the closing sequence fires off correctly.\n        this._changeDetectorRef.markForCheck();\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    /** Toggles whether the drawer is currently animating. */\n    _setIsAnimating(isAnimating) {\n        this._elementRef.nativeElement.classList.toggle('mat-drawer-animating', isAnimating);\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement.offsetWidth || 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n            // sidenav content.\n            this._focusTrap.enabled = !!this._container?.hasBackdrop && this.opened;\n        }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n        // Don't move the DOM node around on the server, because it can throw off hydration.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        const parent = element.parentNode;\n        if (newPosition === 'end') {\n            if (!this._anchor) {\n                this._anchor = this._doc.createComment('mat-drawer-anchor');\n                parent.insertBefore(this._anchor, element);\n            }\n            parent.appendChild(element);\n        }\n        else if (this._anchor) {\n            this._anchor.parentNode.insertBefore(element, this._anchor);\n        }\n    }\n    /** Event handler for animation events. */\n    _handleTransitionEvent = (event) => {\n        const element = this._elementRef.nativeElement;\n        if (event.target === element) {\n            this._ngZone.run(() => {\n                if (event.type === 'transitionrun') {\n                    this._animationStarted.next(event);\n                }\n                else {\n                    // Don't toggle the animating state on `transitioncancel` since another animation should\n                    // start afterwards. This prevents the drawer from blinking if an animation is interrupted.\n                    if (event.type === 'transitionend') {\n                        this._setIsAnimating(false);\n                    }\n                    this._animationEnd.next(event);\n                }\n            });\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDrawer, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatDrawer, isStandalone: true, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"style.visibility\": \"(!_container && !opened) ? \\\"hidden\\\" : null\", \"attr.tabIndex\": \"(mode !== \\\"side\\\") ? \\\"-1\\\" : null\" }, classAttribute: \"mat-drawer\" }, viewQueries: [{ propertyName: \"_content\", first: true, predicate: [\"content\"], descendants: true }], exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        // The styles that render the sidenav off-screen come from the drawer container. Prior to #30235\n                        // this was also done by the animations module which some internal tests seem to depend on.\n                        // Simulate it by toggling the `hidden` attribute instead.\n                        '[style.visibility]': '(!_container && !opened) ? \"hidden\" : null',\n                        // The sidenav container should not be focused on when used in side mode. See b/286459024 for\n                        // reference. Updates tabIndex of drawer/container to default to null if in side mode.\n                        '[attr.tabIndex]': '(mode !== \"side\") ? \"-1\" : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [CdkScrollable], template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: () => [], propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }], _content: [{\n                type: ViewChild,\n                args: ['content']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    _dir = inject(Directionality, { optional: true });\n    _element = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _animationDisabled = _animationsDisabled();\n    _transitionsEnabled = false;\n    /** All drawers in the container. Includes drawers from inside nested containers. */\n    _allDrawers;\n    /** Drawers that belong to this container. */\n    _drawers = new QueryList();\n    _content;\n    _userContent;\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    _autosize = inject(MAT_DRAWER_DEFAULT_AUTOSIZE);\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    _backdropOverride;\n    /** Event emitted when the drawer backdrop is clicked. */\n    backdropClick = new EventEmitter();\n    /** The drawer at the start/end position, independent of direction. */\n    _start;\n    _end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     */\n    _left;\n    _right;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Emits on every ngDoCheck. Used for debouncing reflows. */\n    _doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n    _contentMargins = { left: null, right: null };\n    _contentMarginChanges = new Subject();\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    _injector = inject(Injector);\n    constructor() {\n        const platform = inject(Platform);\n        const viewportRuler = inject(ViewportRuler);\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._validateDrawers();\n            this.updateContentMargins();\n        });\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        if (!this._animationDisabled && platform.isBrowser) {\n            this._ngZone.runOutsideAngular(() => {\n                // Enable the animations after a delay in order to skip\n                // the initial transition if a drawer is open by default.\n                setTimeout(() => {\n                    this._element.nativeElement.classList.add('mat-drawer-transition');\n                    this._transitionsEnabled = true;\n                }, 200);\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            afterNextRender({ read: () => this._validateDrawers() }, { injector: this._injector });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        drawer._modeChanged\n            .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n            .subscribe(() => {\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end)));\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n    // Whether argument drawer should have a backdrop when it opens\n    _drawerHasBackdrop(drawer) {\n        if (this._backdropOverride == null) {\n            return !!drawer && drawer.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDrawerContainer, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatDrawerContainer, isStandalone: true, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"], dependencies: [{ kind: \"component\", type: MatDrawerContent, selector: \"mat-drawer-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], imports: [MatDrawerContent], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\nclass MatSidenavContent extends MatDrawerContent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenavContent, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatSidenavContent, isStandalone: true, selector: \"mat-sidenav-content\", host: { classAttribute: \"mat-drawer-content mat-sidenav-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatSidenavContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatSidenavContent,\n                        },\n                    ],\n                }]\n        }] });\nclass MatSidenav extends MatDrawer {\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    _fixedInViewport = false;\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    _fixedTopGap = 0;\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n    _fixedBottomGap = 0;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatSidenav, isStandalone: true, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { properties: { \"attr.tabIndex\": \"(mode !== \\\"side\\\") ? \\\"-1\\\" : null\", \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, providers: [{ provide: MatDrawer, useExisting: MatSidenav }], exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        // The sidenav container should not be focused on when used in side mode. See b/286459024 for\n                        // reference. Updates tabIndex of drawer/container to default to null if in side mode.\n                        '[attr.tabIndex]': '(mode !== \"side\") ? \"-1\" : null',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [CdkScrollable], providers: [{ provide: MatDrawer, useExisting: MatSidenav }], template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n    _allDrawers = undefined;\n    // We need an initializer here to avoid a TS error.\n    _content = undefined;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatSidenavContainer, isStandalone: true, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer,\n            },\n            {\n                provide: MatDrawerContainer,\n                useExisting: MatSidenavContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"], dependencies: [{ kind: \"component\", type: MatSidenavContent, selector: \"mat-sidenav-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                        {\n                            provide: MatDrawerContainer,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], imports: [MatSidenavContent], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\nclass MatSidenavModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenavModule, imports: [MatCommonModule,\n            CdkScrollableModule,\n            MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent], exports: [CdkScrollableModule,\n            MatCommonModule,\n            MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenavModule, imports: [MatCommonModule,\n            CdkScrollableModule, CdkScrollableModule,\n            MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CdkScrollableModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matDrawerAnimations = {\n    // Represents\n    // trigger('transform', [\n    //   // We remove the `transform` here completely, rather than setting it to zero, because:\n    //   // 1. Having a transform can cause elements with ripples or an animated\n    //   //    transform to shift around in Chrome with an RTL layout (see #10023).\n    //   // 2. 3d transforms causes text to appear blurry on IE and Edge.\n    //   state(\n    //     'open, open-instant',\n    //     style({\n    //       'transform': 'none',\n    //       'visibility': 'visible',\n    //     }),\n    //   ),\n    //   state(\n    //     'void',\n    //     style({\n    //       // Avoids the shadow showing up when closed in SSR.\n    //       'box-shadow': 'none',\n    //       'visibility': 'hidden',\n    //     }),\n    //   ),\n    //   transition('void => open-instant', animate('0ms')),\n    //   transition(\n    //     'void <=> open, open-instant => void',\n    //     animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'),\n    //   ),\n    // ])\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: {\n        type: 7,\n        name: 'transform',\n        definitions: [\n            {\n                type: 0,\n                name: 'open, open-instant',\n                styles: {\n                    type: 6,\n                    styles: { transform: 'none', visibility: 'visible' },\n                    offset: null,\n                },\n            },\n            {\n                type: 0,\n                name: 'void',\n                styles: {\n                    type: 6,\n                    styles: { 'box-shadow': 'none', visibility: 'hidden' },\n                    offset: null,\n                },\n            },\n            {\n                type: 1,\n                expr: 'void => open-instant',\n                animation: { type: 4, styles: null, timings: '0ms' },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: 'void <=> open, open-instant => void',\n                animation: {\n                    type: 4,\n                    styles: null,\n                    timings: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\n                },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n\n","import { normalizePassiveListenerOptions, _getEventTarget, Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, InjectionToken, inject, ElementRef, NgZone, Injector, Directive, Input } from '@angular/core';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _animationsDisabled } from './animation.mjs';\n\n/** Possible states for a ripple element. */\nvar RippleState;\n(function (RippleState) {\n    RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n    RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n    RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n    RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n})(RippleState || (RippleState = {}));\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    _renderer;\n    element;\n    config;\n    _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    state = RippleState.HIDDEN;\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    _events = new Map();\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    _delegateEventHandler = (event) => {\n        const target = _getEventTarget(event);\n        if (target) {\n            this._events.get(event.type)?.forEach((handlers, element) => {\n                if (element === target || element.contains(target)) {\n                    handlers.forEach(handler => handler.handleEvent(event));\n                }\n            });\n        }\n    };\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\nclass _MatRippleStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _MatRippleStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: _MatRippleStylesLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"mat-ripple-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _MatRippleStylesLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'mat-ripple-style-loader': '' }, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"] }]\n        }] });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    _target;\n    _ngZone;\n    _platform;\n    /** Element where the ripples are being added to. */\n    _containerElement;\n    /** Element which triggers the ripple elements on mouse events. */\n    _triggerElement;\n    /** Whether the pointer is currently down or not. */\n    _isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    _activeRipples = new Map();\n    /** Latest non-persistent ripple that was triggered. */\n    _mostRecentTransientRipple;\n    /** Time in milliseconds when the last touchstart event happened. */\n    _lastTouchStartEvent;\n    /** Whether pointer-up event listeners have been registered. */\n    _pointerUpEventsRegistered = false;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     */\n    _containerRect;\n    static _eventManager = new RippleEventManager();\n    constructor(_target, _ngZone, elementOrElementRef, _platform, injector) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n        if (injector) {\n            injector.get(_CdkPrivateStyleLoader).load(_MatRippleStylesLoader);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = RippleState.FADING_IN;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => {\n                    // Clear the fallback timer since the transition fired correctly.\n                    if (eventListeners) {\n                        eventListeners.fallbackTimer = null;\n                    }\n                    clearTimeout(fallbackTimer);\n                    this._finishRippleTransition(rippleRef);\n                };\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                // In some cases where there's a higher load on the browser, it can choose not to dispatch\n                // neither `transitionend` nor `transitioncancel` (see b/227356674). This timer serves as a\n                // fallback for such cases so that the ripple doesn't become stuck. We add a 100ms buffer\n                // because timers aren't precise. Note that another approach can be to transition the ripple\n                // to the `VISIBLE` state immediately above and to `FADING_IN` afterwards inside\n                // `transitionstart`. We go with the timer because it's one less event listener and\n                // it's less likely to break existing tests.\n                const fallbackTimer = setTimeout(onTransitionCancel, enterDuration + 100);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel, fallbackTimer };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === RippleState.FADING_IN) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === RippleState.FADING_OUT) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = RippleState.VISIBLE;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = RippleState.HIDDEN;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n            if (eventListeners.fallbackTimer !== null) {\n                clearTimeout(eventListeners.fallbackTimer);\n            }\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            // According to the typings the touches should always be defined, but in some cases\n            // the browser appears to not assign them in tests which leads to flakes.\n            if (touches) {\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === RippleState.VISIBLE ||\n                (ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n                this._pointerUpEventsRegistered = false;\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    _elementRef = inject(ElementRef);\n    _animationsDisabled = _animationsDisabled();\n    /** Custom color for all ripples. */\n    color;\n    /** Whether the ripples should be visible outside the component's bounds. */\n    unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     */\n    centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    radius = 0;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     */\n    animation;\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _disabled = false;\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _trigger;\n    /** Renderer for the ripple DOM manipulations. */\n    _rippleRenderer;\n    /** Options that are set globally for all ripples. */\n    _globalOptions;\n    /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n    _isInitialized = false;\n    constructor() {\n        const ngZone = inject(NgZone);\n        const platform = inject(Platform);\n        const globalOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n        const injector = inject(Injector);\n        // Note: cannot use `inject()` here, because this class\n        // gets instantiated manually in the ripple loader.\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, this._elementRef, platform, injector);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationsDisabled ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatRipple, isStandalone: true, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\nexport { MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleRef, RippleRenderer, RippleState, defaultRippleAnimationConfig };\n\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Component used to load structural styles for focus indicators.\n * @docs-private\n */\nclass _StructuralStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _StructuralStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: _StructuralStylesLoader, isStandalone: true, selector: \"structural-styles\", ngImport: i0, template: '', isInline: true, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _StructuralStylesLoader, decorators: [{\n            type: Component,\n            args: [{ selector: 'structural-styles', encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"] }]\n        }] });\n\nexport { _StructuralStylesLoader };\n\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\nclass MatDivider {\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    _vertical = false;\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n    _inset = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatDivider, isStandalone: true, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color, var(--mat-sys-outline-variant));border-top-width:var(--mat-divider-width, 1px)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color, var(--mat-sys-outline-variant));border-right-width:var(--mat-divider-width, 1px)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color, var(--mat-sys-outline-variant));border-top-width:var(--mat-divider-width, 1px)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color, var(--mat-sys-outline-variant));border-right-width:var(--mat-divider-width, 1px)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\nclass MatDividerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatDivider], exports: [MatDivider, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatDivider],\n                    exports: [MatDivider, MatCommonModule],\n                }]\n        }] });\n\nexport { MatDivider, MatDividerModule };\n\n","import { Subject } from 'rxjs';\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    _multiple;\n    _emitChanges;\n    compareWith;\n    /** Currently-selected values. */\n    _selection = new Set();\n    /** Keeps track of the deselected options that haven't been emitted by the change event. */\n    _deselectedToEmit = [];\n    /** Keeps track of the selected options that haven't been emitted by the change event. */\n    _selectedToEmit = [];\n    /** Cache for the array value of the selected items. */\n    _selected;\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /** Event emitted when the value has changed. */\n    changed = new Subject();\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        this.compareWith = compareWith;\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param values The values to select\n     * @return Whether the selection changed as a result of this call\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param values The values to deselect\n     * @return Whether the selection changed as a result of this call\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Sets the selected values\n     * @param values The new selected values\n     * @return Whether the selection changed as a result of this call\n     */\n    setSelection(...values) {\n        this._verifyValueAssignment(values);\n        const oldValues = this.selected;\n        const newSelectedSet = new Set(values.map(value => this._getConcreteValue(value)));\n        values.forEach(value => this._markSelected(value));\n        oldValues\n            .filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet)))\n            .forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param value The value to toggle\n     * @return Whether the selection changed as a result of this call\n     */\n    toggle(value) {\n        return this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @param flushEvent Whether to flush the changes in an event.\n     *   If false, the changes to the selection will be flushed along with the next event.\n     * @return Whether the selection changed as a result of this call\n     */\n    clear(flushEvent = true) {\n        this._unmarkAll();\n        const changed = this._hasQueuedChanges();\n        if (flushEvent) {\n            this._emitChangeEvent();\n        }\n        return changed;\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(this._getConcreteValue(value));\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        value = this._getConcreteValue(value);\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            if (!this.isSelected(value)) {\n                this._selection.add(value);\n            }\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        value = this._getConcreteValue(value);\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n    /** Whether there are queued up change to be emitted. */\n    _hasQueuedChanges() {\n        return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n    }\n    /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n    _getConcreteValue(inputValue, selection) {\n        if (!this.compareWith) {\n            return inputValue;\n        }\n        else {\n            selection = selection ?? this._selection;\n            for (let selectedValue of selection) {\n                if (this.compareWith(inputValue, selectedValue)) {\n                    return selectedValue;\n                }\n            }\n            return inputValue;\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\nexport { SelectionModel, getMultipleValuesInSingleSelectionError };\n\n","export { UniqueSelectionDispatcher } from './unique-selection-dispatcher.mjs';\nexport { ArrayDataSource, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation } from './recycle-view-repeater-strategy.mjs';\nexport { DataSource, isDataSource } from './data-source.mjs';\nexport { _DisposeViewRepeaterStrategy } from './dispose-view-repeater-strategy.mjs';\nexport { SelectionModel, getMultipleValuesInSingleSelectionError } from './selection-model.mjs';\nimport '@angular/core';\nimport 'rxjs';\n\n","/**\n * @license Angular v20.2.1\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise as _isPromise, ɵisSubscribable as _isSubscribable, ɵRuntimeError as _RuntimeError, Self, untracked, computed, signal, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, ApplicationRef, DestroyRef, afterNextRender, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM as _getDOM } from '@angular/common';\nimport { forkJoin, from, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n    _renderer;\n    _elementRef;\n    /**\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @docs-private\n     */\n    onChange = (_) => { };\n    /**\n     * The registered callback function called when a blur event occurs on the input element.\n     * @docs-private\n     */\n    onTouched = () => { };\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @docs-private\n     */\n    setProperty(key, value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.setProperty('disabled', isDisabled);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: BaseControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: BaseControlValueAccessor, isStandalone: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: BaseControlValueAccessor, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }] });\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: BuiltInControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: BuiltInControlValueAccessor, isStandalone: true, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: BuiltInControlValueAccessor, decorators: [{\n            type: Directive\n        }] });\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\n\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        this.setProperty('checked', value);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: CheckboxControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: CheckboxControlValueAccessor, isStandalone: false, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\", host: { listeners: { \"change\": \"onChange($any($event.target).checked)\", \"blur\": \"onTouched()\" } }, providers: [CHECKBOX_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: CheckboxControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($any($event.target).checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }] });\n\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true,\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = _getDOM() ? _getDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```html\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n    _compositionMode;\n    /** Whether the user is creating a composition string (IME events). */\n    _composing = false;\n    constructor(renderer, elementRef, _compositionMode) {\n        super(renderer, elementRef);\n        this._compositionMode = _compositionMode;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: COMPOSITION_BUFFER_MODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: DefaultValueAccessor, isStandalone: false, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\", host: { listeners: { \"input\": \"_handleInput($any($event.target).value)\", \"blur\": \"onTouched()\", \"compositionstart\": \"_compositionStart()\", \"compositionend\": \"_compositionEnd($any($event.target).value)\" } }, providers: [DEFAULT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: DefaultValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngModel],[formControl],[formControlName]',\n                    host: {\n                        '(input)': '_handleInput($any($event.target).value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '_compositionStart()',\n                        '(compositionend)': '_compositionEnd($any($event.target).value)',\n                    },\n                    providers: [DEFAULT_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [COMPOSITION_BUFFER_MODE]\n                }] }] });\n\nfunction isEmptyInputValue(value) {\n    return value == null || lengthOrSize(value) === 0;\n}\n/**\n * Extract the length property in case it's an array or a string.\n * Extract the size property in case it's a set.\n * Return null else.\n * @param value Either an array, set or undefined.\n */\nfunction lengthOrSize(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    if (value == null) {\n        return null;\n    }\n    else if (Array.isArray(value) || typeof value === 'string') {\n        return value.length;\n    }\n    else if (value instanceof Set) {\n        return value.size;\n    }\n    return null;\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```ts\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: forwardRef(() => CustomValidatorDirective), multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```ts\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```ts\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static min(min) {\n        return minValidator(min);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```ts\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static max(max) {\n        return maxValidator(max);\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```ts\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static required(control) {\n        return requiredValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```ts\n     * const control = new FormControl('some value', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static requiredTrue(control) {\n        return requiredTrueValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```ts\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static email(control) {\n        return emailValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the number of items in the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n     * sets. The `minLength` validator logic is also not invoked for values when their `length` or\n     * `size` property is 0 (for example in case of an empty string or an empty array), to support\n     * optional controls. You can use the standard `required` validator if empty values should not be\n     * considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```ts\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static minLength(minLength) {\n        return minLengthValidator(minLength);\n    }\n    /**\n     * @description\n     * Validator that requires the number of items in the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n     * sets.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```ts\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static maxLength(maxLength) {\n        return maxLengthValidator(maxLength);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```ts\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * ### Pattern matching with the global or sticky flag\n     *\n     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n     * can produce different results on the same input when validations are run consecutively. This is\n     * due to how the behavior of `RegExp.prototype.test` is\n     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n     * Due to this behavior, it is recommended that when using\n     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n     * flag enabled.\n     *\n     * ```ts\n     * // Not recommended (since the `g` flag is used)\n     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n     *\n     * // Good\n     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static pattern(pattern) {\n        return patternValidator(pattern);\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static nullValidator(control) {\n        return nullValidator();\n    }\n    static compose(validators) {\n        return compose(validators);\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static composeAsync(validators) {\n        return composeAsync(validators);\n    }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n    return (control) => {\n        if (control.value == null || min == null) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n        return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n    return (control) => {\n        if (control.value == null || max == null) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n        return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n    return isEmptyInputValue(control.value) ? { 'required': true } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n    return control.value === true ? null : { 'required': true };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n    if (isEmptyInputValue(control.value)) {\n        return null; // don't validate empty values to allow optional controls\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n}\n/**\n * Validator that requires the number of items in the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n *\n * The minLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction minLengthValidator(minLength) {\n    return (control) => {\n        const length = control.value?.length ?? lengthOrSize(control.value);\n        if (length === null || length === 0) {\n            // don't validate empty values to allow optional controls\n            // don't validate values without `length` or `size` property\n            return null;\n        }\n        return length < minLength\n            ? { 'minlength': { 'requiredLength': minLength, 'actualLength': length } }\n            : null;\n    };\n}\n/**\n * Validator that requires the number of items in the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n *\n * The maxLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction maxLengthValidator(maxLength) {\n    return (control) => {\n        const length = control.value?.length ?? lengthOrSize(control.value);\n        if (length !== null && length > maxLength) {\n            return { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } };\n        }\n        return null;\n    };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n    if (!pattern)\n        return nullValidator;\n    let regex;\n    let regexStr;\n    if (typeof pattern === 'string') {\n        regexStr = '';\n        if (pattern.charAt(0) !== '^')\n            regexStr += '^';\n        regexStr += pattern;\n        if (pattern.charAt(pattern.length - 1) !== '$')\n            regexStr += '$';\n        regex = new RegExp(regexStr);\n    }\n    else {\n        regexStr = pattern.toString();\n        regex = pattern;\n    }\n    return (control) => {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = control.value;\n        return regex.test(value)\n            ? null\n            : { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n    };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n    return null;\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(value) {\n    const obs = _isPromise(value) ? from(value) : value;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !_isSubscribable(obs)) {\n        let errorMessage = `Expected async validator to return Promise or Observable.`;\n        // A synchronous validator will return object or null.\n        if (typeof value === 'object') {\n            errorMessage +=\n                ' Are you using a synchronous validator where an async validator is expected?';\n        }\n        throw new _RuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? { ...res, ...errors } : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map((validator) => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map((validator) => {\n        return isValidatorFn(validator)\n            ? validator\n            : ((c) => validator.validate(c));\n    });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        return mergeErrors(executeValidators(control, presentValidators));\n    };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n    return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        const observables = executeValidators(control, presentValidators).map(toObservable);\n        return forkJoin(observables).pipe(map(mergeErrors));\n    };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null\n        ? composeAsync(normalizeValidators(validators))\n        : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n    if (controlValidators === null)\n        return [dirValidator];\n    return Array.isArray(controlValidators)\n        ? [...controlValidators, dirValidator]\n        : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n    return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n    return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n    if (!validators)\n        return [];\n    return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n    return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n    const current = makeValidatorsArray(currentValidators);\n    const validatorsToAdd = makeValidatorsArray(validators);\n    validatorsToAdd.forEach((v) => {\n        // Note: if there are duplicate entries in the new validators array,\n        // only the first one would be added to the current list of validators.\n        // Duplicate ones would be ignored since `hasValidator` would detect\n        // the presence of a validator function and we update the current list in place.\n        if (!hasValidator(current, v)) {\n            current.push(v);\n        }\n    });\n    return current;\n}\nfunction removeValidators(validators, currentValidators) {\n    return makeValidatorsArray(currentValidators).filter((v) => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * Contains the result of merging synchronous validators into a single validator function\n     * (combined using `Validators.compose`).\n     */\n    _composedValidatorFn;\n    /**\n     * Contains the result of merging asynchronous validators into a single validator function\n     * (combined using `Validators.composeAsync`).\n     */\n    _composedAsyncValidatorFn;\n    /**\n     * Set of synchronous validators as they were provided while calling `setValidators` function.\n     * @internal\n     */\n    _rawValidators = [];\n    /**\n     * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n     * function.\n     * @internal\n     */\n    _rawAsyncValidators = [];\n    /**\n     * Sets synchronous validators for this directive.\n     * @internal\n     */\n    _setValidators(validators) {\n        this._rawValidators = validators || [];\n        this._composedValidatorFn = composeValidators(this._rawValidators);\n    }\n    /**\n     * Sets asynchronous validators for this directive.\n     * @internal\n     */\n    _setAsyncValidators(validators) {\n        this._rawAsyncValidators = validators || [];\n        this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return this._composedValidatorFn || null;\n    }\n    /**\n     * @description\n     * Asynchronous validator function composed of all the asynchronous validators registered with\n     * this directive.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn || null;\n    }\n    /*\n     * The set of callbacks to be invoked when directive instance is being destroyed.\n     */\n    _onDestroyCallbacks = [];\n    /**\n     * Internal function to register callbacks that should be invoked\n     * when directive instance is being destroyed.\n     * @internal\n     */\n    _registerOnDestroy(fn) {\n        this._onDestroyCallbacks.push(fn);\n    }\n    /**\n     * Internal function to invoke all registered \"on destroy\" callbacks.\n     * Note: calling this function also clears the list of callbacks.\n     * @internal\n     */\n    _invokeOnDestroyCallbacks() {\n        this._onDestroyCallbacks.forEach((fn) => fn());\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```ts\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```ts\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The name for the control\n     */\n    name;\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    /**\n     * @description\n     * The parent form for the control.\n     *\n     * @internal\n     */\n    _parent = null;\n    /**\n     * @description\n     * The name for the control\n     */\n    name = null;\n    /**\n     * @description\n     * The value accessor for the control\n     */\n    valueAccessor = null;\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n    _cd;\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get isTouched() {\n        // track the touched signal\n        this._cd?.control?._touched?.();\n        return !!this._cd?.control?.touched;\n    }\n    get isUntouched() {\n        return !!this._cd?.control?.untouched;\n    }\n    get isPristine() {\n        // track the pristine signal\n        this._cd?.control?._pristine?.();\n        return !!this._cd?.control?.pristine;\n    }\n    get isDirty() {\n        // pristine signal already tracked above\n        return !!this._cd?.control?.dirty;\n    }\n    get isValid() {\n        // track the status signal\n        this._cd?.control?._status?.();\n        return !!this._cd?.control?.valid;\n    }\n    get isInvalid() {\n        // status signal already tracked above\n        return !!this._cd?.control?.invalid;\n    }\n    get isPending() {\n        // status signal already tracked above\n        return !!this._cd?.control?.pending;\n    }\n    get isSubmitted() {\n        // track the submitted signal\n        this._cd?._submitted?.();\n        // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n        // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n        return !!this._cd?.submitted;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'isUntouched',\n    '[class.ng-touched]': 'isTouched',\n    '[class.ng-pristine]': 'isPristine',\n    '[class.ng-dirty]': 'isDirty',\n    '[class.ng-valid]': 'isValid',\n    '[class.ng-invalid]': 'isInvalid',\n    '[class.ng-pending]': 'isPending',\n};\nconst ngGroupStatusHost = {\n    ...ngControlStatusHost,\n    '[class.ng-submitted]': 'isSubmitted',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgControlStatus, deps: [{ token: NgControl, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: NgControlStatus, isStandalone: false, selector: \"[formControlName],[ngModel],[formControl]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\" } }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgControlStatus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formControlName],[ngModel],[formControl]',\n                    host: ngControlStatusHost,\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: NgControl, decorators: [{\n                    type: Self\n                }] }] });\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgControlStatusGroup, deps: [{ token: ControlContainer, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: NgControlStatusGroup, isStandalone: false, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\", \"class.ng-submitted\": \"isSubmitted\" } }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgControlStatusGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngGroupStatusHost,\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }] });\n\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\n\nfunction controlParentException(nameOrIndex) {\n    return new _RuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive. You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      ${describeFormControl(nameOrIndex)}\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction describeFormControl(nameOrIndex) {\n    if (nameOrIndex == null || nameOrIndex === '') {\n        return '';\n    }\n    const valueType = typeof nameOrIndex === 'string' ? 'name' : 'index';\n    return `Affected Form Control ${valueType}: \"${nameOrIndex}\"`;\n}\nfunction ngModelGroupException() {\n    return new _RuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n    return new _RuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n    return new _RuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n    return new _RuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n    return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n    return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n    return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n    return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n    return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Base class for every event sent by `AbstractControl.events()`\n *\n * @publicApi\n */\nclass ControlEvent {\n}\n/**\n * Event fired when the value of a control changes.\n *\n * @publicApi\n */\nclass ValueChangeEvent extends ControlEvent {\n    value;\n    source;\n    constructor(value, source) {\n        super();\n        this.value = value;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's pristine state changes (pristine <=> dirty).\n *\n * @publicApi */\nclass PristineChangeEvent extends ControlEvent {\n    pristine;\n    source;\n    constructor(pristine, source) {\n        super();\n        this.pristine = pristine;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's touched status changes (touched <=> untouched).\n *\n * @publicApi\n */\nclass TouchedChangeEvent extends ControlEvent {\n    touched;\n    source;\n    constructor(touched, source) {\n        super();\n        this.touched = touched;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's status changes.\n *\n * @publicApi\n */\nclass StatusChangeEvent extends ControlEvent {\n    status;\n    source;\n    constructor(status, source) {\n        super();\n        this.status = status;\n        this.source = source;\n    }\n}\n/**\n * Event fired when a form is submitted\n *\n * @publicApi\n */\nclass FormSubmittedEvent extends ControlEvent {\n    source;\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n}\n/**\n * Event fired when a form is reset.\n *\n * @publicApi\n */\nclass FormResetEvent extends ControlEvent {\n    source;\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n            console.warn(asyncValidatorsDroppedWithOptsWarning);\n        }\n    }\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator)\n        ? composeAsyncValidators(asyncValidator)\n        : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return (validatorOrOpts != null &&\n        !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object');\n}\nfunction assertControlPresent(parent, isGroup, key) {\n    const controls = parent.controls;\n    const collection = isGroup ? Object.keys(controls) : controls;\n    if (!collection.length) {\n        throw new _RuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n    }\n    if (!controls[key]) {\n        throw new _RuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n    }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n    control._forEachChild((_, key) => {\n        if (value[key] === undefined) {\n            throw new _RuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n        }\n    });\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see [Dynamic Forms Guide](guide/forms/dynamic-forms)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /** @internal */\n    _pendingDirty = false;\n    /**\n     * Indicates that a control has its own pending asynchronous validation in progress.\n     * It also stores if the control should emit events when the validation status changes.\n     *\n     * @internal\n     */\n    _hasOwnPendingAsyncValidator = null;\n    /** @internal */\n    _pendingTouched = false;\n    /** @internal */\n    _onCollectionChange = () => { };\n    /** @internal */\n    _updateOn;\n    _parent = null;\n    _asyncValidationSubscription;\n    /**\n     * Contains the result of merging synchronous validators into a single validator function\n     * (combined using `Validators.compose`).\n     *\n     * @internal\n     */\n    _composedValidatorFn;\n    /**\n     * Contains the result of merging asynchronous validators into a single validator function\n     * (combined using `Validators.composeAsync`).\n     *\n     * @internal\n     */\n    _composedAsyncValidatorFn;\n    /**\n     * Synchronous validators as they were provided:\n     *  - in `AbstractControl` constructor\n     *  - as an argument while calling `setValidators` function\n     *  - while calling the setter on the `validator` field (e.g. `control.validator = validatorFn`)\n     *\n     * @internal\n     */\n    _rawValidators;\n    /**\n     * Asynchronous validators as they were provided:\n     *  - in `AbstractControl` constructor\n     *  - as an argument while calling `setAsyncValidators` function\n     *  - while calling the setter on the `asyncValidator` field (e.g. `control.asyncValidator =\n     * asyncValidatorFn`)\n     *\n     * @internal\n     */\n    _rawAsyncValidators;\n    /**\n     * The current value of the control.\n     *\n     * * For a `FormControl`, the current value.\n     * * For an enabled `FormGroup`, the values of enabled controls as an object\n     * with a key-value pair for each member of the group.\n     * * For a disabled `FormGroup`, the values of all controls as an object\n     * with a key-value pair for each member of the group.\n     * * For a `FormArray`, the values of enabled controls as an array.\n     *\n     */\n    value;\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        this._assignValidators(validators);\n        this._assignAsyncValidators(asyncValidators);\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control synchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control asynchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * The validation status of the control.\n     *\n     * @see {@link FormControlStatus}\n     *\n     * These status values are mutually exclusive, so a control cannot be\n     * both valid AND invalid or invalid AND disabled.\n     */\n    get status() {\n        return untracked(this.statusReactive);\n    }\n    set status(v) {\n        untracked(() => this.statusReactive.set(v));\n    }\n    /** @internal */\n    _status = computed(() => this.statusReactive(), ...(ngDevMode ? [{ debugName: \"_status\" }] : []));\n    statusReactive = signal(undefined, ...(ngDevMode ? [{ debugName: \"statusReactive\" }] : []));\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * An object containing any errors generated by failing validation,\n     * or null if there are no errors.\n     */\n    errors;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get pristine() {\n        return untracked(this.pristineReactive);\n    }\n    set pristine(v) {\n        untracked(() => this.pristineReactive.set(v));\n    }\n    /** @internal */\n    _pristine = computed(() => this.pristineReactive(), ...(ngDevMode ? [{ debugName: \"_pristine\" }] : []));\n    pristineReactive = signal(true, ...(ngDevMode ? [{ debugName: \"pristineReactive\" }] : []));\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    get touched() {\n        return untracked(this.touchedReactive);\n    }\n    set touched(v) {\n        untracked(() => this.touchedReactive.set(v));\n    }\n    /** @internal */\n    _touched = computed(() => this.touchedReactive(), ...(ngDevMode ? [{ debugName: \"_touched\" }] : []));\n    touchedReactive = signal(false, ...(ngDevMode ? [{ debugName: \"touchedReactive\" }] : []));\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Exposed as observable, see below.\n     *\n     * @internal\n     */\n    _events = new Subject();\n    /**\n     * A multicasting observable that emits an event every time the state of the control changes.\n     * It emits for value, status, pristine or touched changes.\n     *\n     * **Note**: On value change, the emit happens right after a value of this control is updated. The\n     * value of a parent control (for example if this FormControl is a part of a FormGroup) is updated\n     * later, so accessing a value of a parent control (using the `value` property) from the callback\n     * of this event might result in getting a value that has not been updated yet. Subscribe to the\n     * `events` of the parent control instead.\n     * For other event types, the events are emitted after the parent control has been updated.\n     *\n     */\n    events = this._events.asObservable();\n    /**\n     * A multicasting observable that emits an event every time the value of the control changes, in\n     * the UI or programmatically. It also emits an event each time you call enable() or disable()\n     * without passing along {emitEvent: false} as a function argument.\n     *\n     * **Note**: the emit happens right after a value of this control is updated. The value of a\n     * parent control (for example if this FormControl is a part of a FormGroup) is updated later, so\n     * accessing a value of a parent control (using the `value` property) from the callback of this\n     * event might result in getting a value that has not been updated yet. Subscribe to the\n     * `valueChanges` event of the parent control instead.\n     */\n    valueChanges;\n    /**\n     * A multicasting observable that emits an event every time the validation `status` of the control\n     * recalculates.\n     *\n     * @see {@link FormControlStatus}\n     * @see {@link AbstractControl.status}\n     */\n    statusChanges;\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing synchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addValidators()` method instead.\n     */\n    setValidators(validators) {\n        this._assignValidators(validators);\n    }\n    /**\n     * Sets the asynchronous validators that are active on this control. Calling this\n     * overwrites any existing asynchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addAsyncValidators()` method instead.\n     */\n    setAsyncValidators(validators) {\n        this._assignAsyncValidators(validators);\n    }\n    /**\n     * Add a synchronous validator or validators to this control, without affecting other validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect. If duplicate validator functions\n     * are present in the `validators` array, only the first instance would be added to a form\n     * control.\n     *\n     * @param validators The new validator function or functions to add to this control.\n     */\n    addValidators(validators) {\n        this.setValidators(addValidators(validators, this._rawValidators));\n    }\n    /**\n     * Add an asynchronous validator or validators to this control, without affecting other\n     * validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect.\n     *\n     * @param validators The new asynchronous validator function or functions to add to this control.\n     */\n    addAsyncValidators(validators) {\n        this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Remove a synchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found,\n     * it is ignored.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<string | null>('', Validators.required);\n     * ctrl.removeValidators(Validators.required);\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<string | null>('', minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n     *\n     * ctrl.removeValidators(minValidator);\n     * ```\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The validator or validators to remove.\n     */\n    removeValidators(validators) {\n        this.setValidators(removeValidators(validators, this._rawValidators));\n    }\n    /**\n     * Remove an asynchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found, it\n     * is ignored.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The asynchronous validator or validators to remove.\n     */\n    removeAsyncValidators(validators) {\n        this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Check whether a synchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<number | null>(0, Validators.required);\n     * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<number | null>(0, minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n     * ```\n     *\n     * @param validator The validator to check for presence. Compared by function reference.\n     * @returns Whether the provided validator was found on this control.\n     */\n    hasValidator(validator) {\n        return hasValidator(this._rawValidators, validator);\n    }\n    /**\n     * Check whether an asynchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @param validator The asynchronous validator to check for presence. Compared by function\n     *     reference.\n     * @returns Whether the provided asynchronous validator was found on this control.\n     */\n    hasAsyncValidator(validator) {\n        return hasValidator(this._rawAsyncValidators, validator);\n    }\n    /**\n     * Empties out the synchronous validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    markAsTouched(opts = {}) {\n        const changed = this.touched === false;\n        this.touched = true;\n        const sourceControl = opts.sourceControl ?? this;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched({ ...opts, sourceControl });\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new TouchedChangeEvent(true, sourceControl));\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `dirty`.\n     * @see {@link markAsDirty()}\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `emitEvent`: When true or not supplied (the default), the `events`\n     * observable emits a `PristineChangeEvent` with the `pristine` property being `false`.\n     * When false, no events are emitted.\n     */\n    markAllAsDirty(opts = {}) {\n        this.markAsDirty({ onlySelf: true, emitEvent: opts.emitEvent, sourceControl: this });\n        this._forEachChild((control) => control.markAllAsDirty(opts));\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see {@link markAsTouched()}\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `emitEvent`: When true or not supplied (the default), the `events`\n     * observable emits a `TouchedChangeEvent` with the `touched` property being `true`.\n     * When false, no events are emitted.\n     */\n    markAllAsTouched(opts = {}) {\n        this.markAsTouched({ onlySelf: true, emitEvent: opts.emitEvent, sourceControl: this });\n        this._forEachChild((control) => control.markAllAsTouched(opts));\n    }\n    markAsUntouched(opts = {}) {\n        const changed = this.touched === true;\n        this.touched = false;\n        this._pendingTouched = false;\n        const sourceControl = opts.sourceControl ?? this;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true, emitEvent: opts.emitEvent, sourceControl });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts, sourceControl);\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new TouchedChangeEvent(false, sourceControl));\n        }\n    }\n    markAsDirty(opts = {}) {\n        const changed = this.pristine === true;\n        this.pristine = false;\n        const sourceControl = opts.sourceControl ?? this;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty({ ...opts, sourceControl });\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new PristineChangeEvent(false, sourceControl));\n        }\n    }\n    markAsPristine(opts = {}) {\n        const changed = this.pristine === false;\n        this.pristine = true;\n        this._pendingDirty = false;\n        const sourceControl = opts.sourceControl ?? this;\n        this._forEachChild((control) => {\n            /** We don't propagate the source control downwards */\n            control.markAsPristine({ onlySelf: true, emitEvent: opts.emitEvent });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts, sourceControl);\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new PristineChangeEvent(true, sourceControl));\n        }\n    }\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending({ ...opts, sourceControl });\n        }\n    }\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            /** We don't propagate the source control downwards */\n            control.disable({ ...opts, onlySelf: true });\n        });\n        this._updateValue();\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new ValueChangeEvent(this.value, sourceControl));\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors({ ...opts, skipPristineCheck }, this);\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`,\n     * `valueChanges` and `events`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable({ ...opts, onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors({ ...opts, skipPristineCheck }, this);\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts, sourceControl) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine({}, sourceControl);\n            }\n            this._parent._updateTouched({}, sourceControl);\n        }\n    }\n    /**\n     * Sets the parent of the control\n     *\n     * @param parent The new parent.\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * The raw value of this control. For most control implementations, the raw value will include\n     * disabled children.\n     */\n    getRawValue() {\n        return this.value;\n    }\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            const shouldHaveEmitted = this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                // If the canceled subscription should have emitted\n                // we make sure the async validator emits the status change on completion\n                this._runAsyncValidator(shouldHaveEmitted, opts.emitEvent);\n            }\n        }\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new ValueChangeEvent(this.value, sourceControl));\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity({ ...opts, sourceControl });\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(shouldHaveEmitted, emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = {\n                emitEvent: emitEvent !== false,\n                shouldHaveEmitted: shouldHaveEmitted !== false,\n            };\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = null;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent, shouldHaveEmitted });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            // we're cancelling the validator subscribtion, we keep if it should have emitted\n            // because we want to emit eventually if it was required at least once.\n            const shouldHaveEmitted = (this._hasOwnPendingAsyncValidator?.emitEvent ||\n                this._hasOwnPendingAsyncValidator?.shouldHaveEmitted) ??\n                false;\n            this._hasOwnPendingAsyncValidator = null;\n            return shouldHaveEmitted;\n        }\n        return false;\n    }\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false, this, opts.shouldHaveEmitted);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control. If a string is provided, passing it as a string literal will result in improved type\n     * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n     * information to be available.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n     *\n     * ### Retrieve a control in a FormArray\n     *\n     * When accessing an element inside a FormArray, you can use an element index.\n     * For example, to get a `price` control from the first element in an `items` array you can use:\n     *\n     * * `this.form.get('items.0.price');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['items', 0, 'price']);`\n     */\n    get(path) {\n        let currPath = path;\n        if (currPath == null)\n            return null;\n        if (!Array.isArray(currPath))\n            currPath = currPath.split('.');\n        if (currPath.length === 0)\n            return null;\n        return currPath.reduce((control, name) => control && control._find(name), this);\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```ts\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```ts\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        // The Events Observable expose a slight different bevahior than the statusChanges obs\n        // An async validator will still emit a StatusChangeEvent is a previously cancelled\n        // async validator has emitEvent set to true\n        if (emitEvent || shouldHaveEmitted) {\n            this._events.next(new StatusChangeEvent(this.status, changedControl));\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        // TODO: this should be piped from events() but is breaking in G3\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts, changedControl) {\n        const newPristine = !this._anyControlsDirty();\n        const changed = this.pristine !== newPristine;\n        this.pristine = newPristine;\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts, changedControl);\n        }\n        if (changed) {\n            this._events.next(new PristineChangeEvent(this.pristine, changedControl));\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}, changedControl) {\n        this.touched = this._anyControlsTouched();\n        this._events.next(new TouchedChangeEvent(this.touched, changedControl));\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts, changedControl);\n        }\n    }\n    /** @internal */\n    _onDisabledChange = [];\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n    }\n    /** @internal */\n    _find(name) {\n        return null;\n    }\n    /**\n     * Internal implementation of the `setValidators` method. Needs to be separated out into a\n     * different method, because it is called in the constructor and it can break cases where\n     * a control is extended.\n     */\n    _assignValidators(validators) {\n        this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n    }\n    /**\n     * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n     * different method, because it is called in the constructor and it can break cases where\n     * a control is extended.\n     */\n    _assignAsyncValidators(validators) {\n        this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```ts\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```ts\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n            // so we set `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n    }\n    controls;\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    addControl(name, control, options = {}) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group. In a strongly-typed group, required controls cannot be\n     * removed.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to remove from the collection\n     * @param options Specifies whether this FormGroup instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeControl(name, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete this.controls[name];\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    setControl(name, control, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete this.controls[name];\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, true, value);\n        Object.keys(value).forEach((name) => {\n            assertControlPresent(this, true, name);\n            this.controls[name].setValue(value[name], {\n                onlySelf: true,\n                emitEvent: options.emitEvent,\n            });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormGroup instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        Object.keys(value).forEach((name) => {\n            // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n            // `as any` is required.\n            const control = this.controls[name];\n            if (control) {\n                control.patchValue(\n                /* Guaranteed to be present, due to the outer forEach. */ value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n     * the value of all descendants to their default values, or null if no defaults were provided.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(form.value);  // {last: 'last'}\n     * console.log(form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value ? value[name] : null, {\n                onlySelf: true,\n                emitEvent: options.emitEvent,\n            });\n        });\n        this._updatePristine(options, this);\n        this._updateTouched(options, this);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach((key) => {\n            // The list of controls can change (for ex. controls might be removed) while the loop\n            // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n            // have to null check before invoking the callback.\n            const control = this.controls[key];\n            control && cb(control, key);\n        });\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const [controlName, control] of Object.entries(this.controls)) {\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        let acc = {};\n        return this._reduceChildren(acc, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _find(name) {\n        return this.controls.hasOwnProperty(name)\n            ? this.controls[name]\n            : null;\n    }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n    const invalidKeys = Object.keys(controls).filter((key) => key.includes('.'));\n    if (invalidKeys.length > 0) {\n        // TODO: make this an error once there are no more uses in G3\n        console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n    }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = (control) => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```ts\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {\n}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = (control) => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'CallSetDisabledState' : '', {\n    providedIn: 'root',\n    factory: () => setDisabledStateDefault,\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwMissingValueAccessorError(dir);\n    }\n    setUpValidators(control, dir);\n    dir.valueAccessor.writeValue(control.value);\n    // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n    // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n    // the method is always called.\n    if (control.disabled || callSetDisabledState === 'always') {\n        dir.valueAccessor.setDisabledState?.(control.disabled);\n    }\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n    const noop = () => {\n        if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            _noControlError(dir);\n        }\n    };\n    // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n    // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n    // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n    // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n    // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n    if (dir.valueAccessor) {\n        dir.valueAccessor.registerOnChange(noop);\n        dir.valueAccessor.registerOnTouched(noop);\n    }\n    cleanUpValidators(control, dir);\n    if (control) {\n        dir._invokeOnDestroyCallbacks();\n        control._registerOnCollectionChange(() => { });\n    }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n    validators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(onChange);\n    });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n    if (dir.valueAccessor.setDisabledState) {\n        const onDisabledChange = (isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        };\n        control.registerOnDisabledChange(onDisabledChange);\n        // Register a callback function to cleanup disabled change handler\n        // from a control instance when a directive is destroyed.\n        dir._registerOnDestroy(() => {\n            control._unregisterOnDisabledChange(onDisabledChange);\n        });\n    }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n    const validators = getControlValidators(control);\n    if (dir.validator !== null) {\n        control.setValidators(mergeValidators(validators, dir.validator));\n    }\n    else if (typeof validators === 'function') {\n        // If sync validators are represented by a single validator function, we force the\n        // `Validators.compose` call to happen by executing the `setValidators` function with\n        // an array that contains that function. We need this to avoid possible discrepancies in\n        // validators behavior, so sync validators are always processed by the `Validators.compose`.\n        // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n        // have consistent behavior on AbstractControl API level. The same applies to the async\n        // validators logic below.\n        control.setValidators([validators]);\n    }\n    const asyncValidators = getControlAsyncValidators(control);\n    if (dir.asyncValidator !== null) {\n        control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n    }\n    else if (typeof asyncValidators === 'function') {\n        control.setAsyncValidators([asyncValidators]);\n    }\n    // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    const onValidatorChange = () => control.updateValueAndValidity();\n    registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n    registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n    let isControlUpdated = false;\n    if (control !== null) {\n        if (dir.validator !== null) {\n            const validators = getControlValidators(control);\n            if (Array.isArray(validators) && validators.length > 0) {\n                // Filter out directive validator function.\n                const updatedValidators = validators.filter((validator) => validator !== dir.validator);\n                if (updatedValidators.length !== validators.length) {\n                    isControlUpdated = true;\n                    control.setValidators(updatedValidators);\n                }\n            }\n        }\n        if (dir.asyncValidator !== null) {\n            const asyncValidators = getControlAsyncValidators(control);\n            if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n                // Filter out directive async validator function.\n                const updatedAsyncValidators = asyncValidators.filter((asyncValidator) => asyncValidator !== dir.asyncValidator);\n                if (updatedAsyncValidators.length !== asyncValidators.length) {\n                    isControlUpdated = true;\n                    control.setAsyncValidators(updatedAsyncValidators);\n                }\n            }\n        }\n    }\n    // Clear onValidatorChange callbacks by providing a noop function.\n    const noop = () => { };\n    registerOnValidatorChange(dir._rawValidators, noop);\n    registerOnValidatorChange(dir._rawAsyncValidators, noop);\n    return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    const onChange = (newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    };\n    control.registerOnChange(onChange);\n    // Register a callback function to cleanup onChange handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n        control._unregisterOnChange(onChange);\n    });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n    return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    const messageEnd = _describeControlLocation(dir);\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n    const path = dir.path;\n    if (path && path.length > 1)\n        return `path: '${path.join(' -> ')}'`;\n    if (path?.[0])\n        return `name: '${path}'`;\n    return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new _RuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new _RuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` +\n        `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n    // Check if a given value accessor is an instance of a class that directly extends\n    // `BuiltInControlValueAccessor` one.\n    return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach((dir) => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwInvalidValueAccessorError(dir);\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeListItem$1(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        console.warn(ngModelWarning(name));\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm),\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    get submitted() {\n        return untracked(this.submittedReactive);\n    }\n    /** @internal */\n    _submitted = computed(() => this.submittedReactive(), ...(ngDevMode ? [{ debugName: \"_submitted\" }] : []));\n    submittedReactive = signal(false, ...(ngDevMode ? [{ debugName: \"submittedReactive\" }] : []));\n    _directives = new Set();\n    /**\n     * @description\n     * The `FormGroup` instance created for this form.\n     */\n    form;\n    /**\n     * @description\n     * Event emitter for the \"ngSubmit\" event\n     */\n    ngSubmit = new EventEmitter();\n    /**\n     * @description\n     * Tracks options for the `NgForm` instance.\n     *\n     * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n     * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n     * Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    options;\n    constructor(validators, asyncValidators, callSetDisabledState) {\n        super();\n        this.callSetDisabledState = callSetDisabledState;\n        this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @docs-private */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir, this.callSetDisabledState);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.add(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            this._directives.delete(dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise$1.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submittedReactive.set(true);\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        this.form._events.next(new FormSubmittedEvent(this.control));\n        // Forms with `method=\"dialog\"` have some special behavior\n        // that won't reload the page and that shouldn't be prevented.\n        return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submittedReactive.set(false);\n        this.form._events.next(new FormResetEvent(this.form));\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgForm, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: NgForm, isStandalone: false, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider$1], exportAs: [\"ngForm\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgForm, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                    providers: [formDirectiveProvider$1],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { options: [{\n                type: Input,\n                args: ['ngFormOptions']\n            }] } });\n\nfunction removeListItem(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n\nfunction isFormControlState(formState) {\n    return (typeof formState === 'object' &&\n        formState !== null &&\n        Object.keys(formState).length === 2 &&\n        'value' in formState &&\n        'disabled' in formState);\n}\nconst FormControl = class FormControl extends AbstractControl {\n    /** @publicApi */\n    defaultValue = null;\n    /** @internal */\n    _onChange = [];\n    /** @internal */\n    _pendingValue;\n    /** @internal */\n    _pendingChange = false;\n    constructor(\n    // formState and defaultValue will only be null if T is nullable\n    formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this._initObservables();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set\n            // `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n        if (isOptionsObj(validatorOrOpts) &&\n            (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n            if (isFormControlState(formState)) {\n                this.defaultValue = formState.value;\n            }\n            else {\n                this.defaultValue = formState;\n            }\n        }\n    }\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    reset(formState = this.defaultValue, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**  @internal */\n    _updateValue() { }\n    /**  @internal */\n    _anyControls(condition) {\n        return false;\n    }\n    /**  @internal */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnChange(fn) {\n        removeListItem(this._onChange, fn);\n    }\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnDisabledChange(fn) {\n        removeListItem(this._onDisabledChange, fn);\n    }\n    /** @internal */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (isFormControlState(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled\n                ? this.disable({ onlySelf: true, emitEvent: false })\n                : this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = (control) => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * The parent control for the group\n     *\n     * @internal\n     */\n    _parent;\n    /** @docs-private */\n    ngOnInit() {\n        this._checkParentType();\n        // Register the group with its parent group.\n        this.formDirective.addFormGroup(this);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            // Remove the group from its parent group.\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: AbstractFormGroupDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: AbstractFormGroupDirective, isStandalone: false, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: AbstractFormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                }]\n        }] });\n\nfunction modelParentException() {\n    return new _RuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n    return new _RuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n    return new _RuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n    return new _RuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\n\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup),\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     */\n    name = '';\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) &&\n            !(this._parent instanceof NgForm) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw modelGroupParentException();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgModelGroup, deps: [{ token: ControlContainer, host: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: NgModelGroup, isStandalone: false, selector: \"[ngModelGroup]\", inputs: { name: [\"ngModelGroup\", \"name\"] }, providers: [modelGroupProvider], exportAs: [\"ngModelGroup\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgModelGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngModelGroup]',\n                    providers: [modelGroupProvider],\n                    exportAs: 'ngModelGroup',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['ngModelGroup']\n            }] } });\n\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel),\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```html\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    _changeDetectorRef;\n    callSetDisabledState;\n    control = new FormControl();\n    // At runtime we coerce arbitrary values assigned to the \"disabled\" input to a \"boolean\".\n    // This is not reflected in the type of the property because outside of templates, consumers\n    // should only deal with booleans. In templates, a string is allowed for convenience and to\n    // match the native \"disabled attribute\" semantics which can be observed on input elements.\n    // This static member tells the compiler that values of type \"string\" can also be assigned\n    // to the input in a template.\n    /** @docs-private */\n    static ngAcceptInputType_isDisabled;\n    /** @internal */\n    _registered = false;\n    /**\n     * Internal reference to the view model value.\n     * @docs-private\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the name bound to the directive. If a parent form exists, it\n     * uses this name as a key to retrieve this control's value.\n     */\n    name = '';\n    /**\n     * @description\n     * Tracks whether the control is disabled.\n     */\n    isDisabled;\n    /**\n     * @description\n     * Tracks the value bound to this directive.\n     */\n    model;\n    /**\n     * @description\n     * Tracks the configuration options for this `ngModel` instance.\n     *\n     * **name**: An alternative to setting the name attribute on the form control element. See\n     * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n     * as a standalone control.\n     *\n     * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n     * and acts as if it's not in the form. Defaults to false. If no parent form exists, this option\n     * has no effect.\n     *\n     * **updateOn**: Defines the event upon which the form control value and validity update.\n     * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    options;\n    /**\n     * @description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     */\n    update = new EventEmitter();\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this.callSetDisabledState = callSetDisabledState;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered || 'name' in changes) {\n            if (this._registered) {\n                this._checkName();\n                if (this.formDirective) {\n                    // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n                    // changed. We also can't reset the name temporarily since the logic in `removeControl`\n                    // is inside a promise and it won't run immediately. We work around it by giving it an\n                    // object with the same shape instead.\n                    const oldName = changes['name'].previousValue;\n                    this.formDirective.removeControl({ name: oldName, path: this._getPath(oldName) });\n                }\n            }\n            this._setUpControl();\n        }\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this, this.callSetDisabledState);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._isStandalone()) {\n            checkParentType$1(this._parent);\n        }\n        this._checkName();\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        // checking for 0 to avoid breaking change\n        const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n        resolvedPromise.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _getPath(controlName) {\n        return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgModel, deps: [{ token: ControlContainer, host: true, optional: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: ChangeDetectorRef, optional: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: NgModel, isStandalone: false, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding$1], exportAs: [\"ngModel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgModel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding$1],\n                    exportAs: 'ngModel',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { name: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], options: [{\n                type: Input,\n                args: ['ngModelOptions']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\nfunction checkParentType$1(parent) {\n    if (!(parent instanceof NgModelGroup) && parent instanceof AbstractFormGroupDirective) {\n        throw formGroupNameException();\n    }\n    else if (!(parent instanceof NgModelGroup) && !(parent instanceof NgForm)) {\n        throw modelParentException();\n    }\n}\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```html\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵNgNoValidate, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: ɵNgNoValidate, isStandalone: false, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\", host: { attributes: { \"novalidate\": \"\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵNgNoValidate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                    host: { 'novalidate': '' },\n                    standalone: false,\n                }]\n        }] });\n\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NumberValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: NumberValueAccessor, isStandalone: false, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\", host: { listeners: { \"input\": \"onChange($any($event.target).value)\", \"blur\": \"onTouched()\" } }, providers: [NUMBER_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NumberValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: { '(input)': 'onChange($any($event.target).value)', '(blur)': 'onTouched()' },\n                    providers: [NUMBER_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }] });\n\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true,\n};\nfunction throwNameError() {\n    throw new _RuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    _accessors = [];\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return (controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RadioControlRegistry, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RadioControlRegistry, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RadioControlRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    _registry;\n    _injector;\n    /** @internal */\n    _state;\n    /** @internal */\n    _control;\n    /** @internal */\n    _fn;\n    setDisabledStateFired = false;\n    /**\n     * The registered callback function called when a change event occurs on the input element.\n     * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n     * to override the `onChange` function (which expects 1 argument) in the parent\n     * `BaseControlValueAccessor` class.\n     * @docs-private\n     */\n    onChange = () => { };\n    /**\n     * @description\n     * Tracks the name of the radio input element.\n     */\n    name;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     */\n    formControlName;\n    /**\n     * @description\n     * Tracks the value of the radio input element\n     */\n    value;\n    callSetDisabledState = inject(CALL_SET_DISABLED_STATE, { optional: true }) ?? setDisabledStateDefault;\n    constructor(renderer, elementRef, _registry, _injector) {\n        super(renderer, elementRef);\n        this._registry = _registry;\n        this._injector = _injector;\n    }\n    /** @docs-private */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /** @docs-private */\n    setDisabledState(isDisabled) {\n        /**\n         * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n         * including upon control creation. However, a longstanding bug caused the method to not fire\n         * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n         *\n         * This had a side effect: previously, it was possible to instantiate a reactive form control\n         * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n         * model. This resulted in a mismatch between the model and the DOM. Now, because\n         * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n         * with the \"correct\" enabled value.\n         *\n         * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n         * models the entire group of radio buttons as a single `FormControl`, there is no way to\n         * control the disabled state for individual radios, so they can no longer be configured as\n         * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n         * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n         * is `false`, and we are not in legacy mode.\n         */\n        if (this.setDisabledStateFired ||\n            isDisabled ||\n            this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n            this.setProperty('disabled', isDisabled);\n        }\n        this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    _checkName() {\n        if (this.name &&\n            this.formControlName &&\n            this.name !== this.formControlName &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RadioControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: RadioControlRegistry }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: RadioControlValueAccessor, isStandalone: false, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, host: { listeners: { \"change\": \"onChange()\", \"blur\": \"onTouched()\" } }, providers: [RADIO_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RadioControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: RadioControlRegistry }, { type: i0.Injector }], propDecorators: { name: [{\n                type: Input\n            }], formControlName: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RangeValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: RangeValueAccessor, isStandalone: false, selector: \"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]\", host: { listeners: { \"change\": \"onChange($any($event.target).value)\", \"input\": \"onChange($any($event.target).value)\", \"blur\": \"onTouched()\" } }, providers: [RANGE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RangeValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                    host: {\n                        '(change)': 'onChange($any($event.target).value)',\n                        '(input)': 'onChange($any($event.target).value)',\n                        '(blur)': 'onTouched()',\n                    },\n                    providers: [RANGE_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }] });\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective),\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    _ngModelWarningConfig;\n    callSetDisabledState;\n    /**\n     * Internal reference to the view model value.\n     * @docs-private\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    form;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this.callSetDisabledState = callSetDisabledState;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            const previousForm = changes['form'].previousValue;\n            if (previousForm) {\n                cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */ false);\n            }\n            setUpControl(this.form, this, this.callSetDisabledState);\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            }\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpControl(this.form, this, /* validateControlPresenceOnChange */ false);\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormControlDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: FormControlDirective, isStandalone: false, selector: \"[formControl]\", inputs: { form: [\"formControl\", \"form\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormControlDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formControl]',\n                    providers: [formControlBinding],\n                    exportAs: 'ngForm',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { form: [{\n                type: Input,\n                args: ['formControl']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective),\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    get submitted() {\n        return untracked(this._submittedReactive);\n    }\n    // TODO(atscott): Remove once invalid API usage is cleaned up internally\n    set submitted(value) {\n        this._submittedReactive.set(value);\n    }\n    /** @internal */\n    _submitted = computed(() => this._submittedReactive(), ...(ngDevMode ? [{ debugName: \"_submitted\" }] : []));\n    _submittedReactive = signal(false, ...(ngDevMode ? [{ debugName: \"_submittedReactive\" }] : []));\n    /**\n     * Reference to an old form group input value, which is needed to cleanup\n     * old instance in case it was replaced with a new one.\n     */\n    _oldForm;\n    /**\n     * Callback that should be invoked when controls in FormGroup or FormArray collection change\n     * (added or removed). This callback triggers corresponding DOM updates.\n     */\n    _onCollectionChange = () => this._updateDomValue();\n    /**\n     * @description\n     * Tracks the list of added `FormControlName` instances\n     */\n    directives = [];\n    /**\n     * @description\n     * Tracks the `FormGroup` bound to this directive.\n     */\n    form = null;\n    /**\n     * @description\n     * Emits an event when the form submission has been triggered.\n     */\n    ngSubmit = new EventEmitter();\n    constructor(validators, asyncValidators, callSetDisabledState) {\n        super();\n        this.callSetDisabledState = callSetDisabledState;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this.form) {\n            throw missingFormException();\n        }\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n            this._oldForm = this.form;\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpValidators(this.form, this);\n            // Currently the `onCollectionChange` callback is rewritten each time the\n            // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n            // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n            // Otherwise it might cause overriding a callback of some other directive instances. We should\n            // consider updating this logic later to make it similar to how `onChange` callbacks are\n            // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n            if (this.form._onCollectionChange === this._onCollectionChange) {\n                this.form._registerOnCollectionChange(() => { });\n            }\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir, this.callSetDisabledState);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */ false);\n        removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this._submittedReactive.set(true);\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        this.form._events.next(new FormSubmittedEvent(this.control));\n        // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n        // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n        // some internal apps call this method directly with the wrong arguments.\n        return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form, `undefined` by default\n     */\n    resetForm(value = undefined, options = {}) {\n        this.form.reset(value, options);\n        this._submittedReactive.set(false);\n        if (options?.emitEvent !== false) {\n            this.form._events.next(new FormResetEvent(this.form));\n        }\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach((dir) => {\n            const oldCtrl = dir.control;\n            const newCtrl = this.form.get(dir.path);\n            if (oldCtrl !== newCtrl) {\n                // Note: the value of the `dir.control` may not be defined, for example when it's a first\n                // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n                cleanUpControl(oldCtrl || null, dir);\n                // Check whether new control at the same location inside the corresponding `FormGroup` is an\n                // instance of `FormControl` and perform control setup only if that's the case.\n                // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n                // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n                // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n                if (isFormControl(newCtrl)) {\n                    setUpControl(newCtrl, dir, this.callSetDisabledState);\n                    dir.control = newCtrl;\n                }\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _setUpFormContainer(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        // NOTE: this operation looks unnecessary in case no new validators were added in\n        // `setUpFormContainer` call. Consider updating this code to match the logic in\n        // `_cleanUpFormContainer` function.\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    _cleanUpFormContainer(dir) {\n        if (this.form) {\n            const ctrl = this.form.get(dir.path);\n            if (ctrl) {\n                const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n                if (isControlUpdated) {\n                    // Run validity check only in case a control was updated (i.e. view validators were\n                    // removed) as removing view validators might cause validity to change.\n                    ctrl.updateValueAndValidity({ emitEvent: false });\n                }\n            }\n        }\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(this._onCollectionChange);\n        if (this._oldForm) {\n            this._oldForm._registerOnCollectionChange(() => { });\n        }\n    }\n    _updateValidators() {\n        setUpValidators(this.form, this);\n        if (this._oldForm) {\n            cleanUpValidators(this._oldForm, this);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormGroupDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: FormGroupDirective, isStandalone: false, selector: \"[formGroup]\", inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { form: [{\n                type: Input,\n                args: ['formGroup']\n            }], ngSubmit: [{\n                type: Output\n            }] } });\n\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName),\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw groupParentException();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormGroupName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: FormGroupName, isStandalone: false, selector: \"[formGroupName]\", inputs: { name: [\"formGroupName\", \"name\"] }, providers: [formGroupNameProvider], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormGroupName, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroupName]',\n                    providers: [formGroupNameProvider],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formGroupName']\n            }] } });\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName),\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    /** @internal */\n    _parent;\n    /**\n     * @description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @docs-private\n     */\n    ngOnInit() {\n        if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw arrayParentException();\n        }\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @docs-private\n     */\n    ngOnDestroy() {\n        this.formDirective?.removeFormArray(this);\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormArrayName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: FormArrayName, isStandalone: false, selector: \"[formArrayName]\", inputs: { name: [\"formArrayName\", \"name\"] }, providers: [formArrayNameProvider], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormArrayName, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formArrayName]',\n                    providers: [formArrayNameProvider],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formArrayName']\n            }] } });\nfunction hasInvalidParent(parent) {\n    return (!(parent instanceof FormGroupName) &&\n        !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName));\n}\n\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName),\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    _ngModelWarningConfig;\n    _added = false;\n    /**\n     * Internal reference to the view model value.\n     * @internal\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    control;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     */\n    name = null;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            }\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    _setUpControl() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            checkParentType(this._parent, this.name);\n        }\n        this.control = this.formDirective.addControl(this);\n        this._added = true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormControlName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: FormControlName, isStandalone: false, selector: \"[formControlName]\", inputs: { name: [\"formControlName\", \"name\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [controlNameBinding], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormControlName, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formControlName]',\n                    providers: [controlNameBinding],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formControlName']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\nfunction checkParentType(parent, name) {\n    if (!(parent instanceof FormGroupName) && parent instanceof AbstractFormGroupDirective) {\n        throw ngModelGroupException();\n    }\n    else if (!(parent instanceof FormGroupName) &&\n        !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName)) {\n        throw controlParentException(name);\n    }\n}\n\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true,\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```html\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *    @for(country of countries; track $index) {\n *        <option[ngValue]=\"country\">{{country.name}}</option>\n *    }\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    /** @docs-private */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    // We need this because we might be in the process of destroying the root\n    // injector, which is marked as destroyed before running destroy hooks.\n    // Attempting to use afterNextRender with the node injector would evntually\n    // run into that already destroyed injector.\n    appRefInjector = inject(ApplicationRef).injector;\n    destroyRef = inject(DestroyRef);\n    cdr = inject(ChangeDetectorRef);\n    _queuedWrite = false;\n    /**\n     * This is needed to efficiently set the select value when adding/removing options. If\n     * writeValue is instead called for every added/removed option, this results in exponentially\n     * more _compareValue calls than the number of option elements (issue #41330).\n     *\n     * Secondly, calling writeValue when rendering individual option elements instead of after they\n     * are all rendered caused an issue in Safari and IE 11 where the first option element failed\n     * to be deselected when no option matched the select ngModel. This was because Angular would\n     * set the select element's value property before appending the option's child text node to the\n     * DOM (issue #14505).\n     *\n     * Finally, this approach is necessary to avoid an issue with delayed element removal when\n     * using the animations module (in all browsers). Otherwise when a selected option is removed\n     * (so no option matches the ngModel anymore), Angular would change the select element value\n     * before actually removing the option from the DOM. Then when the option is finally removed\n     * from the DOM, the browser would change the select value to that of the first option, even\n     * though it doesn't match the ngModel (issue #18430).\n     *\n     * @internal\n     */\n    _writeValueAfterRender() {\n        if (this._queuedWrite || this.appRefInjector.destroyed) {\n            return;\n        }\n        this._queuedWrite = true;\n        afterNextRender({\n            write: () => {\n                if (this.destroyRef.destroyed) {\n                    return;\n                }\n                this._queuedWrite = false;\n                this.writeValue(this.value);\n            },\n        }, { injector: this.appRefInjector });\n    }\n    /**\n     * Sets the \"value\" property on the select element.\n     * @docs-private\n     */\n    writeValue(value) {\n        // TODO(atscott): This could likely be optimized more by only marking for check if the value is changed\n        // note that this needs to include both the internal value and the value in the DOM.\n        this.cdr.markForCheck();\n        this.value = value;\n        const id = this._getOptionId(value);\n        const valueString = _buildValueString$1(id, value);\n        this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of this._optionMap.keys()) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: SelectControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: SelectControlValueAccessor, isStandalone: false, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($any($event.target).value)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: SelectControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($any($event.target).value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    _element;\n    _renderer;\n    _select;\n    /**\n     * @description\n     * ID of the option element\n     */\n    id;\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select._writeValueAfterRender();\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select._writeValueAfterRender();\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select._writeValueAfterRender();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgSelectOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: NgSelectOption, isStandalone: false, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NgSelectOption, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'option',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }], propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true,\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```html\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   @for(country of countries; track $index) {\n *      <option [ngValue]=\"country\">{{ country.name }}</option>\n *   }\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * The current value.\n     * @docs-private\n     */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @docs-private\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = (element) => {\n            const selected = [];\n            const selectedOptions = element.selectedOptions;\n            if (selectedOptions !== undefined) {\n                const options = selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade to use `options` when `selectedOptions` property is not available.\n            // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n            // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n            else {\n                const options = element.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of this._optionMap.keys()) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: SelectMultipleControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: SelectMultipleControlValueAccessor, isStandalone: false, selector: \"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_MULTIPLE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: SelectMultipleControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    _element;\n    _renderer;\n    _select;\n    id;\n    /** @internal */\n    _value;\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵNgSelectMultipleOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectMultipleControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: ɵNgSelectMultipleOption, isStandalone: false, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵNgSelectMultipleOption, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'option',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }], propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n    return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n    return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n    _validator = nullValidator;\n    _onChange;\n    /**\n     * A flag that tracks whether this validator is enabled.\n     *\n     * Marking it `internal` (vs `protected`), so that this flag can be used in host bindings of\n     * directive classes that extend this base class.\n     * @internal\n     */\n    _enabled;\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if (this.inputName in changes) {\n            const input = this.normalizeInput(changes[this.inputName].currentValue);\n            this._enabled = this.enabled(input);\n            this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n            if (this._onChange) {\n                this._onChange();\n            }\n        }\n    }\n    /** @docs-private */\n    validate(control) {\n        return this._validator(control);\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n        return input != null /* both `null` and `undefined` */;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: AbstractValidatorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: AbstractValidatorDirective, isStandalone: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: AbstractValidatorDirective, decorators: [{\n            type: Directive\n        }] });\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true,\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the max bound to this directive.\n     */\n    max;\n    /** @internal */\n    inputName = 'max';\n    /** @internal */\n    normalizeInput = (input) => toFloat(input);\n    /** @internal */\n    createValidator = (max) => maxValidator(max);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: MaxValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: MaxValidator, isStandalone: false, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: { max: \"max\" }, host: { properties: { \"attr.max\": \"_enabled ? max : null\" } }, providers: [MAX_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: MaxValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n                    providers: [MAX_VALIDATOR],\n                    host: { '[attr.max]': '_enabled ? max : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { max: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true,\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the min bound to this directive.\n     */\n    min;\n    /** @internal */\n    inputName = 'min';\n    /** @internal */\n    normalizeInput = (input) => toFloat(input);\n    /** @internal */\n    createValidator = (min) => minValidator(min);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: MinValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: MinValidator, isStandalone: false, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: { min: \"min\" }, host: { properties: { \"attr.min\": \"_enabled ? min : null\" } }, providers: [MIN_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: MinValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n                    providers: [MIN_VALIDATOR],\n                    host: { '[attr.min]': '_enabled ? min : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { min: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true,\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```html\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    required;\n    /** @internal */\n    inputName = 'required';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = (input) => requiredValidator;\n    /** @docs-private */\n    enabled(input) {\n        return input;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: RequiredValidator, isStandalone: false, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: { required: \"required\" }, host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: RequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { required: [{\n                type: Input\n            }] } });\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /** @internal */\n    createValidator = (input) => requiredTrueValidator;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: CheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: CheckboxRequiredValidator, isStandalone: false, selector: \"input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]\", host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: CheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                    providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' },\n                    standalone: false,\n                }]\n        }] });\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true,\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```html\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    email;\n    /** @internal */\n    inputName = 'email';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = (input) => emailValidator;\n    /** @docs-private */\n    enabled(input) {\n        return input;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: EmailValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: EmailValidator, isStandalone: false, selector: \"[email][formControlName],[email][formControl],[email][ngModel]\", inputs: { email: \"email\" }, providers: [EMAIL_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: EmailValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                    providers: [EMAIL_VALIDATOR],\n                    standalone: false,\n                }]\n        }], propDecorators: { email: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true,\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the minimum length bound to this directive.\n     */\n    minlength;\n    /** @internal */\n    inputName = 'minlength';\n    /** @internal */\n    normalizeInput = (input) => toInteger(input);\n    /** @internal */\n    createValidator = (minlength) => minLengthValidator(minlength);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: MinLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: MinLengthValidator, isStandalone: false, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: { minlength: \"minlength\" }, host: { properties: { \"attr.minlength\": \"_enabled ? minlength : null\" } }, providers: [MIN_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: MinLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': '_enabled ? minlength : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { minlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true,\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the maximum length bound to this directive.\n     */\n    maxlength;\n    /** @internal */\n    inputName = 'maxlength';\n    /** @internal */\n    normalizeInput = (input) => toInteger(input);\n    /** @internal */\n    createValidator = (maxlength) => maxLengthValidator(maxlength);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: MaxLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: MaxLengthValidator, isStandalone: false, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: { maxlength: \"maxlength\" }, host: { properties: { \"attr.maxlength\": \"_enabled ? maxlength : null\" } }, providers: [MAX_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: MaxLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': '_enabled ? maxlength : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { maxlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true,\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the pattern bound to this directive.\n     */\n    pattern; // This input is always defined, since the name matches selector.\n    /** @internal */\n    inputName = 'pattern';\n    /** @internal */\n    normalizeInput = (input) => input;\n    /** @internal */\n    createValidator = (input) => patternValidator(input);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: PatternValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", type: PatternValidator, isStandalone: false, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: { pattern: \"pattern\" }, host: { properties: { \"attr.pattern\": \"_enabled ? pattern : null\" } }, providers: [PATTERN_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: PatternValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': '_enabled ? pattern : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { pattern: [{\n                type: Input\n            }] } });\n\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n    MinValidator,\n    MaxValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [\n    FormControlDirective,\n    FormGroupDirective,\n    FormControlName,\n    FormGroupName,\n    FormArrayName,\n];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵInternalFormsSharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵInternalFormsSharedModule, declarations: [ɵNgNoValidate,\n            NgSelectOption,\n            ɵNgSelectMultipleOption,\n            DefaultValueAccessor,\n            NumberValueAccessor,\n            RangeValueAccessor,\n            CheckboxControlValueAccessor,\n            SelectControlValueAccessor,\n            SelectMultipleControlValueAccessor,\n            RadioControlValueAccessor,\n            NgControlStatus,\n            NgControlStatusGroup,\n            RequiredValidator,\n            MinLengthValidator,\n            MaxLengthValidator,\n            PatternValidator,\n            CheckboxRequiredValidator,\n            EmailValidator,\n            MinValidator,\n            MaxValidator], exports: [ɵNgNoValidate,\n            NgSelectOption,\n            ɵNgSelectMultipleOption,\n            DefaultValueAccessor,\n            NumberValueAccessor,\n            RangeValueAccessor,\n            CheckboxControlValueAccessor,\n            SelectControlValueAccessor,\n            SelectMultipleControlValueAccessor,\n            RadioControlValueAccessor,\n            NgControlStatus,\n            NgControlStatusGroup,\n            RequiredValidator,\n            MinLengthValidator,\n            MaxLengthValidator,\n            PatternValidator,\n            CheckboxRequiredValidator,\n            EmailValidator,\n            MinValidator,\n            MaxValidator] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵInternalFormsSharedModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ɵInternalFormsSharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: SHARED_FORM_DIRECTIVES,\n                    exports: SHARED_FORM_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n    }\n    controls;\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n     *     around from the back, and if index is greatly negative (less than `-length`), the result is\n     * undefined. This behavior is the same as `Array.at(index)`.\n     */\n    at(index) {\n        return this.controls[this._adjustIndex(index)];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is added.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    push(control, options = {}) {\n        if (Array.isArray(control)) {\n            control.forEach((ctrl) => {\n                this.controls.push(ctrl);\n                this._registerControl(ctrl);\n            });\n        }\n        else {\n            this.controls.push(control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n     * This behavior is the same as `Array.splice(index, 0, control)`.\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is inserted.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    insert(index, control, options = {}) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n     *     element. This behavior is the same as `Array.splice(index, 1)`.\n     * @param options Specifies whether this FormArray instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeAt(index, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n     *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n     * @param control The `AbstractControl` control to replace the existing control\n     * @param options Specifies whether this FormArray instance should emit events after an\n     *     existing control is replaced with a new one.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * replaced with a new one. When false, no events are emitted.\n     */\n    setControl(index, control, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        if (control) {\n            this.controls.splice(adjustedIndex, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, false, value);\n        value.forEach((newValue, index) => {\n            assertControlPresent(this, false, index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control\n     * value is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values,\n        // so we just ignore such cases when a field containing FormArray instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```ts\n     * arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(arr.value);  // ['last']\n     * console.log(arr.at(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options, this);\n        this._updateTouched(options, this);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this.controls.map((control) => control.getRawValue());\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @param options Specifies whether this FormArray instance should emit events after all\n     *     controls are removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when all controls\n     * in this FormArray instance are removed. When false, no events are emitted.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear(options = {}) {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Adjusts a negative index by summing it with the length of the array. For very negative\n     * indices, the result may remain negative.\n     * @internal\n     */\n    _adjustIndex(index) {\n        return index < 0 ? index + this.length : index;\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this.controls\n            .filter((control) => control.enabled || this.disabled)\n            .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n    /** @internal */\n    _find(name) {\n        return this.at(name) ?? null;\n    }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = (control) => control instanceof FormArray;\n\nfunction isAbstractControlOptions(options) {\n    return (!!options &&\n        (options.asyncValidators !== undefined ||\n            options.validators !== undefined ||\n            options.updateOn !== undefined));\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    useNonNullable = false;\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n        const nnfb = new FormBuilder();\n        nnfb.useNonNullable = true;\n        return nnfb;\n    }\n    group(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        let newOptions = {};\n        if (isAbstractControlOptions(options)) {\n            // `options` are `AbstractControlOptions`\n            newOptions = options;\n        }\n        else if (options !== null) {\n            // `options` are legacy form group options\n            newOptions.validators = options.validator;\n            newOptions.asyncValidators = options.asyncValidator;\n        }\n        return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='disabled-control'}\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        let newOptions = {};\n        if (!this.useNonNullable) {\n            return new FormControl(formState, validatorOrOpts, asyncValidator);\n        }\n        if (isAbstractControlOptions(validatorOrOpts)) {\n            // If the second argument is options, then they are copied.\n            newOptions = validatorOrOpts;\n        }\n        else {\n            // If the other arguments are validators, they are copied into an options object.\n            newOptions.validators = validatorOrOpts;\n            newOptions.asyncValidators = asyncValidator;\n        }\n        return new FormControl(formState, { ...newOptions, nonNullable: true });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n        const createdControls = controls.map((c) => this._createControl(c));\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n        const createdControls = {};\n        Object.keys(controls).forEach((controlName) => {\n            createdControls[controlName] = this._createControl(controls[controlName]);\n        });\n        return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n        if (controls instanceof FormControl) {\n            return controls;\n        }\n        else if (controls instanceof AbstractControl) {\n            // A control; just return it\n            return controls;\n        }\n        else if (Array.isArray(controls)) {\n            // ControlConfig Tuple\n            const value = controls[0];\n            const validator = controls.length > 1 ? controls[1] : null;\n            const asyncValidator = controls.length > 2 ? controls[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            // T or FormControlState<T>\n            return this.control(controls);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NonNullableFormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NonNullableFormBuilder, providedIn: 'root', useFactory: () => inject(FormBuilder).nonNullable });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: NonNullableFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => inject(FormBuilder).nonNullable,\n                }]\n        }] });\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n        return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UntypedFormBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UntypedFormBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: UntypedFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('20.2.1');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: FormsModule,\n            providers: [\n                {\n                    provide: CALL_SET_DISABLED_STATE,\n                    useValue: opts.callSetDisabledState ?? setDisabledStateDefault,\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormsModule, declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormsModule, imports: [ɵInternalFormsSharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: FormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES],\n                }]\n        }] });\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                {\n                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n                    useValue: opts.warnOnNgModelWithFormControl ?? 'always',\n                },\n                {\n                    provide: CALL_SET_DISABLED_STATE,\n                    useValue: opts.callSetDisabledState ?? setDisabledStateDefault,\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ReactiveFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ReactiveFormsModule, declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ReactiveFormsModule, imports: [ɵInternalFormsSharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-next.2\", ngImport: i0, type: ReactiveFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES],\n                }]\n        }] });\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, ControlEvent, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormResetEvent, FormSubmittedEvent, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, PristineChangeEvent, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, StatusChangeEvent, TouchedChangeEvent, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ValueChangeEvent, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { _animationsDisabled } from './animation.mjs';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    _animationsDisabled = _animationsDisabled();\n    /** Display state of the checkbox. */\n    state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n    disabled = false;\n    /**\n     * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n     * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n     */\n    appearance = 'full';\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatPseudoCheckbox, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatPseudoCheckbox, isStandalone: true, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\", appearance: \"appearance\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class.mat-pseudo-checkbox-minimal\": \"appearance === \\\"minimal\\\"\", \"class.mat-pseudo-checkbox-full\": \"appearance === \\\"full\\\"\", \"class._mat-animation-noopable\": \"_animationsDisabled\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-minimal-selected-checkmark-color, var(--mat-sys-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full{border-color:var(--mat-pseudo-checkbox-full-unselected-icon-color, var(--mat-sys-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-pseudo-checkbox-full-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-pseudo-checkbox-full-selected-icon-color, var(--mat-sys-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-full-selected-checkmark-color, var(--mat-sys-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-pseudo-checkbox-full-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-full-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n                        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                    }, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-minimal-selected-checkmark-color, var(--mat-sys-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full{border-color:var(--mat-pseudo-checkbox-full-unselected-icon-color, var(--mat-sys-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-pseudo-checkbox-full-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-pseudo-checkbox-full-selected-icon-color, var(--mat-sys-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-full-selected-checkmark-color, var(--mat-sys-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-pseudo-checkbox-full-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-full-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }] } });\n\nexport { MatPseudoCheckbox };\n\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { MatPseudoCheckbox } from './pseudo-checkbox.mjs';\nimport { MatCommonModule } from './common-module.mjs';\n\nclass MatPseudoCheckboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule, MatPseudoCheckbox], exports: [MatPseudoCheckbox] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatPseudoCheckbox],\n                    exports: [MatPseudoCheckbox],\n                }]\n        }] });\n\nexport { MatPseudoCheckboxModule };\n\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatRipple } from './ripple.mjs';\n\nclass MatRippleModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatRipple], exports: [MatRipple, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRipple],\n                    exports: [MatRipple, MatCommonModule],\n                }]\n        }] });\n\nexport { MatRippleModule };\n\n","import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, Directive, signal, Input, NgZone, Injector, ContentChildren, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ChangeDetectorRef, EventEmitter, Output, forwardRef, Renderer2, NgModule } from '@angular/core';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { Subscription, merge, Subject } from 'rxjs';\nimport { MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer } from './ripple.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { CdkObserveContent, ObserversModule } from '@angular/cdk/observers';\nimport { MatDividerModule } from './divider.mjs';\nexport { MatDivider } from './divider.mjs';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ENTER, SPACE, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatPseudoCheckboxModule } from './pseudo-checkbox-module.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatRippleModule } from './ripple-module.mjs';\nimport '@angular/cdk/layout';\nimport './pseudo-checkbox.mjs';\nimport '@angular/cdk/bidi';\n\n/**\n * Injection token that can be used to reference instances of an `ListOption`. It serves\n * as alternative token to an actual implementation which could result in undesired\n * retention of the class or circular references breaking runtime execution.\n * @docs-private\n */\nconst LIST_OPTION = new InjectionToken('ListOption');\n\n/**\n * Directive capturing the title of a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content for the title never wraps. There can only be a single title per list item.\n */\nclass MatListItemTitle {\n    _elementRef = inject(ElementRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListItemTitle, isStandalone: true, selector: \"[matListItemTitle]\", host: { classAttribute: \"mat-mdc-list-item-title mdc-list-item__primary-text\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemTitle]',\n                    host: { 'class': 'mat-mdc-list-item-title mdc-list-item__primary-text' },\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Directive capturing a line in a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content inside a line never wraps. There can be at maximum two lines per list item.\n */\nclass MatListItemLine {\n    _elementRef = inject(ElementRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListItemLine, isStandalone: true, selector: \"[matListItemLine]\", host: { classAttribute: \"mat-mdc-list-item-line mdc-list-item__secondary-text\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemLine]',\n                    host: { 'class': 'mat-mdc-list-item-line mdc-list-item__secondary-text' },\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Directive matching an optional meta section for list items.\n *\n * List items can reserve space at the end of an item to display a control,\n * button or additional text content.\n */\nclass MatListItemMeta {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemMeta, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListItemMeta, isStandalone: true, selector: \"[matListItemMeta]\", host: { classAttribute: \"mat-mdc-list-item-meta mdc-list-item__end\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemMeta, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemMeta]',\n                    host: { 'class': 'mat-mdc-list-item-meta mdc-list-item__end' },\n                }]\n        }] });\n/**\n * @docs-private\n *\n * MDC uses the very intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end` to\n * position content such as icons or checkboxes/radios that comes either before or after the text\n * content respectively. This directive detects the placement of the checkbox/radio and applies the\n * correct MDC class to position the icon/avatar on the opposite side.\n */\nclass _MatListItemGraphicBase {\n    _listOption = inject(LIST_OPTION, { optional: true });\n    constructor() { }\n    _isAlignedAtStart() {\n        // By default, in all list items the graphic is aligned at start. In list options,\n        // the graphic is only aligned at start if the checkbox/radio is at the end.\n        return !this._listOption || this._listOption?._getTogglePosition() === 'after';\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _MatListItemGraphicBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: _MatListItemGraphicBase, isStandalone: true, host: { properties: { \"class.mdc-list-item__start\": \"_isAlignedAtStart()\", \"class.mdc-list-item__end\": \"!_isAlignedAtStart()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _MatListItemGraphicBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        // MDC uses intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end` to\n                        // position content such as icons or checkboxes/radios that comes either before or after the\n                        // text content respectively. This directive detects the placement of the checkbox/radio and\n                        // applies the correct MDC class to position the icon/avatar on the opposite side.\n                        '[class.mdc-list-item__start]': '_isAlignedAtStart()',\n                        '[class.mdc-list-item__end]': '!_isAlignedAtStart()',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Directive matching an optional avatar within a list item.\n *\n * List items can reserve space at the beginning of an item to display an avatar.\n */\nclass MatListItemAvatar extends _MatListItemGraphicBase {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemAvatar, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListItemAvatar, isStandalone: true, selector: \"[matListItemAvatar]\", host: { classAttribute: \"mat-mdc-list-item-avatar\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemAvatar]',\n                    host: { 'class': 'mat-mdc-list-item-avatar' },\n                }]\n        }] });\n/**\n * Directive matching an optional icon within a list item.\n *\n * List items can reserve space at the beginning of an item to display an icon.\n */\nclass MatListItemIcon extends _MatListItemGraphicBase {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListItemIcon, isStandalone: true, selector: \"[matListItemIcon]\", host: { classAttribute: \"mat-mdc-list-item-icon\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemIcon]',\n                    host: { 'class': 'mat-mdc-list-item-icon' },\n                }]\n        }] });\n\n/** Injection token that can be used to provide the default options for the list module. */\nconst MAT_LIST_CONFIG = new InjectionToken('MAT_LIST_CONFIG');\n\n/** @docs-private */\nclass MatListBase {\n    _isNonInteractive = true;\n    /** Whether ripples for all list items is disabled. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _disableRipple = false;\n    /**\n     * Whether the entire list is disabled. When disabled, the list itself and each of its list items\n     * are disabled.\n     */\n    get disabled() {\n        return this._disabled();\n    }\n    set disabled(value) {\n        this._disabled.set(coerceBooleanProperty(value));\n    }\n    _disabled = signal(false, ...(ngDevMode ? [{ debugName: \"_disabled\" }] : []));\n    _defaultOptions = inject(MAT_LIST_CONFIG, { optional: true });\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListBase, isStandalone: true, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"attr.aria-disabled\": \"disabled\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[attr.aria-disabled]': 'disabled',\n                    },\n                }]\n        }], propDecorators: { disableRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/** @docs-private */\nclass MatListItemBase {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _listBase = inject(MatListBase, { optional: true });\n    _platform = inject(Platform);\n    /** Host element for the list item. */\n    _hostElement;\n    /** indicate whether the host element is a button or not */\n    _isButtonElement;\n    /** Whether animations are disabled. */\n    _noopAnimations = _animationsDisabled();\n    _avatars;\n    _icons;\n    /**\n     * The number of lines this list item should reserve space for. If not specified,\n     * lines are inferred based on the projected content.\n     *\n     * Explicitly specifying the number of lines is useful if you want to acquire additional\n     * space and enable the wrapping of text. The unscoped text content of a list item will\n     * always be able to take up the remaining space of the item, unless it represents the title.\n     *\n     * A maximum of three lines is supported as per the Material Design specification.\n     */\n    set lines(lines) {\n        this._explicitLines = coerceNumberProperty(lines, null);\n        this._updateItemLines(false);\n    }\n    _explicitLines = null;\n    /** Whether ripples for list items are disabled. */\n    get disableRipple() {\n        return (this.disabled ||\n            this._disableRipple ||\n            this._noopAnimations ||\n            !!this._listBase?.disableRipple);\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _disableRipple = false;\n    /** Whether the list-item is disabled. */\n    get disabled() {\n        return this._disabled() || !!this._listBase?.disabled;\n    }\n    set disabled(value) {\n        this._disabled.set(coerceBooleanProperty(value));\n    }\n    _disabled = signal(false, ...(ngDevMode ? [{ debugName: \"_disabled\" }] : []));\n    _subscriptions = new Subscription();\n    _rippleRenderer = null;\n    /** Whether the list item has unscoped text content. */\n    _hasUnscopedTextContent = false;\n    /**\n     * Implemented as part of `RippleTarget`.\n     * @docs-private\n     */\n    rippleConfig;\n    /**\n     * Implemented as part of `RippleTarget`.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n            optional: true,\n        });\n        this.rippleConfig = globalRippleOptions || {};\n        this._hostElement = this._elementRef.nativeElement;\n        this._isButtonElement = this._hostElement.nodeName.toLowerCase() === 'button';\n        if (this._listBase && !this._listBase._isNonInteractive) {\n            this._initInteractiveListItem();\n        }\n        // If no type attribute is specified for a host `<button>` element, set it to `button`. If a\n        // type attribute is already specified, we do nothing. We do this for backwards compatibility.\n        // TODO: Determine if we intend to continue doing this for the MDC-based list.\n        if (this._isButtonElement && !this._hostElement.hasAttribute('type')) {\n            this._hostElement.setAttribute('type', 'button');\n        }\n    }\n    ngAfterViewInit() {\n        this._monitorProjectedLinesAndTitle();\n        this._updateItemLines(true);\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        if (this._rippleRenderer !== null) {\n            this._rippleRenderer._removeTriggerEvents();\n        }\n    }\n    /** Whether the list item has icons or avatars. */\n    _hasIconOrAvatar() {\n        return !!(this._avatars.length || this._icons.length);\n    }\n    _initInteractiveListItem() {\n        this._hostElement.classList.add('mat-mdc-list-item-interactive');\n        this._rippleRenderer = new RippleRenderer(this, this._ngZone, this._hostElement, this._platform, inject(Injector));\n        this._rippleRenderer.setupTriggerEvents(this._hostElement);\n    }\n    /**\n     * Subscribes to changes in the projected title and lines. Triggers a\n     * item lines update whenever a change occurs.\n     */\n    _monitorProjectedLinesAndTitle() {\n        this._ngZone.runOutsideAngular(() => {\n            this._subscriptions.add(merge(this._lines.changes, this._titles.changes).subscribe(() => this._updateItemLines(false)));\n        });\n    }\n    /**\n     * Updates the lines of the list item. Based on the projected user content and optional\n     * explicit lines setting, the visual appearance of the list item is determined.\n     *\n     * This method should be invoked whenever the projected user content changes, or\n     * when the explicit lines have been updated.\n     *\n     * @param recheckUnscopedContent Whether the projected unscoped content should be re-checked.\n     *   The unscoped content is not re-checked for every update as it is a rather expensive check\n     *   for content that is expected to not change very often.\n     */\n    _updateItemLines(recheckUnscopedContent) {\n        // If the updated is triggered too early before the view and content is initialized,\n        // we just skip the update. After view initialization the update is triggered again.\n        if (!this._lines || !this._titles || !this._unscopedContent) {\n            return;\n        }\n        // Re-check the DOM for unscoped text content if requested. This needs to\n        // happen before any computation or sanity checks run as these rely on the\n        // result of whether there is unscoped text content or not.\n        if (recheckUnscopedContent) {\n            this._checkDomForUnscopedTextContent();\n        }\n        // Sanity check the list item lines and title in the content. This is a dev-mode only\n        // check that can be dead-code eliminated by Terser in production.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            sanityCheckListItemContent(this);\n        }\n        const numberOfLines = this._explicitLines ?? this._inferLinesFromContent();\n        const unscopedContentEl = this._unscopedContent.nativeElement;\n        // Update the list item element to reflect the number of lines.\n        this._hostElement.classList.toggle('mat-mdc-list-item-single-line', numberOfLines <= 1);\n        this._hostElement.classList.toggle('mdc-list-item--with-one-line', numberOfLines <= 1);\n        this._hostElement.classList.toggle('mdc-list-item--with-two-lines', numberOfLines === 2);\n        this._hostElement.classList.toggle('mdc-list-item--with-three-lines', numberOfLines === 3);\n        // If there is no title and the unscoped content is the is the only line, the\n        // unscoped text content will be treated as the title of the list-item.\n        if (this._hasUnscopedTextContent) {\n            const treatAsTitle = this._titles.length === 0 && numberOfLines === 1;\n            unscopedContentEl.classList.toggle('mdc-list-item__primary-text', treatAsTitle);\n            unscopedContentEl.classList.toggle('mdc-list-item__secondary-text', !treatAsTitle);\n        }\n        else {\n            unscopedContentEl.classList.remove('mdc-list-item__primary-text');\n            unscopedContentEl.classList.remove('mdc-list-item__secondary-text');\n        }\n    }\n    /**\n     * Infers the number of lines based on the projected user content. This is useful\n     * if no explicit number of lines has been specified on the list item.\n     *\n     * The number of lines is inferred based on whether there is a title, the number of\n     * additional lines (secondary/tertiary). An additional line is acquired if there is\n     * unscoped text content.\n     */\n    _inferLinesFromContent() {\n        let numOfLines = this._titles.length + this._lines.length;\n        if (this._hasUnscopedTextContent) {\n            numOfLines += 1;\n        }\n        return numOfLines;\n    }\n    /** Checks whether the list item has unscoped text content. */\n    _checkDomForUnscopedTextContent() {\n        this._hasUnscopedTextContent = Array.from(this._unscopedContent.nativeElement.childNodes)\n            .filter(node => node.nodeType !== node.COMMENT_NODE)\n            .some(node => !!(node.textContent && node.textContent.trim()));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListItemBase, isStandalone: true, inputs: { lines: \"lines\", disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mdc-list-item--disabled\": \"disabled\", \"attr.aria-disabled\": \"disabled\", \"attr.disabled\": \"(_isButtonElement && disabled) || null\" } }, queries: [{ propertyName: \"_avatars\", predicate: MatListItemAvatar }, { propertyName: \"_icons\", predicate: MatListItemIcon }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItemBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.disabled]': '(_isButtonElement && disabled) || null',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { _avatars: [{\n                type: ContentChildren,\n                args: [MatListItemAvatar, { descendants: false }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatListItemIcon, { descendants: false }]\n            }], lines: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/**\n * Sanity checks the configuration of the list item with respect to the amount\n * of lines, whether there is a title, or if there is unscoped text content.\n *\n * The checks are extracted into a top-level function that can be dead-code\n * eliminated by Terser or other optimizers in production mode.\n */\nfunction sanityCheckListItemContent(item) {\n    const numTitles = item._titles.length;\n    const numLines = item._lines.length;\n    if (numTitles > 1) {\n        console.warn('A list item cannot have multiple titles.');\n    }\n    if (numTitles === 0 && numLines > 0) {\n        console.warn('A list item line can only be used if there is a list item title.');\n    }\n    if (numTitles === 0 &&\n        item._hasUnscopedTextContent &&\n        item._explicitLines !== null &&\n        item._explicitLines > 1) {\n        console.warn('A list item cannot have wrapping content without a title.');\n    }\n    if (numLines > 2 || (numLines === 2 && item._hasUnscopedTextContent)) {\n        console.warn('A list item can have at maximum three lines.');\n    }\n}\n\nclass MatActionList extends MatListBase {\n    // An navigation list is considered interactive, but does not extend the interactive list\n    // base class. We do this because as per MDC, items of interactive lists are only reachable\n    // through keyboard shortcuts. We want all items for the navigation list to be reachable\n    // through tab key as we do not intend to provide any special accessibility treatment. The\n    // accessibility treatment depends on how the end-user will interact with it.\n    _isNonInteractive = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatActionList, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatActionList, isStandalone: true, selector: \"mat-action-list\", host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-action-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatActionList }], exportAs: [\"matActionList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mat-list-list-item-container-color, transparent);border-radius:var(--mat-list-list-item-container-shape, var(--mat-sys-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mat-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mat-list-list-item-one-line-container-height, 48px)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mat-list-list-item-two-line-container-height, 64px)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mat-list-list-item-three-line-container-height, 88px)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;content:\\\"\\\";pointer-events:none}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-leading-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-leading-icon-size, 24px);height:var(--mat-list-list-item-leading-icon-size, 24px);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mat-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mat-list-list-item-leading-avatar-size, 40px);height:var(--mat-list-list-item-leading-avatar-size, 40px);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mat-list-list-item-trailing-supporting-text-font, var(--mat-sys-label-small-font));line-height:var(--mat-list-list-item-trailing-supporting-text-line-height, var(--mat-sys-label-small-line-height));font-size:var(--mat-list-list-item-trailing-supporting-text-size, var(--mat-sys-label-small-size));font-weight:var(--mat-list-list-item-trailing-supporting-text-weight, var(--mat-sys-label-small-weight));letter-spacing:var(--mat-list-list-item-trailing-supporting-text-tracking, var(--mat-sys-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-trailing-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-trailing-icon-size, 24px);height:var(--mat-list-list-item-trailing-icon-size, 24px)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mat-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mat-list-list-item-trailing-supporting-text-color, var(--mat-sys-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-selected-trailing-icon-color, var(--mat-sys-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mat-list-list-item-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-list-list-item-label-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-list-list-item-label-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-list-list-item-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-list-list-item-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-list-list-item-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mat-list-list-item-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mat-list-list-item-focus-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mat-list-list-item-supporting-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-list-list-item-supporting-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-list-list-item-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-list-list-item-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-list-list-item-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-list-list-item-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-disabled-leading-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-leading-icon-opacity, 0.38)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-disabled-trailing-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-trailing-icon-opacity, 0.38)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mat-list-list-item-disabled-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:hover::before{background-color:var(--mat-list-list-item-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mat-list-list-item-disabled-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mat-list-list-item-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mat-list-list-item-leading-avatar-shape, var(--mat-sys-corner-full));background-color:var(--mat-list-list-item-leading-avatar-color, var(--mat-sys-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mat-list-list-item-leading-icon-size, 24px)}@media(forced-colors: active){a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none;border-radius:inherit}.mat-mdc-list-item>.mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space, 16px);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space, 16px)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full));--mat-focus-indicator-border-radius: var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-sys-secondary-container))}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatActionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-action-list', exportAs: 'matActionList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-action-list mat-mdc-list-base mdc-list',\n                        'role': 'group',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatActionList }], styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mat-list-list-item-container-color, transparent);border-radius:var(--mat-list-list-item-container-shape, var(--mat-sys-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mat-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mat-list-list-item-one-line-container-height, 48px)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mat-list-list-item-two-line-container-height, 64px)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mat-list-list-item-three-line-container-height, 88px)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;content:\\\"\\\";pointer-events:none}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-leading-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-leading-icon-size, 24px);height:var(--mat-list-list-item-leading-icon-size, 24px);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mat-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mat-list-list-item-leading-avatar-size, 40px);height:var(--mat-list-list-item-leading-avatar-size, 40px);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mat-list-list-item-trailing-supporting-text-font, var(--mat-sys-label-small-font));line-height:var(--mat-list-list-item-trailing-supporting-text-line-height, var(--mat-sys-label-small-line-height));font-size:var(--mat-list-list-item-trailing-supporting-text-size, var(--mat-sys-label-small-size));font-weight:var(--mat-list-list-item-trailing-supporting-text-weight, var(--mat-sys-label-small-weight));letter-spacing:var(--mat-list-list-item-trailing-supporting-text-tracking, var(--mat-sys-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-trailing-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-trailing-icon-size, 24px);height:var(--mat-list-list-item-trailing-icon-size, 24px)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mat-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mat-list-list-item-trailing-supporting-text-color, var(--mat-sys-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-selected-trailing-icon-color, var(--mat-sys-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mat-list-list-item-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-list-list-item-label-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-list-list-item-label-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-list-list-item-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-list-list-item-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-list-list-item-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mat-list-list-item-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mat-list-list-item-focus-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mat-list-list-item-supporting-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-list-list-item-supporting-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-list-list-item-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-list-list-item-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-list-list-item-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-list-list-item-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-disabled-leading-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-leading-icon-opacity, 0.38)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-disabled-trailing-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-trailing-icon-opacity, 0.38)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mat-list-list-item-disabled-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:hover::before{background-color:var(--mat-list-list-item-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mat-list-list-item-disabled-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mat-list-list-item-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mat-list-list-item-leading-avatar-shape, var(--mat-sys-corner-full));background-color:var(--mat-list-list-item-leading-avatar-color, var(--mat-sys-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mat-list-list-item-leading-icon-size, 24px)}@media(forced-colors: active){a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none;border-radius:inherit}.mat-mdc-list-item>.mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space, 16px);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space, 16px)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full));--mat-focus-indicator-border-radius: var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-sys-secondary-container))}\\n\"] }]\n        }] });\n\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\nclass MatList extends MatListBase {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatList, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatList, isStandalone: true, selector: \"mat-list\", host: { classAttribute: \"mat-mdc-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mat-list-list-item-container-color, transparent);border-radius:var(--mat-list-list-item-container-shape, var(--mat-sys-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mat-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mat-list-list-item-one-line-container-height, 48px)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mat-list-list-item-two-line-container-height, 64px)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mat-list-list-item-three-line-container-height, 88px)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;content:\\\"\\\";pointer-events:none}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-leading-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-leading-icon-size, 24px);height:var(--mat-list-list-item-leading-icon-size, 24px);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mat-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mat-list-list-item-leading-avatar-size, 40px);height:var(--mat-list-list-item-leading-avatar-size, 40px);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mat-list-list-item-trailing-supporting-text-font, var(--mat-sys-label-small-font));line-height:var(--mat-list-list-item-trailing-supporting-text-line-height, var(--mat-sys-label-small-line-height));font-size:var(--mat-list-list-item-trailing-supporting-text-size, var(--mat-sys-label-small-size));font-weight:var(--mat-list-list-item-trailing-supporting-text-weight, var(--mat-sys-label-small-weight));letter-spacing:var(--mat-list-list-item-trailing-supporting-text-tracking, var(--mat-sys-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-trailing-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-trailing-icon-size, 24px);height:var(--mat-list-list-item-trailing-icon-size, 24px)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mat-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mat-list-list-item-trailing-supporting-text-color, var(--mat-sys-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-selected-trailing-icon-color, var(--mat-sys-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mat-list-list-item-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-list-list-item-label-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-list-list-item-label-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-list-list-item-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-list-list-item-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-list-list-item-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mat-list-list-item-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mat-list-list-item-focus-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mat-list-list-item-supporting-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-list-list-item-supporting-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-list-list-item-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-list-list-item-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-list-list-item-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-list-list-item-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-disabled-leading-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-leading-icon-opacity, 0.38)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-disabled-trailing-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-trailing-icon-opacity, 0.38)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mat-list-list-item-disabled-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:hover::before{background-color:var(--mat-list-list-item-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mat-list-list-item-disabled-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mat-list-list-item-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mat-list-list-item-leading-avatar-shape, var(--mat-sys-corner-full));background-color:var(--mat-list-list-item-leading-avatar-color, var(--mat-sys-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mat-list-list-item-leading-icon-size, 24px)}@media(forced-colors: active){a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none;border-radius:inherit}.mat-mdc-list-item>.mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space, 16px);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space, 16px)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full));--mat-focus-indicator-border-radius: var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-sys-secondary-container))}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list', exportAs: 'matList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-list mat-mdc-list-base mdc-list',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatList }], styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mat-list-list-item-container-color, transparent);border-radius:var(--mat-list-list-item-container-shape, var(--mat-sys-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mat-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mat-list-list-item-one-line-container-height, 48px)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mat-list-list-item-two-line-container-height, 64px)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mat-list-list-item-three-line-container-height, 88px)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;content:\\\"\\\";pointer-events:none}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-leading-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-leading-icon-size, 24px);height:var(--mat-list-list-item-leading-icon-size, 24px);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mat-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mat-list-list-item-leading-avatar-size, 40px);height:var(--mat-list-list-item-leading-avatar-size, 40px);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mat-list-list-item-trailing-supporting-text-font, var(--mat-sys-label-small-font));line-height:var(--mat-list-list-item-trailing-supporting-text-line-height, var(--mat-sys-label-small-line-height));font-size:var(--mat-list-list-item-trailing-supporting-text-size, var(--mat-sys-label-small-size));font-weight:var(--mat-list-list-item-trailing-supporting-text-weight, var(--mat-sys-label-small-weight));letter-spacing:var(--mat-list-list-item-trailing-supporting-text-tracking, var(--mat-sys-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-trailing-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-trailing-icon-size, 24px);height:var(--mat-list-list-item-trailing-icon-size, 24px)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mat-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mat-list-list-item-trailing-supporting-text-color, var(--mat-sys-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-selected-trailing-icon-color, var(--mat-sys-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mat-list-list-item-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-list-list-item-label-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-list-list-item-label-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-list-list-item-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-list-list-item-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-list-list-item-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mat-list-list-item-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mat-list-list-item-focus-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mat-list-list-item-supporting-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-list-list-item-supporting-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-list-list-item-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-list-list-item-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-list-list-item-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-list-list-item-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-disabled-leading-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-leading-icon-opacity, 0.38)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-disabled-trailing-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-trailing-icon-opacity, 0.38)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mat-list-list-item-disabled-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:hover::before{background-color:var(--mat-list-list-item-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mat-list-list-item-disabled-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mat-list-list-item-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mat-list-list-item-leading-avatar-shape, var(--mat-sys-corner-full));background-color:var(--mat-list-list-item-leading-avatar-color, var(--mat-sys-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mat-list-list-item-leading-icon-size, 24px)}@media(forced-colors: active){a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none;border-radius:inherit}.mat-mdc-list-item>.mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space, 16px);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space, 16px)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full));--mat-focus-indicator-border-radius: var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-sys-secondary-container))}\\n\"] }]\n        }] });\nclass MatListItem extends MatListItemBase {\n    _lines;\n    _titles;\n    _meta;\n    _unscopedContent;\n    _itemText;\n    /** Indicates whether an item in a `<mat-nav-list>` is the currently active page. */\n    get activated() {\n        return this._activated;\n    }\n    set activated(activated) {\n        this._activated = coerceBooleanProperty(activated);\n    }\n    _activated = false;\n    /**\n     * Determine the value of `aria-current`. Return 'page' if this item is an activated anchor tag.\n     * Otherwise, return `null`. This method is safe to use with server-side rendering.\n     */\n    _getAriaCurrent() {\n        return this._hostElement.nodeName === 'A' && this._activated ? 'page' : null;\n    }\n    _hasBothLeadingAndTrailing() {\n        return this._meta.length !== 0 && (this._avatars.length !== 0 || this._icons.length !== 0);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItem, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListItem, isStandalone: true, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { activated: \"activated\" }, host: { properties: { \"class.mdc-list-item--activated\": \"activated\", \"class.mdc-list-item--with-leading-avatar\": \"_avatars.length !== 0\", \"class.mdc-list-item--with-leading-icon\": \"_icons.length !== 0\", \"class.mdc-list-item--with-trailing-meta\": \"_meta.length !== 0\", \"class.mat-mdc-list-item-both-leading-and-trailing\": \"_hasBothLeadingAndTrailing()\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.aria-current\": \"_getAriaCurrent()\" }, classAttribute: \"mat-mdc-list-item mdc-list-item\" }, queries: [{ propertyName: \"_lines\", predicate: MatListItemLine, descendants: true }, { propertyName: \"_titles\", predicate: MatListItemTitle, descendants: true }, { propertyName: \"_meta\", predicate: MatListItemMeta, descendants: true }], viewQueries: [{ propertyName: \"_unscopedContent\", first: true, predicate: [\"unscopedContent\"], descendants: true }, { propertyName: \"_itemText\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<ng-content select=\\\"[matListItemMeta]\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-focus-indicator\\\"></div>\\n\", dependencies: [{ kind: \"directive\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-mdc-list-item mdc-list-item',\n                        '[class.mdc-list-item--activated]': 'activated',\n                        '[class.mdc-list-item--with-leading-avatar]': '_avatars.length !== 0',\n                        '[class.mdc-list-item--with-leading-icon]': '_icons.length !== 0',\n                        '[class.mdc-list-item--with-trailing-meta]': '_meta.length !== 0',\n                        // Utility class that makes it easier to target the case where there's both a leading\n                        // and a trailing icon. Avoids having to write out all the combinations.\n                        '[class.mat-mdc-list-item-both-leading-and-trailing]': '_hasBothLeadingAndTrailing()',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [CdkObserveContent], template: \"<ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<ng-content select=\\\"[matListItemMeta]\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-focus-indicator\\\"></div>\\n\" }]\n        }], propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatListItemLine, { descendants: true }]\n            }], _titles: [{\n                type: ContentChildren,\n                args: [MatListItemTitle, { descendants: true }]\n            }], _meta: [{\n                type: ContentChildren,\n                args: [MatListItemMeta, { descendants: true }]\n            }], _unscopedContent: [{\n                type: ViewChild,\n                args: ['unscopedContent']\n            }], _itemText: [{\n                type: ViewChild,\n                args: ['text']\n            }], activated: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of an `SelectionList`. It serves\n * as alternative token to an actual implementation which would result in circular references.\n * @docs-private\n */\nconst SELECTION_LIST = new InjectionToken('SelectionList');\nclass MatListOption extends MatListItemBase {\n    _selectionList = inject(SELECTION_LIST);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _lines;\n    _titles;\n    _unscopedContent;\n    /**\n     * Emits when the selected state of the option has changed.\n     * Use to facilitate two-data binding to the `selected` property.\n     * @docs-private\n     */\n    selectedChange = new EventEmitter();\n    /** Whether the label should appear before or after the checkbox/radio. Defaults to 'after' */\n    togglePosition = 'after';\n    /**\n     * Whether the label should appear before or after the checkbox/radio. Defaults to 'after'\n     *\n     * @deprecated Use `togglePosition` instead.\n     * @breaking-change 17.0.0\n     */\n    get checkboxPosition() {\n        return this.togglePosition;\n    }\n    set checkboxPosition(value) {\n        this.togglePosition = value;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox/radio.\n     * This API is supported in M2 themes only, it has no effect in M3 themes. For color customization\n     * in M3, see https://material.angular.dev/components/list/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color || this._selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    _color;\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    _value;\n    /** Whether the option is selected. */\n    get selected() {\n        return this._selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this._selectionList.multiple) {\n                this._selectionList._reportValueChange();\n            }\n        }\n    }\n    _selected = false;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't\n     * clear the value of `selected` in the first cycle.\n     */\n    _inputsInitialized = false;\n    ngOnInit() {\n        const list = this._selectionList;\n        if (list._value && list._value.some(value => list.compareWith(this._value, value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._hostElement.focus();\n    }\n    /** Gets the text label of the list option. Used for the typeahead functionality in the list. */\n    getLabel() {\n        const titleElement = this._titles?.get(0)?._elementRef.nativeElement;\n        // If there is no explicit title element, the unscoped text content\n        // is treated as the list item title.\n        const labelEl = titleElement || this._unscopedContent?.nativeElement;\n        return labelEl?.textContent || '';\n    }\n    /** Whether a checkbox is shown at the given position. */\n    _hasCheckboxAt(position) {\n        return this._selectionList.multiple && this._getTogglePosition() === position;\n    }\n    /** Where a radio indicator is shown at the given position. */\n    _hasRadioAt(position) {\n        return (!this._selectionList.multiple &&\n            this._getTogglePosition() === position &&\n            !this._selectionList.hideSingleSelectionIndicator);\n    }\n    /** Whether icons or avatars are shown at the given position. */\n    _hasIconsOrAvatarsAt(position) {\n        return this._hasProjected('icons', position) || this._hasProjected('avatars', position);\n    }\n    /** Gets whether the given type of element is projected at the specified position. */\n    _hasProjected(type, position) {\n        // If the checkbox/radio is shown at the specified position, neither icons or\n        // avatars can be shown at the position.\n        return (this._getTogglePosition() !== position &&\n            (type === 'avatars' ? this._avatars.length !== 0 : this._icons.length !== 0));\n    }\n    _handleBlur() {\n        this._selectionList._onTouched();\n    }\n    /** Gets the current position of the checkbox/radio. */\n    _getTogglePosition() {\n        return this.togglePosition || 'after';\n    }\n    /**\n     * Sets the selected state of the option.\n     * @returns Whether the value has changed.\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this._selectionList.selectedOptions.select(this);\n        }\n        else {\n            this._selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetectorRef.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run.\n     * Mainly used to trigger an update of the list option if the disabled state of the selection\n     * list changed.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the option's value based on a user interaction. */\n    _toggleOnInteraction() {\n        if (!this.disabled) {\n            if (this._selectionList.multiple) {\n                this.selected = !this.selected;\n                this._selectionList._emitChangeEvent([this]);\n            }\n            else if (!this.selected) {\n                this.selected = true;\n                this._selectionList._emitChangeEvent([this]);\n            }\n        }\n    }\n    /** Sets the tabindex of the list option. */\n    _setTabindex(value) {\n        this._hostElement.setAttribute('tabindex', value + '');\n    }\n    _hasBothLeadingAndTrailing() {\n        const hasLeading = this._hasProjected('avatars', 'before') ||\n            this._hasProjected('icons', 'before') ||\n            this._hasCheckboxAt('before') ||\n            this._hasRadioAt('before');\n        const hasTrailing = this._hasProjected('icons', 'after') ||\n            this._hasProjected('avatars', 'after') ||\n            this._hasCheckboxAt('after') ||\n            this._hasRadioAt('after');\n        return hasLeading && hasTrailing;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatListOption, isStandalone: true, selector: \"mat-list-option\", inputs: { togglePosition: \"togglePosition\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"blur\": \"_handleBlur()\", \"click\": \"_toggleOnInteraction()\" }, properties: { \"class.mdc-list-item--selected\": \"selected && !_selectionList.multiple && _selectionList.hideSingleSelectionIndicator\", \"class.mdc-list-item--with-leading-avatar\": \"_hasProjected(\\\"avatars\\\", \\\"before\\\")\", \"class.mdc-list-item--with-leading-icon\": \"_hasProjected(\\\"icons\\\", \\\"before\\\")\", \"class.mdc-list-item--with-trailing-icon\": \"_hasProjected(\\\"icons\\\", \\\"after\\\")\", \"class.mat-mdc-list-option-with-trailing-avatar\": \"_hasProjected(\\\"avatars\\\", \\\"after\\\")\", \"class.mdc-list-item--with-leading-checkbox\": \"_hasCheckboxAt(\\\"before\\\")\", \"class.mdc-list-item--with-trailing-checkbox\": \"_hasCheckboxAt(\\\"after\\\")\", \"class.mdc-list-item--with-leading-radio\": \"_hasRadioAt(\\\"before\\\")\", \"class.mdc-list-item--with-trailing-radio\": \"_hasRadioAt(\\\"after\\\")\", \"class.mat-mdc-list-item-both-leading-and-trailing\": \"_hasBothLeadingAndTrailing()\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.aria-selected\": \"selected\" }, classAttribute: \"mat-mdc-list-item mat-mdc-list-option mdc-list-item\" }, providers: [\n            { provide: MatListItemBase, useExisting: MatListOption },\n            { provide: LIST_OPTION, useExisting: MatListOption },\n        ], queries: [{ propertyName: \"_lines\", predicate: MatListItemLine, descendants: true }, { propertyName: \"_titles\", predicate: MatListItemTitle, descendants: true }], viewQueries: [{ propertyName: \"_unscopedContent\", first: true, predicate: [\"unscopedContent\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Save icons and the pseudo checkbox/radio so that they can be re-used in the template without\\n  duplication. Also content can only be injected once so we need to extract icons/avatars\\n  into a template since we use it in multiple places.\\n-->\\n<ng-template #icons>\\n  <ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\">\\n  </ng-content>\\n</ng-template>\\n\\n<ng-template #checkbox>\\n  <div class=\\\"mdc-checkbox\\\" [class.mdc-checkbox--disabled]=\\\"disabled\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #radio>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <input type=\\\"radio\\\" class=\\\"mdc-radio__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n@if (_hasCheckboxAt('before')) {\\n  <!-- Container for the checkbox at start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-checkbox-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('before')) {\\n  <!-- Container for the radio at the start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-radio-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n<!-- Conditionally renders icons/avatars before the list item text. -->\\n@if (_hasIconsOrAvatarsAt('before')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Text -->\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n@if (_hasCheckboxAt('after')) {\\n  <!-- Container for the checkbox at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('after')) {\\n  <!-- Container for the radio at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n\\n<!-- Conditionally renders icons/avatars after the list item text. -->\\n@if (_hasIconsOrAvatarsAt('after')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Divider -->\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-focus-indicator\\\"></div>\\n\", styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item,[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:0;padding-right:0}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px;width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mat-checkbox-state-layer-size, 40px);height:var(--mat-checkbox-state-layer-size, 40px);top:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);right:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mat-mdc-list-option .mdc-checkbox--disabled{opacity:.5}}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mat-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2)}.mat-mdc-list-option .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary))}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-list-option .mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mat-mdc-list-option .mdc-checkbox__checkmark{color:CanvasText}}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mat-mdc-list-option .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-list-option .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mat-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-list-option .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-list-option .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mat-radio-state-layer-size, 40px);height:var(--mat-radio-state-layer-size, 40px);top:calc(-1*(var(--mat-radio-state-layer-size, 40px) - 20px)/2);left:calc(-1*(var(--mat-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-list-option .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0);border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),background-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}@media(forced-colors: active){.mat-mdc-list-option .mdc-radio__inner-circle{background-color:CanvasText !important}}.mat-mdc-list-option .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mat-radio-state-layer-size, 40px);height:var(--mat-radio-state-layer-size, 40px)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-unselected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-selected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle{background-color:var(--mat-radio-disabled-selected-icon-color, var(--mat-sys-on-surface, currentColor));opacity:var(--mat-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-list-option .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-selected-icon-color, var(--mat-sys-primary))}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{background-color:var(--mat-radio-selected-icon-color, var(--mat-sys-primary, currentColor))}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-list-option .mdc-checkbox__native-control,.mat-mdc-list-option .mdc-radio__native-control{display:none}@media(forced-colors: active){.mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', host: {\n                        'class': 'mat-mdc-list-item mat-mdc-list-option mdc-list-item',\n                        'role': 'option',\n                        // As per MDC, only list items without checkbox or radio indicator should receive the\n                        // `--selected` class.\n                        '[class.mdc-list-item--selected]': 'selected && !_selectionList.multiple && _selectionList.hideSingleSelectionIndicator',\n                        // Based on the checkbox/radio position and whether there are icons or avatars, we apply MDC's\n                        // list-item `--leading` and `--trailing` classes.\n                        '[class.mdc-list-item--with-leading-avatar]': '_hasProjected(\"avatars\", \"before\")',\n                        '[class.mdc-list-item--with-leading-icon]': '_hasProjected(\"icons\", \"before\")',\n                        '[class.mdc-list-item--with-trailing-icon]': '_hasProjected(\"icons\", \"after\")',\n                        '[class.mat-mdc-list-option-with-trailing-avatar]': '_hasProjected(\"avatars\", \"after\")',\n                        // Based on the checkbox/radio position, we apply the `--leading` or `--trailing` MDC classes\n                        // which ensure that the checkbox/radio is positioned correctly within the list item.\n                        '[class.mdc-list-item--with-leading-checkbox]': '_hasCheckboxAt(\"before\")',\n                        '[class.mdc-list-item--with-trailing-checkbox]': '_hasCheckboxAt(\"after\")',\n                        '[class.mdc-list-item--with-leading-radio]': '_hasRadioAt(\"before\")',\n                        '[class.mdc-list-item--with-trailing-radio]': '_hasRadioAt(\"after\")',\n                        // Utility class that makes it easier to target the case where there's both a leading\n                        // and a trailing icon. Avoids having to write out all the combinations.\n                        '[class.mat-mdc-list-item-both-leading-and-trailing]': '_hasBothLeadingAndTrailing()',\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[attr.aria-selected]': 'selected',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_toggleOnInteraction()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        { provide: MatListItemBase, useExisting: MatListOption },\n                        { provide: LIST_OPTION, useExisting: MatListOption },\n                    ], imports: [NgTemplateOutlet, CdkObserveContent], template: \"<!--\\n  Save icons and the pseudo checkbox/radio so that they can be re-used in the template without\\n  duplication. Also content can only be injected once so we need to extract icons/avatars\\n  into a template since we use it in multiple places.\\n-->\\n<ng-template #icons>\\n  <ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\">\\n  </ng-content>\\n</ng-template>\\n\\n<ng-template #checkbox>\\n  <div class=\\\"mdc-checkbox\\\" [class.mdc-checkbox--disabled]=\\\"disabled\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #radio>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <input type=\\\"radio\\\" class=\\\"mdc-radio__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n@if (_hasCheckboxAt('before')) {\\n  <!-- Container for the checkbox at start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-checkbox-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('before')) {\\n  <!-- Container for the radio at the start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-radio-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n<!-- Conditionally renders icons/avatars before the list item text. -->\\n@if (_hasIconsOrAvatarsAt('before')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Text -->\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n@if (_hasCheckboxAt('after')) {\\n  <!-- Container for the checkbox at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('after')) {\\n  <!-- Container for the radio at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n\\n<!-- Conditionally renders icons/avatars after the list item text. -->\\n@if (_hasIconsOrAvatarsAt('after')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Divider -->\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-focus-indicator\\\"></div>\\n\", styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item,[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:0;padding-right:0}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px;width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mat-checkbox-state-layer-size, 40px);height:var(--mat-checkbox-state-layer-size, 40px);top:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);right:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mat-mdc-list-option .mdc-checkbox--disabled{opacity:.5}}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mat-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2)}.mat-mdc-list-option .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary))}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-list-option .mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mat-mdc-list-option .mdc-checkbox__checkmark{color:CanvasText}}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mat-mdc-list-option .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-list-option .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mat-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-list-option .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-list-option .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mat-radio-state-layer-size, 40px);height:var(--mat-radio-state-layer-size, 40px);top:calc(-1*(var(--mat-radio-state-layer-size, 40px) - 20px)/2);left:calc(-1*(var(--mat-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-list-option .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0);border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),background-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}@media(forced-colors: active){.mat-mdc-list-option .mdc-radio__inner-circle{background-color:CanvasText !important}}.mat-mdc-list-option .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mat-radio-state-layer-size, 40px);height:var(--mat-radio-state-layer-size, 40px)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-unselected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-selected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle{background-color:var(--mat-radio-disabled-selected-icon-color, var(--mat-sys-on-surface, currentColor));opacity:var(--mat-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-list-option .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-selected-icon-color, var(--mat-sys-primary))}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{background-color:var(--mat-radio-selected-icon-color, var(--mat-sys-primary, currentColor))}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__start>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-list-option._mat-animation-noopable>.mdc-list-item__end>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-list-option .mdc-checkbox__native-control,.mat-mdc-list-option .mdc-radio__native-control{display:none}@media(forced-colors: active){.mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}}\\n\"] }]\n        }], propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatListItemLine, { descendants: true }]\n            }], _titles: [{\n                type: ContentChildren,\n                args: [MatListItemTitle, { descendants: true }]\n            }], _unscopedContent: [{\n                type: ViewChild,\n                args: ['unscopedContent']\n            }], selectedChange: [{\n                type: Output\n            }], togglePosition: [{\n                type: Input\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatListSubheaderCssMatStyler, isStandalone: true, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-mdc-subheader mdc-list-group__subheader\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    // TODO(mmalerba): MDC's subheader font looks identical to the list item font, figure out why and\n                    //  make a change in one of the repos to visually distinguish.\n                    host: { 'class': 'mat-mdc-subheader mdc-list-group__subheader' },\n                }]\n        }] });\n\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends MatListBase {\n    // An navigation list is considered interactive, but does not extend the interactive list\n    // base class. We do this because as per MDC, items of interactive lists are only reachable\n    // through keyboard shortcuts. We want all items for the navigation list to be reachable\n    // through tab key as we do not intend to provide any special accessibility treatment. The\n    // accessibility treatment depends on how the end-user will interact with it.\n    _isNonInteractive = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatNavList, isStandalone: true, selector: \"mat-nav-list\", host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-mdc-nav-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mat-list-list-item-container-color, transparent);border-radius:var(--mat-list-list-item-container-shape, var(--mat-sys-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mat-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mat-list-list-item-one-line-container-height, 48px)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mat-list-list-item-two-line-container-height, 64px)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mat-list-list-item-three-line-container-height, 88px)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;content:\\\"\\\";pointer-events:none}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-leading-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-leading-icon-size, 24px);height:var(--mat-list-list-item-leading-icon-size, 24px);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mat-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mat-list-list-item-leading-avatar-size, 40px);height:var(--mat-list-list-item-leading-avatar-size, 40px);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mat-list-list-item-trailing-supporting-text-font, var(--mat-sys-label-small-font));line-height:var(--mat-list-list-item-trailing-supporting-text-line-height, var(--mat-sys-label-small-line-height));font-size:var(--mat-list-list-item-trailing-supporting-text-size, var(--mat-sys-label-small-size));font-weight:var(--mat-list-list-item-trailing-supporting-text-weight, var(--mat-sys-label-small-weight));letter-spacing:var(--mat-list-list-item-trailing-supporting-text-tracking, var(--mat-sys-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-trailing-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-trailing-icon-size, 24px);height:var(--mat-list-list-item-trailing-icon-size, 24px)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mat-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mat-list-list-item-trailing-supporting-text-color, var(--mat-sys-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-selected-trailing-icon-color, var(--mat-sys-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mat-list-list-item-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-list-list-item-label-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-list-list-item-label-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-list-list-item-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-list-list-item-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-list-list-item-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mat-list-list-item-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mat-list-list-item-focus-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mat-list-list-item-supporting-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-list-list-item-supporting-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-list-list-item-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-list-list-item-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-list-list-item-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-list-list-item-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-disabled-leading-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-leading-icon-opacity, 0.38)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-disabled-trailing-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-trailing-icon-opacity, 0.38)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mat-list-list-item-disabled-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:hover::before{background-color:var(--mat-list-list-item-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mat-list-list-item-disabled-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mat-list-list-item-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mat-list-list-item-leading-avatar-shape, var(--mat-sys-corner-full));background-color:var(--mat-list-list-item-leading-avatar-color, var(--mat-sys-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mat-list-list-item-leading-icon-size, 24px)}@media(forced-colors: active){a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none;border-radius:inherit}.mat-mdc-list-item>.mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space, 16px);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space, 16px)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full));--mat-focus-indicator-border-radius: var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-sys-secondary-container))}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-nav-list mat-mdc-list-base mdc-list',\n                        'role': 'navigation',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatNavList }], styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mat-list-list-item-container-color, transparent);border-radius:var(--mat-list-list-item-container-shape, var(--mat-sys-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mat-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mat-list-list-item-one-line-container-height, 48px)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mat-list-list-item-two-line-container-height, 64px)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mat-list-list-item-three-line-container-height, 88px)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;content:\\\"\\\";pointer-events:none}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-leading-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-leading-icon-size, 24px);height:var(--mat-list-list-item-leading-icon-size, 24px);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mat-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mat-list-list-item-leading-avatar-size, 40px);height:var(--mat-list-list-item-leading-avatar-size, 40px);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mat-list-list-item-trailing-supporting-text-font, var(--mat-sys-label-small-font));line-height:var(--mat-list-list-item-trailing-supporting-text-line-height, var(--mat-sys-label-small-line-height));font-size:var(--mat-list-list-item-trailing-supporting-text-size, var(--mat-sys-label-small-size));font-weight:var(--mat-list-list-item-trailing-supporting-text-weight, var(--mat-sys-label-small-weight));letter-spacing:var(--mat-list-list-item-trailing-supporting-text-tracking, var(--mat-sys-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-trailing-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-trailing-icon-size, 24px);height:var(--mat-list-list-item-trailing-icon-size, 24px)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mat-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mat-list-list-item-trailing-supporting-text-color, var(--mat-sys-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-selected-trailing-icon-color, var(--mat-sys-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mat-list-list-item-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-list-list-item-label-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-list-list-item-label-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-list-list-item-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-list-list-item-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-list-list-item-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mat-list-list-item-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mat-list-list-item-focus-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mat-list-list-item-supporting-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-list-list-item-supporting-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-list-list-item-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-list-list-item-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-list-list-item-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-list-list-item-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-disabled-leading-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-leading-icon-opacity, 0.38)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-disabled-trailing-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-trailing-icon-opacity, 0.38)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mat-list-list-item-disabled-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:hover::before{background-color:var(--mat-list-list-item-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mat-list-list-item-disabled-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mat-list-list-item-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mat-list-list-item-leading-avatar-shape, var(--mat-sys-corner-full));background-color:var(--mat-list-list-item-leading-avatar-color, var(--mat-sys-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mat-list-list-item-leading-icon-size, 24px)}@media(forced-colors: active){a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none;border-radius:inherit}.mat-mdc-list-item>.mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space, 16px);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space, 16px)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full));--mat-focus-indicator-border-radius: var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-sys-secondary-container))}\\n\"] }]\n        }] });\n\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    source;\n    options;\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.options = options;\n    }\n}\nclass MatSelectionList extends MatListBase {\n    _element = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _initialized = false;\n    _keyManager;\n    _listenerCleanups;\n    /** Emits when the list has been destroyed. */\n    _destroyed = new Subject();\n    /** Whether the list has been destroyed. */\n    _isDestroyed;\n    /** View to model callback that should be called whenever the selected options change. */\n    _onChange = (_) => { };\n    _items;\n    /** Emits a change event whenever the selected state of an option changes. */\n    selectionChange = new EventEmitter();\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all\n     * list options. This API is supported in M2 themes only, it has no effect in\n     * M3 themes. For color customization in M3, see https://material.angular.dev/components/list/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color = 'accent';\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     */\n    compareWith = (a1, a2) => a1 === a2;\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._initialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    _multiple = true;\n    /** Whether radio indicator for all list items is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n    }\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** The currently selected options. */\n    selectedOptions = new SelectionModel(this._multiple);\n    /** Keeps track of the currently-selected value. */\n    _value;\n    /** View to model callback that should be called if the list or its options lost focus. */\n    _onTouched = () => { };\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    constructor() {\n        super();\n        this._isNonInteractive = false;\n    }\n    ngAfterViewInit() {\n        // Mark the selection list as initialized so that the `multiple`\n        // binding can no longer be changed.\n        this._initialized = true;\n        this._setupRovingTabindex();\n        // These events are bound outside the zone, because they don't change\n        // any change-detected properties and they can trigger timeouts.\n        this._ngZone.runOutsideAngular(() => {\n            this._listenerCleanups = [\n                this._renderer.listen(this._element.nativeElement, 'focusin', this._handleFocusin),\n                this._renderer.listen(this._element.nativeElement, 'focusout', this._handleFocusout),\n            ];\n        });\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        this._watchForSelectionChange();\n    }\n    ngOnChanges(changes) {\n        const disabledChanges = changes['disabled'];\n        const disableRippleChanges = changes['disableRipple'];\n        const hideSingleSelectionIndicatorChanges = changes['hideSingleSelectionIndicator'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (disabledChanges && !disabledChanges.firstChange) ||\n            (hideSingleSelectionIndicatorChanges && !hideSingleSelectionIndicatorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._listenerCleanups?.forEach(current => current());\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether the *entire* selection list is disabled. When true, each list item is also disabled\n     * and each list item is removed from the tab order (has tabindex=\"-1\").\n     */\n    get disabled() {\n        return this._selectionListDisabled();\n    }\n    set disabled(value) {\n        // Update the disabled state of this list. Write to `this._selectionListDisabled` instead of\n        // `super.disabled`. That is to avoid closure compiler compatibility issues with assigning to\n        // a super property.\n        this._selectionListDisabled.set(coerceBooleanProperty(value));\n        if (this._selectionListDisabled()) {\n            this._keyManager?.setActiveItem(-1);\n        }\n    }\n    _selectionListDisabled = signal(false, ...(ngDevMode ? [{ debugName: \"_selectionListDisabled\" }] : []));\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Watches for changes in the selected state of the options and updates the list accordingly. */\n    _watchForSelectionChange() {\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            // Sync external changes to the model back to the options.\n            for (let item of event.added) {\n                item.selected = true;\n            }\n            for (let item of event.removed) {\n                item.selected = false;\n            }\n            if (!this._containsFocus()) {\n                this._resetActiveOption();\n            }\n        });\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n        }\n        return changedOptions;\n    }\n    // Note: This getter exists for backwards compatibility. The `_items` query list\n    // cannot be named `options` as it will be picked up by the interactive list base.\n    /** The option components contained within this selection-list. */\n    get options() {\n        return this._items;\n    }\n    /** Handles keydown events within the list. */\n    _handleKeydown(event) {\n        const activeItem = this._keyManager.activeItem;\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this._keyManager.isTyping() &&\n            activeItem &&\n            !activeItem.disabled) {\n            event.preventDefault();\n            activeItem._toggleOnInteraction();\n        }\n        else if (event.keyCode === A &&\n            this.multiple &&\n            !this._keyManager.isTyping() &&\n            hasModifierKey(event, 'ctrlKey', 'metaKey')) {\n            const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n            event.preventDefault();\n            this._emitChangeEvent(this._setAllOptionsSelected(shouldSelect, true));\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /** Handles focusout events within the list. */\n    _handleFocusout = () => {\n        // Focus takes a while to update so we have to wrap our call in a timeout.\n        setTimeout(() => {\n            if (!this._containsFocus()) {\n                this._resetActiveOption();\n            }\n        });\n    };\n    /** Handles focusin events within the list. */\n    _handleFocusin = (event) => {\n        if (this.disabled) {\n            return;\n        }\n        const activeIndex = this._items\n            .toArray()\n            .findIndex(item => item._elementRef.nativeElement.contains(event.target));\n        if (activeIndex > -1) {\n            this._setActiveOption(activeIndex);\n        }\n        else {\n            this._resetActiveOption();\n        }\n    };\n    /**\n     * Sets up the logic for maintaining the roving tabindex.\n     *\n     * `skipPredicate` determines if key manager should avoid putting a given list item in the tab\n     * index. Allow disabled list items to receive focus to align with WAI ARIA recommendation.\n     * Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n     * makes a few exceptions for compound widgets.\n     *\n     * From [Developing a Keyboard Interface](\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n     *   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n     *   Listbox...\"\n     */\n    _setupRovingTabindex() {\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHomeAndEnd()\n            .withTypeAhead()\n            .withWrap()\n            .skipPredicate(() => this.disabled);\n        // Set the initial focus.\n        this._resetActiveOption();\n        // Move the tabindex to the currently-focused list item.\n        this._keyManager.change.subscribe(activeItemIndex => this._setActiveOption(activeItemIndex));\n        // If the active item is removed from the list, reset back to the first one.\n        this._items.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            const activeItem = this._keyManager.activeItem;\n            if (!activeItem || this._items.toArray().indexOf(activeItem) === -1) {\n                this._resetActiveOption();\n            }\n        });\n    }\n    /**\n     * Sets an option as active.\n     * @param index Index of the active option. If set to -1, no option will be active.\n     */\n    _setActiveOption(index) {\n        this._items.forEach((item, itemIndex) => item._setTabindex(itemIndex === index ? 0 : -1));\n        this._keyManager.updateActiveItem(index);\n    }\n    /**\n     * Resets the active option. When the list is disabled, remove all options from to the tab order.\n     * Otherwise, focus the first selected option.\n     */\n    _resetActiveOption() {\n        if (this.disabled) {\n            this._setActiveOption(-1);\n            return;\n        }\n        const activeItem = this._items.find(item => item.selected && !item.disabled) || this._items.first;\n        this._setActiveOption(activeItem ? this._items.toArray().indexOf(activeItem) : -1);\n    }\n    /** Returns whether the focus is currently within the list. */\n    _containsFocus() {\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return activeElement && this._element.nativeElement.contains(activeElement);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelectionList, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatSelectionList, isStandalone: true, selector: \"mat-selection-list\", inputs: { color: \"color\", compareWith: \"compareWith\", multiple: \"multiple\", hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\", disabled: \"disabled\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\" }, classAttribute: \"mat-mdc-selection-list mat-mdc-list-base mdc-list\" }, providers: [\n            MAT_SELECTION_LIST_VALUE_ACCESSOR,\n            { provide: MatListBase, useExisting: MatSelectionList },\n            { provide: SELECTION_LIST, useExisting: MatSelectionList },\n        ], queries: [{ propertyName: \"_items\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mat-list-list-item-container-color, transparent);border-radius:var(--mat-list-list-item-container-shape, var(--mat-sys-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mat-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mat-list-list-item-one-line-container-height, 48px)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mat-list-list-item-two-line-container-height, 64px)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mat-list-list-item-three-line-container-height, 88px)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;content:\\\"\\\";pointer-events:none}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-leading-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-leading-icon-size, 24px);height:var(--mat-list-list-item-leading-icon-size, 24px);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mat-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mat-list-list-item-leading-avatar-size, 40px);height:var(--mat-list-list-item-leading-avatar-size, 40px);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mat-list-list-item-trailing-supporting-text-font, var(--mat-sys-label-small-font));line-height:var(--mat-list-list-item-trailing-supporting-text-line-height, var(--mat-sys-label-small-line-height));font-size:var(--mat-list-list-item-trailing-supporting-text-size, var(--mat-sys-label-small-size));font-weight:var(--mat-list-list-item-trailing-supporting-text-weight, var(--mat-sys-label-small-weight));letter-spacing:var(--mat-list-list-item-trailing-supporting-text-tracking, var(--mat-sys-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-trailing-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-trailing-icon-size, 24px);height:var(--mat-list-list-item-trailing-icon-size, 24px)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mat-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mat-list-list-item-trailing-supporting-text-color, var(--mat-sys-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-selected-trailing-icon-color, var(--mat-sys-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mat-list-list-item-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-list-list-item-label-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-list-list-item-label-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-list-list-item-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-list-list-item-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-list-list-item-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mat-list-list-item-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mat-list-list-item-focus-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mat-list-list-item-supporting-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-list-list-item-supporting-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-list-list-item-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-list-list-item-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-list-list-item-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-list-list-item-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-disabled-leading-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-leading-icon-opacity, 0.38)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-disabled-trailing-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-trailing-icon-opacity, 0.38)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mat-list-list-item-disabled-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:hover::before{background-color:var(--mat-list-list-item-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mat-list-list-item-disabled-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mat-list-list-item-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mat-list-list-item-leading-avatar-shape, var(--mat-sys-corner-full));background-color:var(--mat-list-list-item-leading-avatar-color, var(--mat-sys-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mat-list-list-item-leading-icon-size, 24px)}@media(forced-colors: active){a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none;border-radius:inherit}.mat-mdc-list-item>.mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space, 16px);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space, 16px)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full));--mat-focus-indicator-border-radius: var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-sys-secondary-container))}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', host: {\n                        'class': 'mat-mdc-selection-list mat-mdc-list-base mdc-list',\n                        'role': 'listbox',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [\n                        MAT_SELECTION_LIST_VALUE_ACCESSOR,\n                        { provide: MatListBase, useExisting: MatSelectionList },\n                        { provide: SELECTION_LIST, useExisting: MatSelectionList },\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mat-list-list-item-container-color, transparent);border-radius:var(--mat-list-list-item-container-shape, var(--mat-sys-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mat-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mat-list-list-item-one-line-container-height, 48px)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mat-list-list-item-two-line-container-height, 64px)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mat-list-list-item-three-line-container-height, 88px)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;content:\\\"\\\";pointer-events:none}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-leading-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-leading-icon-size, 24px);height:var(--mat-list-list-item-leading-icon-size, 24px);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mat-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mat-list-list-item-leading-avatar-size, 40px);height:var(--mat-list-list-item-leading-avatar-size, 40px);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mat-list-list-item-trailing-supporting-text-font, var(--mat-sys-label-small-font));line-height:var(--mat-list-list-item-trailing-supporting-text-line-height, var(--mat-sys-label-small-line-height));font-size:var(--mat-list-list-item-trailing-supporting-text-size, var(--mat-sys-label-small-size));font-weight:var(--mat-list-list-item-trailing-supporting-text-weight, var(--mat-sys-label-small-weight));letter-spacing:var(--mat-list-list-item-trailing-supporting-text-tracking, var(--mat-sys-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-trailing-icon-color, var(--mat-sys-on-surface-variant));width:var(--mat-list-list-item-trailing-icon-size, 24px);height:var(--mat-list-list-item-trailing-icon-size, 24px)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mat-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mat-list-list-item-trailing-supporting-text-color, var(--mat-sys-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-selected-trailing-icon-color, var(--mat-sys-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mat-list-list-item-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-list-list-item-label-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-list-list-item-label-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-list-list-item-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-list-list-item-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-list-list-item-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mat-list-list-item-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mat-list-list-item-focus-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mat-list-list-item-supporting-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-list-list-item-supporting-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-list-list-item-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-list-list-item-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-list-list-item-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-list-list-item-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mat-list-list-item-disabled-leading-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-leading-icon-opacity, 0.38)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mat-list-list-item-disabled-trailing-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-trailing-icon-opacity, 0.38)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mat-list-list-item-disabled-label-text-color, var(--mat-sys-on-surface))}.mdc-list-item:hover::before{background-color:var(--mat-list-list-item-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mat-list-list-item-disabled-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-disabled-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mat-list-list-item-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-list-list-item-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mat-list-list-item-disabled-label-text-opacity, 0.3)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mat-list-list-item-leading-avatar-shape, var(--mat-sys-corner-full));background-color:var(--mat-list-list-item-leading-avatar-color, var(--mat-sys-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mat-list-list-item-leading-icon-size, 24px)}@media(forced-colors: active){a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none;border-radius:inherit}.mat-mdc-list-item>.mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space, 16px);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space, 16px)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full));--mat-focus-indicator-border-radius: var(--mat-list-active-indicator-shape, var(--mat-sys-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-sys-secondary-container))}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], hideSingleSelectionIndicator: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass MatListModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListModule, imports: [ObserversModule,\n            MatCommonModule,\n            MatRippleModule,\n            MatPseudoCheckboxModule,\n            MatList,\n            MatActionList,\n            MatNavList,\n            MatSelectionList,\n            MatListItem,\n            MatListOption,\n            MatListSubheaderCssMatStyler,\n            MatListItemAvatar,\n            MatListItemIcon,\n            MatListItemLine,\n            MatListItemTitle,\n            MatListItemMeta], exports: [MatList,\n            MatActionList,\n            MatNavList,\n            MatSelectionList,\n            MatListItem,\n            MatListOption,\n            MatListItemAvatar,\n            MatListItemIcon,\n            MatListSubheaderCssMatStyler,\n            MatDividerModule,\n            MatListItemLine,\n            MatListItemTitle,\n            MatListItemMeta] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListModule, imports: [ObserversModule,\n            MatCommonModule,\n            MatRippleModule,\n            MatPseudoCheckboxModule, MatDividerModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        ObserversModule,\n                        MatCommonModule,\n                        MatRippleModule,\n                        MatPseudoCheckboxModule,\n                        MatList,\n                        MatActionList,\n                        MatNavList,\n                        MatSelectionList,\n                        MatListItem,\n                        MatListOption,\n                        MatListSubheaderCssMatStyler,\n                        MatListItemAvatar,\n                        MatListItemIcon,\n                        MatListItemLine,\n                        MatListItemTitle,\n                        MatListItemMeta,\n                    ],\n                    exports: [\n                        MatList,\n                        MatActionList,\n                        MatNavList,\n                        MatSelectionList,\n                        MatListItem,\n                        MatListOption,\n                        MatListItemAvatar,\n                        MatListItemIcon,\n                        MatListSubheaderCssMatStyler,\n                        MatDividerModule,\n                        MatListItemLine,\n                        MatListItemTitle,\n                        MatListItemMeta,\n                    ],\n                }]\n        }] });\n\nexport { MAT_LIST, MAT_LIST_CONFIG, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatActionList, MatList, MatListItem, MatListItemAvatar, MatListItemIcon, MatListItemLine, MatListItemMeta, MatListItemTitle, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange, SELECTION_LIST, _MatListItemGraphicBase };\n\n","import * as i0 from '@angular/core';\nimport { inject, DOCUMENT, NgZone, Injector, RendererFactory2, Injectable } from '@angular/core';\nimport { Platform, _getEventTarget } from '@angular/cdk/platform';\nimport { _animationsDisabled } from './animation.mjs';\nimport { MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, defaultRippleAnimationConfig } from './ripple.mjs';\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = { capture: true };\n/**\n * The events that should trigger the initialization of the ripple.\n * Note that we use `mousedown`, rather than `click`, for mouse devices because\n * we can't rely on `mouseenter` in the shadow DOM and `click` happens too late.\n */\nconst rippleInteractionEvents = ['focus', 'mousedown', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n *\n * @docs-private\n */\nclass MatRippleLoader {\n    _document = inject(DOCUMENT);\n    _animationsDisabled = _animationsDisabled();\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _injector = inject(Injector);\n    _eventCleanups;\n    _hosts = new Map();\n    constructor() {\n        const renderer = inject(RendererFactory2).createRenderer(null, null);\n        this._eventCleanups = this._ngZone.runOutsideAngular(() => rippleInteractionEvents.map(name => renderer.listen(this._document, name, this._onInteraction, eventListenerOptions)));\n    }\n    ngOnDestroy() {\n        const hosts = this._hosts.keys();\n        for (const host of hosts) {\n            this.destroyRipple(host);\n        }\n        this._eventCleanups.forEach(cleanup => cleanup());\n    }\n    /**\n     * Configures the ripple that will be rendered by the ripple loader.\n     *\n     * Stores the given information about how the ripple should be configured on the host\n     * element so that it can later be retrived & used when the ripple is actually created.\n     */\n    configureRipple(host, config) {\n        // Indicates that the ripple has not yet been rendered for this component.\n        host.setAttribute(matRippleUninitialized, this._globalRippleOptions?.namespace ?? '');\n        // Store the additional class name(s) that should be added to the ripple element.\n        if (config.className || !host.hasAttribute(matRippleClassName)) {\n            host.setAttribute(matRippleClassName, config.className || '');\n        }\n        // Store whether the ripple should be centered.\n        if (config.centered) {\n            host.setAttribute(matRippleCentered, '');\n        }\n        if (config.disabled) {\n            host.setAttribute(matRippleDisabled, '');\n        }\n    }\n    /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n    setDisabled(host, disabled) {\n        const ripple = this._hosts.get(host);\n        // If the ripple has already been instantiated, just disable it.\n        if (ripple) {\n            ripple.target.rippleDisabled = disabled;\n            if (!disabled && !ripple.hasSetUpEvents) {\n                ripple.hasSetUpEvents = true;\n                ripple.renderer.setupTriggerEvents(host);\n            }\n        }\n        else if (disabled) {\n            // Otherwise, set an attribute so we know what the\n            // disabled state should be when the ripple is initialized.\n            host.setAttribute(matRippleDisabled, '');\n        }\n        else {\n            host.removeAttribute(matRippleDisabled);\n        }\n    }\n    /**\n     * Handles creating and attaching component internals\n     * when a component is initially interacted with.\n     */\n    _onInteraction = (event) => {\n        const eventTarget = _getEventTarget(event);\n        if (eventTarget instanceof HTMLElement) {\n            // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n            const element = eventTarget.closest(`[${matRippleUninitialized}=\"${this._globalRippleOptions?.namespace ?? ''}\"]`);\n            if (element) {\n                this._createRipple(element);\n            }\n        }\n    };\n    /** Creates a MatRipple and appends it to the given element. */\n    _createRipple(host) {\n        if (!this._document || this._hosts.has(host)) {\n            return;\n        }\n        // Create the ripple element.\n        host.querySelector('.mat-ripple')?.remove();\n        const rippleEl = this._document.createElement('span');\n        rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n        host.append(rippleEl);\n        const globalOptions = this._globalRippleOptions;\n        const enterDuration = this._animationsDisabled\n            ? 0\n            : (globalOptions?.animation?.enterDuration ?? defaultRippleAnimationConfig.enterDuration);\n        const exitDuration = this._animationsDisabled\n            ? 0\n            : (globalOptions?.animation?.exitDuration ?? defaultRippleAnimationConfig.exitDuration);\n        const target = {\n            rippleDisabled: this._animationsDisabled || globalOptions?.disabled || host.hasAttribute(matRippleDisabled),\n            rippleConfig: {\n                centered: host.hasAttribute(matRippleCentered),\n                terminateOnPointerUp: globalOptions?.terminateOnPointerUp,\n                animation: {\n                    enterDuration,\n                    exitDuration,\n                },\n            },\n        };\n        const renderer = new RippleRenderer(target, this._ngZone, rippleEl, this._platform, this._injector);\n        const hasSetUpEvents = !target.rippleDisabled;\n        if (hasSetUpEvents) {\n            renderer.setupTriggerEvents(host);\n        }\n        this._hosts.set(host, {\n            target,\n            renderer,\n            hasSetUpEvents,\n        });\n        host.removeAttribute(matRippleUninitialized);\n    }\n    destroyRipple(host) {\n        const ripple = this._hosts.get(host);\n        if (ripple) {\n            ripple.renderer._removeTriggerEvents();\n            this._hosts.delete(host);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRippleLoader, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRippleLoader, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatRippleLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { MatRippleLoader };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, Renderer2, booleanAttribute, Directive, Input, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { MatRippleLoader } from './ripple-loader.mjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { _animationsDisabled } from './animation.mjs';\n\n/** Injection token that can be used to provide the default options the button component. */\nconst MAT_BUTTON_CONFIG = new InjectionToken('MAT_BUTTON_CONFIG');\nfunction transformTabIndex(value) {\n    return value == null ? undefined : numberAttribute(value);\n}\n/** Base class for all buttons. */\nclass MatButtonBase {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _animationsDisabled = _animationsDisabled();\n    _config = inject(MAT_BUTTON_CONFIG, { optional: true });\n    _focusMonitor = inject(FocusMonitor);\n    _cleanupClick;\n    _renderer = inject(Renderer2);\n    /**\n     * Handles the lazy creation of the MatButton ripple.\n     * Used to improve initial load time of large applications.\n     */\n    _rippleLoader = inject(MatRippleLoader);\n    /** Whether the button is set on an anchor node. */\n    _isAnchor;\n    /** Whether this button is a FAB. Used to apply the correct class on the ripple. */\n    _isFab = false;\n    /**\n     * Theme color of the button. This API is supported in M2 themes only, it has\n     * no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/button/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = value;\n        this._updateRippleDisabled();\n    }\n    _disableRipple = false;\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._updateRippleDisabled();\n    }\n    _disabled = false;\n    /** `aria-disabled` value of the button. */\n    ariaDisabled;\n    /**\n     * Natively disabled buttons prevent focus and any pointer events from reaching the button.\n     * In some scenarios this might not be desirable, because it can prevent users from finding out\n     * why the button is disabled (e.g. via tooltip). This is also useful for buttons that may\n     * become disabled when activated, which would cause focus to be transferred to the document\n     * body instead of remaining on the button.\n     *\n     * Enabling this input will change the button so that it is styled to be disabled and will be\n     * marked as `aria-disabled`, but it will allow the button to receive events and focus.\n     *\n     * Note that by enabling this, you need to set the `tabindex` yourself if the button isn't\n     * meant to be tabbable and you have to prevent the button action (e.g. form submissions).\n     */\n    disabledInteractive;\n    /** Tab index for the button. */\n    tabIndex;\n    /**\n     * Backwards-compatibility input that handles pre-existing `[tabindex]` bindings.\n     * @docs-private\n     */\n    set _tabindex(value) {\n        this.tabIndex = value;\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const element = this._elementRef.nativeElement;\n        this._isAnchor = element.tagName === 'A';\n        this.disabledInteractive = this._config?.disabledInteractive ?? false;\n        this.color = this._config?.color ?? null;\n        this._rippleLoader?.configureRipple(element, { className: 'mat-mdc-button-ripple' });\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n        // Some internal tests depend on the timing of this,\n        // otherwise we could bind it in the constructor.\n        if (this._isAnchor) {\n            this._setupAsAnchor();\n        }\n    }\n    ngOnDestroy() {\n        this._cleanupClick?.();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    }\n    /** Focuses the button. */\n    focus(origin = 'program', options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef.nativeElement, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    _getAriaDisabled() {\n        if (this.ariaDisabled != null) {\n            return this.ariaDisabled;\n        }\n        if (this._isAnchor) {\n            return this.disabled || null;\n        }\n        return this.disabled && this.disabledInteractive ? true : null;\n    }\n    _getDisabledAttribute() {\n        return this.disabledInteractive || !this.disabled ? null : true;\n    }\n    _updateRippleDisabled() {\n        this._rippleLoader?.setDisabled(this._elementRef.nativeElement, this.disableRipple || this.disabled);\n    }\n    _getTabIndex() {\n        if (this._isAnchor) {\n            return this.disabled && !this.disabledInteractive ? -1 : this.tabIndex;\n        }\n        return this.tabIndex;\n    }\n    _setupAsAnchor() {\n        this._cleanupClick = this._ngZone.runOutsideAngular(() => this._renderer.listen(this._elementRef.nativeElement, 'click', (event) => {\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        }));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatButtonBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatButtonBase, isStandalone: true, inputs: { color: \"color\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], ariaDisabled: [\"aria-disabled\", \"ariaDisabled\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", transformTabIndex], _tabindex: [\"tabindex\", \"_tabindex\", transformTabIndex] }, host: { properties: { \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"_getAriaDisabled()\", \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class.mat-unthemed\": \"!color\", \"class._mat-animation-noopable\": \"_animationsDisabled\" }, classAttribute: \"mat-mdc-button-base\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatButtonBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        // Add a class that applies to all buttons. This makes it easier to target if somebody\n                        // wants to target all Material buttons.\n                        'class': 'mat-mdc-button-base',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': '_getAriaDisabled()',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-mdc-button-disabled]': 'disabled',\n                        '[class.mat-mdc-button-disabled-interactive]': 'disabledInteractive',\n                        '[class.mat-unthemed]': '!color',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ariaDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute, alias: 'aria-disabled' }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: transformTabIndex }]\n            }], _tabindex: [{\n                type: Input,\n                args: [{ alias: 'tabindex', transform: transformTabIndex }]\n            }] } });\n\n/**\n * Material Design icon button component. This type of button displays a single interactive icon for\n * users to perform an action.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nclass MatIconButton extends MatButtonBase {\n    constructor() {\n        super();\n        this._rippleLoader.configureRipple(this._elementRef.nativeElement, { centered: true });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatIconButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatIconButton, isStandalone: true, selector: \"button[mat-icon-button], a[mat-icon-button], button[matIconButton], a[matIconButton]\", host: { classAttribute: \"mdc-icon-button mat-mdc-icon-button\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:var(--mat-icon-button-container-shape, var(--mat-sys-corner-full, 50%));flex-shrink:0;text-align:center;width:var(--mat-icon-button-state-layer-size, 40px);height:var(--mat-icon-button-state-layer-size, 40px);padding:calc(calc(var(--mat-icon-button-state-layer-size, 40px) - var(--mat-icon-button-icon-size, 24px)) / 2);font-size:var(--mat-icon-button-icon-size, 24px);color:var(--mat-icon-button-icon-color, var(--mat-sys-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit}.mat-mdc-icon-button:focus>.mat-focus-indicator::before{content:\\\"\\\";border-radius:inherit}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface-variant) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-icon-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-icon-button-touch-target-size, 48px);display:var(--mat-icon-button-touch-target-display, block);left:50%;width:var(--mat-icon-button-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-icon-button-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mat-icon-button-icon-size, 24px);height:var(--mat-icon-button-icon-size, 24px);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:var(--mat-icon-button-container-shape, var(--mat-sys-corner-full, 50%))}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\\n\", \"@media(forced-colors: active){.mat-mdc-button:not(.mdc-button--outlined),.mat-mdc-unelevated-button:not(.mdc-button--outlined),.mat-mdc-raised-button:not(.mdc-button--outlined),.mat-mdc-outlined-button:not(.mdc-button--outlined),.mat-mdc-button-base.mat-tonal-button,.mat-mdc-icon-button.mat-mdc-icon-button,.mat-mdc-outlined-button .mdc-button__ripple{outline:solid 1px}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatIconButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-icon-button], a[mat-icon-button], button[matIconButton], a[matIconButton]`, host: {\n                        'class': 'mdc-icon-button mat-mdc-icon-button',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:var(--mat-icon-button-container-shape, var(--mat-sys-corner-full, 50%));flex-shrink:0;text-align:center;width:var(--mat-icon-button-state-layer-size, 40px);height:var(--mat-icon-button-state-layer-size, 40px);padding:calc(calc(var(--mat-icon-button-state-layer-size, 40px) - var(--mat-icon-button-icon-size, 24px)) / 2);font-size:var(--mat-icon-button-icon-size, 24px);color:var(--mat-icon-button-icon-color, var(--mat-sys-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit}.mat-mdc-icon-button:focus>.mat-focus-indicator::before{content:\\\"\\\";border-radius:inherit}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface-variant) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-icon-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-icon-button-touch-target-size, 48px);display:var(--mat-icon-button-touch-target-display, block);left:50%;width:var(--mat-icon-button-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-icon-button-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mat-icon-button-icon-size, 24px);height:var(--mat-icon-button-icon-size, 24px);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:var(--mat-icon-button-container-shape, var(--mat-sys-corner-full, 50%))}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\\n\", \"@media(forced-colors: active){.mat-mdc-button:not(.mdc-button--outlined),.mat-mdc-unelevated-button:not(.mdc-button--outlined),.mat-mdc-raised-button:not(.mdc-button--outlined),.mat-mdc-outlined-button:not(.mdc-button--outlined),.mat-mdc-button-base.mat-tonal-button,.mat-mdc-icon-button.mat-mdc-icon-button,.mat-mdc-outlined-button .mdc-button__ripple{outline:solid 1px}}\\n\"] }]\n        }], ctorParameters: () => [] });\n// tslint:disable:variable-name\n/**\n * Material Design icon button component for anchor elements. This button displays a single\n * interaction icon that allows users to navigate across different routes or pages.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nconst MatIconAnchor = MatIconButton;\n\nexport { MAT_BUTTON_CONFIG, MatButtonBase, MatIconAnchor, MatIconButton };\n\n","import { MatButtonBase, MatIconButton } from './icon-button.mjs';\nexport { MAT_BUTTON_CONFIG, MatIconAnchor } from './icon-button.mjs';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, InjectionToken, inject, booleanAttribute, NgModule } from '@angular/core';\nimport { MatRippleModule } from './ripple-module.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/private';\nimport './ripple-loader.mjs';\nimport '@angular/cdk/platform';\nimport './animation.mjs';\nimport '@angular/cdk/layout';\nimport './ripple.mjs';\nimport '@angular/cdk/coercion';\nimport './structural-styles.mjs';\nimport '@angular/cdk/bidi';\n\n/**\n * Classes that need to be set for each appearance of the button.\n * Note that we use a `Map` here to avoid issues with property renaming.\n */\nconst APPEARANCE_CLASSES = new Map([\n    ['text', ['mat-mdc-button']],\n    ['filled', ['mdc-button--unelevated', 'mat-mdc-unelevated-button']],\n    ['elevated', ['mdc-button--raised', 'mat-mdc-raised-button']],\n    ['outlined', ['mdc-button--outlined', 'mat-mdc-outlined-button']],\n    ['tonal', ['mat-tonal-button']],\n]);\n/**\n * Material Design button component. Users interact with a button to perform an action.\n * See https://m3.material.io/components/buttons/overview\n */\nclass MatButton extends MatButtonBase {\n    /** Appearance of the button. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        // Allow empty string so users can do `<button matButton></button>`\n        // without having to write out `=\"text\"` every time.\n        this.setAppearance(value || this._config?.defaultAppearance || 'text');\n    }\n    _appearance = null;\n    constructor() {\n        super();\n        const inferredAppearance = _inferAppearance(this._elementRef.nativeElement);\n        // Only set the appearance if we managed to infer it from the static attributes, rather than\n        // doing something like `setAppearance(inferredAppearance || 'text')`, because doing so can\n        // cause the fallback appearance's classes to be set and then immediately replaced when\n        // the input value is assigned.\n        if (inferredAppearance) {\n            this.setAppearance(inferredAppearance);\n        }\n    }\n    /** Programmatically sets the appearance of the button. */\n    setAppearance(appearance) {\n        if (appearance === this._appearance) {\n            return;\n        }\n        const classList = this._elementRef.nativeElement.classList;\n        const previousClasses = this._appearance ? APPEARANCE_CLASSES.get(this._appearance) : null;\n        const newClasses = APPEARANCE_CLASSES.get(appearance);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !newClasses) {\n            throw new Error(`Unsupported MatButton appearance \"${appearance}\"`);\n        }\n        if (previousClasses) {\n            classList.remove(...previousClasses);\n        }\n        classList.add(...newClasses);\n        this._appearance = appearance;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatButton, isStandalone: true, selector: \"\\n    button[matButton], a[matButton], button[mat-button], button[mat-raised-button],\\n    button[mat-flat-button], button[mat-stroked-button], a[mat-button], a[mat-raised-button],\\n    a[mat-flat-button], a[mat-stroked-button]\\n  \", inputs: { appearance: [\"matButton\", \"appearance\"] }, host: { classAttribute: \"mdc-button\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-button-base{text-decoration:none}.mat-mdc-button-base .mat-icon{min-height:fit-content;flex-shrink:0}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-button-text-horizontal-padding, 12px);height:var(--mat-button-text-container-height, 40px);font-family:var(--mat-button-text-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-text-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-text-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-text-label-text-transform);font-weight:var(--mat-button-text-label-text-weight, var(--mat-sys-label-large-weight))}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mat-button-text-container-shape, var(--mat-sys-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mat-button-text-label-text-color, var(--mat-sys-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-text-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-button-text-with-icon-horizontal-padding, 16px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-button-text-icon-spacing, 8px);margin-left:var(--mat-button-text-icon-offset, -4px)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-button-text-icon-offset, -4px);margin-left:var(--mat-button-text-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-text-icon-offset, -4px);margin-left:var(--mat-button-text-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-text-icon-spacing, 8px);margin-left:var(--mat-button-text-icon-offset, -4px)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-button-text-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-text-state-layer-color, var(--mat-sys-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-text-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-text-touch-target-size, 48px);display:var(--mat-button-text-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-filled-container-height, 40px);font-family:var(--mat-button-filled-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-filled-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-filled-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-filled-label-text-transform);font-weight:var(--mat-button-filled-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-filled-horizontal-padding, 24px)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-button-filled-icon-spacing, 8px);margin-left:var(--mat-button-filled-icon-offset, -8px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-button-filled-icon-offset, -8px);margin-left:var(--mat-button-filled-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-filled-icon-offset, -8px);margin-left:var(--mat-button-filled-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-filled-icon-spacing, 8px);margin-left:var(--mat-button-filled-icon-offset, -8px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-button-filled-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-filled-state-layer-color, var(--mat-sys-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-filled-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-unelevated-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-filled-touch-target-size, 48px);display:var(--mat-button-filled-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mat-button-filled-label-text-color, var(--mat-sys-on-primary));background-color:var(--mat-button-filled-container-color, var(--mat-sys-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mat-button-filled-container-shape, var(--mat-sys-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);box-shadow:var(--mat-button-protected-container-elevation-shadow, var(--mat-sys-level1));height:var(--mat-button-protected-container-height, 40px);font-family:var(--mat-button-protected-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-protected-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-protected-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-protected-label-text-transform);font-weight:var(--mat-button-protected-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-protected-horizontal-padding, 24px)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-button-protected-icon-spacing, 8px);margin-left:var(--mat-button-protected-icon-offset, -8px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-button-protected-icon-offset, -8px);margin-left:var(--mat-button-protected-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-protected-icon-offset, -8px);margin-left:var(--mat-button-protected-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-protected-icon-spacing, 8px);margin-left:var(--mat-button-protected-icon-offset, -8px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-button-protected-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-protected-state-layer-color, var(--mat-sys-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-protected-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-raised-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-raised-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-protected-touch-target-size, 48px);display:var(--mat-button-protected-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-raised-button:not(:disabled){color:var(--mat-button-protected-label-text-color, var(--mat-sys-primary));background-color:var(--mat-button-protected-container-color, var(--mat-sys-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mat-button-protected-container-shape, var(--mat-sys-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mat-button-protected-hover-container-elevation-shadow, var(--mat-sys-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mat-button-protected-focus-container-elevation-shadow, var(--mat-sys-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mat-button-protected-pressed-container-elevation-shadow, var(--mat-sys-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-protected-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-protected-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mat-button-protected-disabled-container-elevation-shadow, var(--mat-sys-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-outlined-container-height, 40px);font-family:var(--mat-button-outlined-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-outlined-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-outlined-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-outlined-label-text-transform);font-weight:var(--mat-button-outlined-label-text-weight, var(--mat-sys-label-large-weight));border-radius:var(--mat-button-outlined-container-shape, var(--mat-sys-corner-full));border-width:var(--mat-button-outlined-outline-width, 1px);padding:0 var(--mat-button-outlined-horizontal-padding, 24px)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-button-outlined-icon-spacing, 8px);margin-left:var(--mat-button-outlined-icon-offset, -8px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-button-outlined-icon-offset, -8px);margin-left:var(--mat-button-outlined-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-outlined-icon-offset, -8px);margin-left:var(--mat-button-outlined-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-outlined-icon-spacing, 8px);margin-left:var(--mat-button-outlined-icon-offset, -8px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-button-outlined-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-outlined-state-layer-color, var(--mat-sys-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-outlined-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-outlined-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-outlined-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-outlined-touch-target-size, 48px);display:var(--mat-button-outlined-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-outlined-button:not(:disabled){color:var(--mat-button-outlined-label-text-color, var(--mat-sys-primary));border-color:var(--mat-button-outlined-outline-color, var(--mat-sys-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:var(--mat-button-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-tonal-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-tonal-container-height, 40px);font-family:var(--mat-button-tonal-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-tonal-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-tonal-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-tonal-label-text-transform);font-weight:var(--mat-button-tonal-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-tonal-horizontal-padding, 24px)}.mat-tonal-button:not(:disabled){color:var(--mat-button-tonal-label-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-button-tonal-container-color, var(--mat-sys-secondary-container))}.mat-tonal-button,.mat-tonal-button .mdc-button__ripple{border-radius:var(--mat-button-tonal-container-shape, var(--mat-sys-corner-full))}.mat-tonal-button[disabled],.mat-tonal-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-tonal-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-tonal-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-tonal-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-tonal-button>.mat-icon{margin-right:var(--mat-button-tonal-icon-spacing, 8px);margin-left:var(--mat-button-tonal-icon-offset, -8px)}[dir=rtl] .mat-tonal-button>.mat-icon{margin-right:var(--mat-button-tonal-icon-offset, -8px);margin-left:var(--mat-button-tonal-icon-spacing, 8px)}.mat-tonal-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-tonal-icon-offset, -8px);margin-left:var(--mat-button-tonal-icon-spacing, 8px)}[dir=rtl] .mat-tonal-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-tonal-icon-spacing, 8px);margin-left:var(--mat-button-tonal-icon-offset, -8px)}.mat-tonal-button .mat-ripple-element{background-color:var(--mat-button-tonal-ripple-color, color-mix(in srgb, var(--mat-sys-on-secondary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-tonal-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-tonal-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-tonal-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-tonal-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-tonal-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-tonal-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-tonal-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-tonal-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-tonal-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-tonal-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-tonal-touch-target-size, 48px);display:var(--mat-button-tonal-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button,.mat-tonal-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before,.mat-tonal-button .mat-mdc-button-ripple,.mat-tonal-button .mat-mdc-button-persistent-ripple,.mat-tonal-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-tonal-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before,.mat-tonal-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon,.mat-tonal-button .mdc-button__label,.mat-tonal-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-focus-indicator,.mat-mdc-unelevated-button .mat-focus-indicator,.mat-mdc-raised-button .mat-focus-indicator,.mat-mdc-outlined-button .mat-focus-indicator,.mat-tonal-button .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit}.mat-mdc-button:focus>.mat-focus-indicator::before,.mat-mdc-unelevated-button:focus>.mat-focus-indicator::before,.mat-mdc-raised-button:focus>.mat-focus-indicator::before,.mat-mdc-outlined-button:focus>.mat-focus-indicator::before,.mat-tonal-button:focus>.mat-focus-indicator::before{content:\\\"\\\";border-radius:inherit}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable,.mat-tonal-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon,.mat-tonal-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-focus-indicator::before,.mat-tonal-button .mat-focus-indicator::before,.mat-mdc-raised-button .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}\\n\", \"@media(forced-colors: active){.mat-mdc-button:not(.mdc-button--outlined),.mat-mdc-unelevated-button:not(.mdc-button--outlined),.mat-mdc-raised-button:not(.mdc-button--outlined),.mat-mdc-outlined-button:not(.mdc-button--outlined),.mat-mdc-button-base.mat-tonal-button,.mat-mdc-icon-button.mat-mdc-icon-button,.mat-mdc-outlined-button .mdc-button__ripple{outline:solid 1px}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatButton, decorators: [{\n            type: Component,\n            args: [{ selector: `\n    button[matButton], a[matButton], button[mat-button], button[mat-raised-button],\n    button[mat-flat-button], button[mat-stroked-button], a[mat-button], a[mat-raised-button],\n    a[mat-flat-button], a[mat-stroked-button]\n  `, host: {\n                        'class': 'mdc-button',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-button-base{text-decoration:none}.mat-mdc-button-base .mat-icon{min-height:fit-content;flex-shrink:0}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-button-text-horizontal-padding, 12px);height:var(--mat-button-text-container-height, 40px);font-family:var(--mat-button-text-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-text-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-text-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-text-label-text-transform);font-weight:var(--mat-button-text-label-text-weight, var(--mat-sys-label-large-weight))}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mat-button-text-container-shape, var(--mat-sys-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mat-button-text-label-text-color, var(--mat-sys-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-text-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-button-text-with-icon-horizontal-padding, 16px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-button-text-icon-spacing, 8px);margin-left:var(--mat-button-text-icon-offset, -4px)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-button-text-icon-offset, -4px);margin-left:var(--mat-button-text-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-text-icon-offset, -4px);margin-left:var(--mat-button-text-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-text-icon-spacing, 8px);margin-left:var(--mat-button-text-icon-offset, -4px)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-button-text-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-text-state-layer-color, var(--mat-sys-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-text-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-text-touch-target-size, 48px);display:var(--mat-button-text-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-filled-container-height, 40px);font-family:var(--mat-button-filled-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-filled-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-filled-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-filled-label-text-transform);font-weight:var(--mat-button-filled-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-filled-horizontal-padding, 24px)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-button-filled-icon-spacing, 8px);margin-left:var(--mat-button-filled-icon-offset, -8px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-button-filled-icon-offset, -8px);margin-left:var(--mat-button-filled-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-filled-icon-offset, -8px);margin-left:var(--mat-button-filled-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-filled-icon-spacing, 8px);margin-left:var(--mat-button-filled-icon-offset, -8px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-button-filled-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-filled-state-layer-color, var(--mat-sys-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-filled-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-unelevated-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-filled-touch-target-size, 48px);display:var(--mat-button-filled-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mat-button-filled-label-text-color, var(--mat-sys-on-primary));background-color:var(--mat-button-filled-container-color, var(--mat-sys-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mat-button-filled-container-shape, var(--mat-sys-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);box-shadow:var(--mat-button-protected-container-elevation-shadow, var(--mat-sys-level1));height:var(--mat-button-protected-container-height, 40px);font-family:var(--mat-button-protected-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-protected-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-protected-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-protected-label-text-transform);font-weight:var(--mat-button-protected-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-protected-horizontal-padding, 24px)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-button-protected-icon-spacing, 8px);margin-left:var(--mat-button-protected-icon-offset, -8px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-button-protected-icon-offset, -8px);margin-left:var(--mat-button-protected-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-protected-icon-offset, -8px);margin-left:var(--mat-button-protected-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-protected-icon-spacing, 8px);margin-left:var(--mat-button-protected-icon-offset, -8px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-button-protected-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-protected-state-layer-color, var(--mat-sys-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-protected-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-raised-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-raised-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-protected-touch-target-size, 48px);display:var(--mat-button-protected-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-raised-button:not(:disabled){color:var(--mat-button-protected-label-text-color, var(--mat-sys-primary));background-color:var(--mat-button-protected-container-color, var(--mat-sys-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mat-button-protected-container-shape, var(--mat-sys-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mat-button-protected-hover-container-elevation-shadow, var(--mat-sys-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mat-button-protected-focus-container-elevation-shadow, var(--mat-sys-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mat-button-protected-pressed-container-elevation-shadow, var(--mat-sys-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-protected-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-protected-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mat-button-protected-disabled-container-elevation-shadow, var(--mat-sys-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-outlined-container-height, 40px);font-family:var(--mat-button-outlined-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-outlined-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-outlined-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-outlined-label-text-transform);font-weight:var(--mat-button-outlined-label-text-weight, var(--mat-sys-label-large-weight));border-radius:var(--mat-button-outlined-container-shape, var(--mat-sys-corner-full));border-width:var(--mat-button-outlined-outline-width, 1px);padding:0 var(--mat-button-outlined-horizontal-padding, 24px)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-button-outlined-icon-spacing, 8px);margin-left:var(--mat-button-outlined-icon-offset, -8px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-button-outlined-icon-offset, -8px);margin-left:var(--mat-button-outlined-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-outlined-icon-offset, -8px);margin-left:var(--mat-button-outlined-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-outlined-icon-spacing, 8px);margin-left:var(--mat-button-outlined-icon-offset, -8px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-button-outlined-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-outlined-state-layer-color, var(--mat-sys-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-outlined-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-outlined-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-outlined-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-outlined-touch-target-size, 48px);display:var(--mat-button-outlined-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-outlined-button:not(:disabled){color:var(--mat-button-outlined-label-text-color, var(--mat-sys-primary));border-color:var(--mat-button-outlined-outline-color, var(--mat-sys-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:var(--mat-button-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-tonal-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-tonal-container-height, 40px);font-family:var(--mat-button-tonal-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-tonal-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-tonal-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-tonal-label-text-transform);font-weight:var(--mat-button-tonal-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-tonal-horizontal-padding, 24px)}.mat-tonal-button:not(:disabled){color:var(--mat-button-tonal-label-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-button-tonal-container-color, var(--mat-sys-secondary-container))}.mat-tonal-button,.mat-tonal-button .mdc-button__ripple{border-radius:var(--mat-button-tonal-container-shape, var(--mat-sys-corner-full))}.mat-tonal-button[disabled],.mat-tonal-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-tonal-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-tonal-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-tonal-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-tonal-button>.mat-icon{margin-right:var(--mat-button-tonal-icon-spacing, 8px);margin-left:var(--mat-button-tonal-icon-offset, -8px)}[dir=rtl] .mat-tonal-button>.mat-icon{margin-right:var(--mat-button-tonal-icon-offset, -8px);margin-left:var(--mat-button-tonal-icon-spacing, 8px)}.mat-tonal-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-tonal-icon-offset, -8px);margin-left:var(--mat-button-tonal-icon-spacing, 8px)}[dir=rtl] .mat-tonal-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-tonal-icon-spacing, 8px);margin-left:var(--mat-button-tonal-icon-offset, -8px)}.mat-tonal-button .mat-ripple-element{background-color:var(--mat-button-tonal-ripple-color, color-mix(in srgb, var(--mat-sys-on-secondary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-tonal-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-tonal-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-tonal-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-tonal-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-tonal-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-tonal-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-tonal-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-tonal-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-tonal-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-tonal-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-button-tonal-touch-target-size, 48px);display:var(--mat-button-tonal-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button,.mat-tonal-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before,.mat-tonal-button .mat-mdc-button-ripple,.mat-tonal-button .mat-mdc-button-persistent-ripple,.mat-tonal-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-tonal-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before,.mat-tonal-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon,.mat-tonal-button .mdc-button__label,.mat-tonal-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-focus-indicator,.mat-mdc-unelevated-button .mat-focus-indicator,.mat-mdc-raised-button .mat-focus-indicator,.mat-mdc-outlined-button .mat-focus-indicator,.mat-tonal-button .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit}.mat-mdc-button:focus>.mat-focus-indicator::before,.mat-mdc-unelevated-button:focus>.mat-focus-indicator::before,.mat-mdc-raised-button:focus>.mat-focus-indicator::before,.mat-mdc-outlined-button:focus>.mat-focus-indicator::before,.mat-tonal-button:focus>.mat-focus-indicator::before{content:\\\"\\\";border-radius:inherit}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable,.mat-tonal-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon,.mat-tonal-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-focus-indicator::before,.mat-tonal-button .mat-focus-indicator::before,.mat-mdc-raised-button .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}\\n\", \"@media(forced-colors: active){.mat-mdc-button:not(.mdc-button--outlined),.mat-mdc-unelevated-button:not(.mdc-button--outlined),.mat-mdc-raised-button:not(.mdc-button--outlined),.mat-mdc-outlined-button:not(.mdc-button--outlined),.mat-mdc-button-base.mat-tonal-button,.mat-mdc-icon-button.mat-mdc-icon-button,.mat-mdc-outlined-button .mdc-button__ripple{outline:solid 1px}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { appearance: [{\n                type: Input,\n                args: ['matButton']\n            }] } });\n/** Infers the button's appearance from its static attributes. */\nfunction _inferAppearance(button) {\n    if (button.hasAttribute('mat-raised-button')) {\n        return 'elevated';\n    }\n    if (button.hasAttribute('mat-stroked-button')) {\n        return 'outlined';\n    }\n    if (button.hasAttribute('mat-flat-button')) {\n        return 'filled';\n    }\n    if (button.hasAttribute('mat-button')) {\n        return 'text';\n    }\n    return null;\n}\n// tslint:disable:variable-name\n/**\n * Material Design button component for anchor elements. Anchor elements are used to provide\n * links for the user to navigate across different routes or pages.\n * See https://m3.material.io/components/buttons/overview\n */\nconst MatAnchor = MatButton;\n\n/** Injection token to be used to override the default options for FAB. */\nconst MAT_FAB_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-fab-default-options', {\n    providedIn: 'root',\n    factory: MAT_FAB_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_FAB_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        // The FAB by default has its color set to accent.\n        color: 'accent',\n    };\n}\n// Default FAB configuration.\nconst defaults = MAT_FAB_DEFAULT_OPTIONS_FACTORY();\n/**\n * Material Design floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://m3.material.io/components/floating-action-button/overview\n *\n * The `MatFabButton` class has two appearances: normal and extended.\n */\nclass MatFabButton extends MatButtonBase {\n    _options = inject(MAT_FAB_DEFAULT_OPTIONS, { optional: true });\n    _isFab = true;\n    extended;\n    constructor() {\n        super();\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFabButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatFabButton, isStandalone: true, selector: \"button[mat-fab], a[mat-fab], button[matFab], a[matFab]\", inputs: { extended: [\"extended\", \"extended\", booleanAttribute] }, host: { properties: { \"class.mdc-fab--extended\": \"extended\", \"class.mat-mdc-extended-fab\": \"extended\" }, classAttribute: \"mdc-fab mat-mdc-fab-base mat-mdc-fab\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mat-fab-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-container-shape, var(--mat-sys-corner-large));color:var(--mat-fab-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:hover{box-shadow:var(--mat-fab-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-fab:focus{box-shadow:var(--mat-fab-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mat-fab-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-fab-touch-target-size, 48px);display:var(--mat-fab-touch-target-display, block);left:50%;width:var(--mat-fab-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mat-fab-small-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-small-container-shape, var(--mat-sys-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-small-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:hover{box-shadow:var(--mat-fab-small-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mat-fab-small-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mat-fab-small-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-small-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-fab-small-touch-target-size, 48px);display:var(--mat-fab-small-touch-target-display);left:50%;width:var(--mat-fab-small-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-mini-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mat-fab-extended-container-elevation-shadow, var(--mat-sys-level3));height:var(--mat-fab-extended-container-height, 56px);border-radius:var(--mat-fab-extended-container-shape, var(--mat-sys-corner-large));font-family:var(--mat-fab-extended-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-fab-extended-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-fab-extended-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-fab-extended-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mat-fab-extended-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mat-fab-extended-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mat-fab-extended-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFabButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-fab], a[mat-fab], button[matFab], a[matFab]`, host: {\n                        'class': 'mdc-fab mat-mdc-fab-base mat-mdc-fab',\n                        '[class.mdc-fab--extended]': 'extended',\n                        '[class.mat-mdc-extended-fab]': 'extended',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mat-fab-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-container-shape, var(--mat-sys-corner-large));color:var(--mat-fab-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:hover{box-shadow:var(--mat-fab-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-fab:focus{box-shadow:var(--mat-fab-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mat-fab-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-fab-touch-target-size, 48px);display:var(--mat-fab-touch-target-display, block);left:50%;width:var(--mat-fab-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mat-fab-small-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-small-container-shape, var(--mat-sys-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-small-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:hover{box-shadow:var(--mat-fab-small-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mat-fab-small-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mat-fab-small-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-small-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-fab-small-touch-target-size, 48px);display:var(--mat-fab-small-touch-target-display);left:50%;width:var(--mat-fab-small-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-mini-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mat-fab-extended-container-elevation-shadow, var(--mat-sys-level3));height:var(--mat-fab-extended-container-height, 56px);border-radius:var(--mat-fab-extended-container-shape, var(--mat-sys-corner-large));font-family:var(--mat-fab-extended-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-fab-extended-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-fab-extended-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-fab-extended-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mat-fab-extended-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mat-fab-extended-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mat-fab-extended-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { extended: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/**\n * Material Design mini floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://m3.material.io/components/floating-action-button/overview\n */\nclass MatMiniFabButton extends MatButtonBase {\n    _options = inject(MAT_FAB_DEFAULT_OPTIONS, { optional: true });\n    _isFab = true;\n    constructor() {\n        super();\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatMiniFabButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatMiniFabButton, isStandalone: true, selector: \"button[mat-mini-fab], a[mat-mini-fab], button[matMiniFab], a[matMiniFab]\", host: { classAttribute: \"mdc-fab mat-mdc-fab-base mdc-fab--mini mat-mdc-mini-fab\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mat-fab-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-container-shape, var(--mat-sys-corner-large));color:var(--mat-fab-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:hover{box-shadow:var(--mat-fab-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-fab:focus{box-shadow:var(--mat-fab-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mat-fab-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-fab-touch-target-size, 48px);display:var(--mat-fab-touch-target-display, block);left:50%;width:var(--mat-fab-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mat-fab-small-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-small-container-shape, var(--mat-sys-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-small-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:hover{box-shadow:var(--mat-fab-small-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mat-fab-small-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mat-fab-small-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-small-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-fab-small-touch-target-size, 48px);display:var(--mat-fab-small-touch-target-display);left:50%;width:var(--mat-fab-small-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-mini-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mat-fab-extended-container-elevation-shadow, var(--mat-sys-level3));height:var(--mat-fab-extended-container-height, 56px);border-radius:var(--mat-fab-extended-container-shape, var(--mat-sys-corner-large));font-family:var(--mat-fab-extended-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-fab-extended-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-fab-extended-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-fab-extended-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mat-fab-extended-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mat-fab-extended-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mat-fab-extended-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatMiniFabButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-mini-fab], a[mat-mini-fab], button[matMiniFab], a[matMiniFab]`, host: {\n                        'class': 'mdc-fab mat-mdc-fab-base mdc-fab--mini mat-mdc-mini-fab',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mat-fab-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-container-shape, var(--mat-sys-corner-large));color:var(--mat-fab-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:hover{box-shadow:var(--mat-fab-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-fab:focus{box-shadow:var(--mat-fab-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mat-fab-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-fab-touch-target-size, 48px);display:var(--mat-fab-touch-target-display, block);left:50%;width:var(--mat-fab-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mat-fab-small-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-small-container-shape, var(--mat-sys-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-small-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:hover{box-shadow:var(--mat-fab-small-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mat-fab-small-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mat-fab-small-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-small-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:var(--mat-fab-small-touch-target-size, 48px);display:var(--mat-fab-small-touch-target-display);left:50%;width:var(--mat-fab-small-touch-target-size, 48px);transform:translate(-50%, -50%)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-mini-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mat-fab-extended-container-elevation-shadow, var(--mat-sys-level3));height:var(--mat-fab-extended-container-height, 56px);border-radius:var(--mat-fab-extended-container-shape, var(--mat-sys-corner-large));font-family:var(--mat-fab-extended-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-fab-extended-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-fab-extended-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-fab-extended-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mat-fab-extended-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mat-fab-extended-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mat-fab-extended-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\\n\"] }]\n        }], ctorParameters: () => [] });\n// tslint:disable:variable-name\n/**\n * Material Design floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://m3.material.io/components/floating-action-button/overview\n *\n * The `MatFabAnchor` class has two appearances: normal and extended.\n */\nconst MatFabAnchor = MatFabButton;\n/**\n * Material Design mini floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://m3.material.io/components/floating-action-button/overview\n */\nconst MatMiniFabAnchor = MatMiniFabButton;\n\nclass MatButtonModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatButtonModule, imports: [MatCommonModule,\n            MatRippleModule,\n            MatButton,\n            MatMiniFabButton,\n            MatIconButton,\n            MatFabButton], exports: [MatCommonModule, MatButton, MatMiniFabButton, MatIconButton, MatFabButton] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatButtonModule, imports: [MatCommonModule,\n            MatRippleModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        MatRippleModule,\n                        MatButton,\n                        MatMiniFabButton,\n                        MatIconButton,\n                        MatFabButton,\n                    ],\n                    exports: [MatCommonModule, MatButton, MatMiniFabButton, MatIconButton, MatFabButton],\n                }]\n        }] });\n\nexport { MAT_FAB_DEFAULT_OPTIONS, MAT_FAB_DEFAULT_OPTIONS_FACTORY, MatAnchor, MatButton, MatButtonModule, MatFabAnchor, MatFabButton, MatIconButton, MatMiniFabAnchor, MatMiniFabButton };\n\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nclass _MatInternalFormField {\n    /** Position of the label relative to the content. */\n    labelPosition;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _MatInternalFormField, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: _MatInternalFormField, isStandalone: true, selector: \"div[mat-internal-form-field]\", inputs: { labelPosition: \"labelPosition\" }, host: { properties: { \"class.mdc-form-field--align-end\": \"labelPosition === \\\"before\\\"\" }, classAttribute: \"mdc-form-field mat-internal-form-field\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _MatInternalFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'div[mat-internal-form-field]', template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mdc-form-field mat-internal-form-field',\n                        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"',\n                    }, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"] }]\n        }], propDecorators: { labelPosition: [{\n                type: Input,\n                args: [{ required: true }]\n            }] } });\n\nexport { _MatInternalFormField };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { FocusMonitor, _IdGenerator } from '@angular/cdk/a11y';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _animationsDisabled } from './animation.mjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { MatRipple } from './ripple.mjs';\nimport { _MatInternalFormField } from './internal-form-field.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false, hideIcon: false, disabledInteractive: false }),\n});\n\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n    source;\n    checked;\n    constructor(\n    /** The source slide toggle of the event. */\n    source, \n    /** The new `checked` value of the slide toggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nclass MatSlideToggle {\n    _elementRef = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    defaults = inject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS);\n    _onChange = (_) => { };\n    _onTouched = () => { };\n    _validatorOnChange = () => { };\n    _uniqueId;\n    _checked = false;\n    _createChangeEvent(isChecked) {\n        return new MatSlideToggleChange(this, isChecked);\n    }\n    /** Unique ID for the label element. */\n    _labelId;\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n        return `${this.id || this._uniqueId}-button`;\n    }\n    /** Reference to the MDC switch element. */\n    _switchElement;\n    /** Focuses the slide-toggle. */\n    focus() {\n        this._switchElement.nativeElement.focus();\n    }\n    /** Whether noop animations are enabled. */\n    _noopAnimations = _animationsDisabled();\n    /** Whether the slide toggle is currently focused. */\n    _focused;\n    /** Name value will be applied to the input element if present. */\n    name = null;\n    /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n    id;\n    /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n    labelPosition = 'after';\n    /** Used to set the aria-label attribute on the underlying input element. */\n    ariaLabel = null;\n    /** Used to set the aria-labelledby attribute on the underlying input element. */\n    ariaLabelledby = null;\n    /** Used to set the aria-describedby attribute on the underlying input element. */\n    ariaDescribedby;\n    /** Whether the slide-toggle is required. */\n    required;\n    // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n    // the lack of type checking previously and assigning random strings.\n    /**\n     * Theme color of the slide toggle. This API is supported in M2 themes only,\n     * it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/slide-toggle/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the slide toggle is disabled. */\n    disabled = false;\n    /** Whether the slide toggle has a ripple. */\n    disableRipple = false;\n    /** Tabindex of slide toggle. */\n    tabIndex = 0;\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether to hide the icon inside of the slide toggle. */\n    hideIcon;\n    /** Whether the slide toggle should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** An event will be dispatched each time the slide-toggle changes its value. */\n    change = new EventEmitter();\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     */\n    toggleChange = new EventEmitter();\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        const defaults = this.defaults;\n        this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n        this.color = defaults.color || 'accent';\n        this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-slide-toggle-');\n        this.hideIcon = defaults.hideIcon ?? false;\n        this.disabledInteractive = defaults.disabledInteractive ?? false;\n        this._labelId = this._uniqueId + '-label';\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._focused = true;\n                this._changeDetectorRef.markForCheck();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._focused = false;\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes['required']) {\n            this._validatorOnChange();\n        }\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of Validator. */\n    validate(control) {\n        return this.required && control.value !== true ? { 'required': true } : null;\n    }\n    /** Implemented as a part of Validator. */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggleChange.emit();\n            if (!this.defaults.disableToggleValue) {\n                this.checked = !this.checked;\n                this._onChange(this.checked);\n                this.change.emit(new MatSlideToggleChange(this, this.checked));\n            }\n        }\n    }\n    _getAriaLabelledBy() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Even though we have a `label` element with a `for` pointing to the button, we need the\n        // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n        return this.ariaLabel ? null : this._labelId;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSlideToggle, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatSlideToggle, isStandalone: true, selector: \"mat-slide-toggle\", inputs: { name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: [\"required\", \"required\", booleanAttribute], color: \"color\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], checked: [\"checked\", \"checked\", booleanAttribute], hideIcon: [\"hideIcon\", \"hideIcon\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.name\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-mdc-slide-toggle-focused\": \"_focused\", \"class.mat-mdc-slide-toggle-checked\": \"checked\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" }, classAttribute: \"mat-mdc-slide-toggle\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => MatSlideToggle),\n                multi: true,\n            },\n            {\n                provide: NG_VALIDATORS,\n                useExisting: MatSlideToggle,\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"_switchElement\", first: true, predicate: [\"switch\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesOnChanges: true, ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [class.mat-mdc-slide-toggle-disabled-interactive]=\\\"disabledInteractive\\\"\\n    [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled && !disabledInteractive\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mat-mdc-slide-toggle-touch-target\\\"></div>\\n    <span class=\\\"mdc-switch__track\\\"></span>\\n    <span class=\\\"mdc-switch__handle-track\\\">\\n      <span class=\\\"mdc-switch__handle\\\">\\n        <span class=\\\"mdc-switch__shadow\\\">\\n          <span class=\\\"mdc-elevation-overlay\\\"></span>\\n        </span>\\n        <span class=\\\"mdc-switch__ripple\\\">\\n          <span class=\\\"mat-mdc-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></span>\\n        </span>\\n        @if (!hideIcon) {\\n          <span class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </span>\\n        }\\n      </span>\\n    </span>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mat-slide-toggle-track-width, 52px)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mat-slide-toggle-track-height, 32px);border-radius:var(--mat-slide-toggle-track-shape, var(--mat-sys-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mat-slide-toggle-disabled-track-opacity, 0.12)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-slide-toggle-track-outline-width, 2px);border-color:var(--mat-slide-toggle-track-outline-color, var(--mat-sys-outline))}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-slide-toggle-selected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-selected-track-outline-color, transparent)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-slide-toggle-disabled-unselected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-disabled-unselected-track-outline-color, var(--mat-sys-on-surface))}@media(forced-colors: active){.mdc-switch__track{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mat-slide-toggle-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-hover-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-focus-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-pressed-track-color, var(--mat-sys-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mat-slide-toggle-disabled-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mat-slide-toggle-selected-track-color, var(--mat-sys-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-hover-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-focus-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-pressed-track-color, var(--mat-sys-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mat-slide-toggle-disabled-selected-track-color, var(--mat-sys-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mat-slide-toggle-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mat-slide-toggle-handle-width);height:var(--mat-slide-toggle-handle-height);border-radius:var(--mat-slide-toggle-handle-shape, var(--mat-sys-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-slide-toggle-unselected-handle-size, 16px);height:var(--mat-slide-toggle-unselected-handle-size, 16px);margin:var(--mat-slide-toggle-unselected-handle-horizontal-margin, 0 8px)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-unselected-with-icon-handle-horizontal-margin, 0 4px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-slide-toggle-selected-handle-size, 24px);height:var(--mat-slide-toggle-selected-handle-size, 24px);margin:var(--mat-slide-toggle-selected-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-selected-with-icon-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-slide-toggle-with-icon-handle-size, 24px);height:var(--mat-slide-toggle-with-icon-handle-size, 24px)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-slide-toggle-pressed-handle-size, 28px);height:var(--mat-slide-toggle-pressed-handle-size, 28px)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-selected-pressed-handle-horizontal-margin, 0 22px)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-unselected-pressed-handle-horizontal-margin, 0 2px)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-selected-handle-opacity, 1)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-unselected-handle-opacity, 0.38)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media(forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-handle-color, var(--mat-sys-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-hover-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-focus-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-pressed-handle-color, var(--mat-sys-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-selected-handle-color, var(--mat-sys-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-handle-color, var(--mat-sys-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-hover-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-focus-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-pressed-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-unselected-handle-color, var(--mat-sys-on-surface))}.mdc-switch__handle::before{background:var(--mat-slide-toggle-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mat-slide-toggle-state-layer-size, 40px);height:var(--mat-slide-toggle-state-layer-size, 40px)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-pressed-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-hover-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-focus-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-pressed-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1;transform:translateZ(0)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-unselected-icon-opacity, 0.38)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-selected-icon-opacity, 0.38)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mat-slide-toggle-unselected-icon-size, 16px);height:var(--mat-slide-toggle-unselected-icon-size, 16px);fill:var(--mat-slide-toggle-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mat-slide-toggle-selected-icon-size, 16px);height:var(--mat-slide-toggle-selected-icon-size, 16px);fill:var(--mat-slide-toggle-selected-icon-color, var(--mat-sys-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-selected-icon-color, var(--mat-sys-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-slide-toggle-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-slide-toggle-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-slide-toggle-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-slide-toggle-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-slide-toggle-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-slide-toggle-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mat-slide-toggle-disabled-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-slide-toggle-touch-target{position:absolute;top:50%;left:50%;height:var(--mat-slide-toggle-touch-target-size, 48px);width:100%;transform:translate(-50%, -50%);display:var(--mat-slide-toggle-touch-target-display, block)}[dir=rtl] .mat-mdc-slide-toggle-touch-target{left:auto;right:50%;transform:translate(50%, -50%)}\\n\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', host: {\n                        'class': 'mat-mdc-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.name]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-mdc-slide-toggle-focused]': '_focused',\n                        '[class.mat-mdc-slide-toggle-checked]': 'checked',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                    }, exportAs: 'matSlideToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MatSlideToggle),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: MatSlideToggle,\n                            multi: true,\n                        },\n                    ], imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [class.mat-mdc-slide-toggle-disabled-interactive]=\\\"disabledInteractive\\\"\\n    [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled && !disabledInteractive\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mat-mdc-slide-toggle-touch-target\\\"></div>\\n    <span class=\\\"mdc-switch__track\\\"></span>\\n    <span class=\\\"mdc-switch__handle-track\\\">\\n      <span class=\\\"mdc-switch__handle\\\">\\n        <span class=\\\"mdc-switch__shadow\\\">\\n          <span class=\\\"mdc-elevation-overlay\\\"></span>\\n        </span>\\n        <span class=\\\"mdc-switch__ripple\\\">\\n          <span class=\\\"mat-mdc-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></span>\\n        </span>\\n        @if (!hideIcon) {\\n          <span class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </span>\\n        }\\n      </span>\\n    </span>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mat-slide-toggle-track-width, 52px)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mat-slide-toggle-track-height, 32px);border-radius:var(--mat-slide-toggle-track-shape, var(--mat-sys-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mat-slide-toggle-disabled-track-opacity, 0.12)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-slide-toggle-track-outline-width, 2px);border-color:var(--mat-slide-toggle-track-outline-color, var(--mat-sys-outline))}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-slide-toggle-selected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-selected-track-outline-color, transparent)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-slide-toggle-disabled-unselected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-disabled-unselected-track-outline-color, var(--mat-sys-on-surface))}@media(forced-colors: active){.mdc-switch__track{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mat-slide-toggle-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-hover-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-focus-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-pressed-track-color, var(--mat-sys-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mat-slide-toggle-disabled-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mat-slide-toggle-selected-track-color, var(--mat-sys-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-hover-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-focus-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-pressed-track-color, var(--mat-sys-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mat-slide-toggle-disabled-selected-track-color, var(--mat-sys-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mat-slide-toggle-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mat-slide-toggle-handle-width);height:var(--mat-slide-toggle-handle-height);border-radius:var(--mat-slide-toggle-handle-shape, var(--mat-sys-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-slide-toggle-unselected-handle-size, 16px);height:var(--mat-slide-toggle-unselected-handle-size, 16px);margin:var(--mat-slide-toggle-unselected-handle-horizontal-margin, 0 8px)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-unselected-with-icon-handle-horizontal-margin, 0 4px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-slide-toggle-selected-handle-size, 24px);height:var(--mat-slide-toggle-selected-handle-size, 24px);margin:var(--mat-slide-toggle-selected-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-selected-with-icon-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-slide-toggle-with-icon-handle-size, 24px);height:var(--mat-slide-toggle-with-icon-handle-size, 24px)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-slide-toggle-pressed-handle-size, 28px);height:var(--mat-slide-toggle-pressed-handle-size, 28px)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-selected-pressed-handle-horizontal-margin, 0 22px)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-unselected-pressed-handle-horizontal-margin, 0 2px)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-selected-handle-opacity, 1)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-unselected-handle-opacity, 0.38)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media(forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-handle-color, var(--mat-sys-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-hover-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-focus-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-pressed-handle-color, var(--mat-sys-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-selected-handle-color, var(--mat-sys-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-handle-color, var(--mat-sys-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-hover-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-focus-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-pressed-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-unselected-handle-color, var(--mat-sys-on-surface))}.mdc-switch__handle::before{background:var(--mat-slide-toggle-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mat-slide-toggle-state-layer-size, 40px);height:var(--mat-slide-toggle-state-layer-size, 40px)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-pressed-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-hover-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-focus-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-pressed-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1;transform:translateZ(0)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-unselected-icon-opacity, 0.38)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-selected-icon-opacity, 0.38)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mat-slide-toggle-unselected-icon-size, 16px);height:var(--mat-slide-toggle-unselected-icon-size, 16px);fill:var(--mat-slide-toggle-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mat-slide-toggle-selected-icon-size, 16px);height:var(--mat-slide-toggle-selected-icon-size, 16px);fill:var(--mat-slide-toggle-selected-icon-color, var(--mat-sys-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-selected-icon-color, var(--mat-sys-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-slide-toggle-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-slide-toggle-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-slide-toggle-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-slide-toggle-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-slide-toggle-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-slide-toggle-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mat-slide-toggle-disabled-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-slide-toggle-touch-target{position:absolute;top:50%;left:50%;height:var(--mat-slide-toggle-touch-target-size, 48px);width:100%;transform:translate(-50%, -50%);display:var(--mat-slide-toggle-touch-target-display, block)}[dir=rtl] .mat-mdc-slide-toggle-touch-target{left:auto;right:50%;transform:translate(50%, -50%)}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _switchElement: [{\n                type: ViewChild,\n                args: ['switch']\n            }], name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], color: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? 0 : numberAttribute(value)) }]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideIcon: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }] } });\n\nclass MatSlideToggleModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSlideToggleModule, imports: [MatSlideToggle, MatCommonModule], exports: [MatSlideToggle, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSlideToggleModule, imports: [MatSlideToggle, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatSlideToggle, MatCommonModule],\n                    exports: [MatSlideToggle, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule };\n\n","import * as i0 from '@angular/core';\nimport { inject, NgZone, RendererFactory2, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = (e) => {\n    if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n        console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n    }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n    _box;\n    /** Stream that emits when the shared observer is destroyed. */\n    _destroyed = new Subject();\n    /** Stream of all events from the ResizeObserver. */\n    _resizeSubject = new Subject();\n    /** ResizeObserver used to observe element resize events. */\n    _resizeObserver;\n    /** A map of elements to streams of their resize events. */\n    _elementObservables = new Map();\n    constructor(\n    /** The box type to observe for resizes. */\n    _box) {\n        this._box = _box;\n        if (typeof ResizeObserver !== 'undefined') {\n            this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n        }\n    }\n    /**\n     * Gets a stream of resize events for the given element.\n     * @param target The element to observe.\n     * @return The stream of resize events for the element.\n     */\n    observe(target) {\n        if (!this._elementObservables.has(target)) {\n            this._elementObservables.set(target, new Observable(observer => {\n                const subscription = this._resizeSubject.subscribe(observer);\n                this._resizeObserver?.observe(target, { box: this._box });\n                return () => {\n                    this._resizeObserver?.unobserve(target);\n                    subscription.unsubscribe();\n                    this._elementObservables.delete(target);\n                };\n            }).pipe(filter(entries => entries.some(entry => entry.target === target)), \n            // Share a replay of the last event so that subsequent calls to observe the same element\n            // receive initial sizing info like the first one. Also enable ref counting so the\n            // element will be automatically unobserved when there are no more subscriptions.\n            shareReplay({ bufferSize: 1, refCount: true }), takeUntil(this._destroyed)));\n        }\n        return this._elementObservables.get(target);\n    }\n    /** Destroys this instance. */\n    destroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._resizeSubject.complete();\n        this._elementObservables.clear();\n    }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nclass SharedResizeObserver {\n    _cleanupErrorListener;\n    /** Map of box type to shared resize observer. */\n    _observers = new Map();\n    /** The Angular zone. */\n    _ngZone = inject(NgZone);\n    constructor() {\n        if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            this._ngZone.runOutsideAngular(() => {\n                const renderer = inject(RendererFactory2).createRenderer(null, null);\n                this._cleanupErrorListener = renderer.listen('window', 'error', loopLimitExceededErrorHandler);\n            });\n        }\n    }\n    ngOnDestroy() {\n        for (const [, observer] of this._observers) {\n            observer.destroy();\n        }\n        this._observers.clear();\n        this._cleanupErrorListener?.();\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n        const box = options?.box || 'content-box';\n        if (!this._observers.has(box)) {\n            this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n        }\n        return this._observers.get(box).observe(target);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: SharedResizeObserver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: SharedResizeObserver, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: SharedResizeObserver, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [] });\n\nexport { SharedResizeObserver };\n\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Input, ElementRef, NgZone, Renderer2, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ChangeDetectorRef, viewChild, computed, contentChild, signal, effect, afterRenderEffect, ContentChild, ContentChildren } from '@angular/core';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { startWith, map, pairwise, filter, takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { _animationsDisabled } from './animation.mjs';\n\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatLabel, isStandalone: true, selector: \"mat-label\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nclass MatError {\n    id = inject(_IdGenerator).getId('mat-mdc-error-');\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatError, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatError, isStandalone: true, selector: \"mat-error, [matError]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-form-field-error mat-mdc-form-field-bottom-align\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error, [matError]',\n                    host: {\n                        'class': 'mat-mdc-form-field-error mat-mdc-form-field-bottom-align',\n                        '[id]': 'id',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    /** Whether to align the hint label at the start or end of the line. */\n    align = 'start';\n    /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n    id = inject(_IdGenerator).getId('mat-mdc-hint-');\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatHint, isStandalone: true, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-mdc-form-field-hint-end\": \"align === \\\"end\\\"\", \"id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-mdc-form-field-hint mat-mdc-form-field-bottom-align\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-mdc-form-field-hint mat-mdc-form-field-bottom-align',\n                        '[class.mat-mdc-form-field-hint-end]': 'align === \"end\"',\n                        '[id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n    set _isTextSelector(value) {\n        this._isText = true;\n    }\n    _isText = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatPrefix, isStandalone: true, selector: \"[matPrefix], [matIconPrefix], [matTextPrefix]\", inputs: { _isTextSelector: [\"matTextPrefix\", \"_isTextSelector\"] }, providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix], [matIconPrefix], [matTextPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }], propDecorators: { _isTextSelector: [{\n                type: Input,\n                args: ['matTextPrefix']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n    set _isTextSelector(value) {\n        this._isText = true;\n    }\n    _isText = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatSuffix, isStandalone: true, selector: \"[matSuffix], [matIconSuffix], [matTextSuffix]\", inputs: { _isTextSelector: [\"matTextSuffix\", \"_isTextSelector\"] }, providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix], [matIconSuffix], [matTextSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }], propDecorators: { _isTextSelector: [{\n                type: Input,\n                args: ['matTextSuffix']\n            }] } });\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = new InjectionToken('FloatingLabelParent');\n/**\n * Internal directive that maintains a MDC floating label. This directive does not\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\n * including it just to measure the label width and toggle some classes.\n *\n * The use of a directive allows us to conditionally render a floating label in the\n * template without having to manually manage instantiation and destruction of the\n * floating label component based on.\n *\n * The component is responsible for setting up the floating label styles, measuring label\n * width for the outline notch, and providing inputs that can be used to toggle the\n * label's floating or required state.\n */\nclass MatFormFieldFloatingLabel {\n    _elementRef = inject(ElementRef);\n    /** Whether the label is floating. */\n    get floating() {\n        return this._floating;\n    }\n    set floating(value) {\n        this._floating = value;\n        if (this.monitorResize) {\n            this._handleResize();\n        }\n    }\n    _floating = false;\n    /** Whether to monitor for resize events on the floating label. */\n    get monitorResize() {\n        return this._monitorResize;\n    }\n    set monitorResize(value) {\n        this._monitorResize = value;\n        if (this._monitorResize) {\n            this._subscribeToResize();\n        }\n        else {\n            this._resizeSubscription.unsubscribe();\n        }\n    }\n    _monitorResize = false;\n    /** The shared ResizeObserver. */\n    _resizeObserver = inject(SharedResizeObserver);\n    /** The Angular zone. */\n    _ngZone = inject(NgZone);\n    /** The parent form-field. */\n    _parent = inject(FLOATING_LABEL_PARENT);\n    /** The current resize event subscription. */\n    _resizeSubscription = new Subscription();\n    constructor() { }\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Gets the width of the label. Used for the outline notch. */\n    getWidth() {\n        return estimateScrollWidth(this._elementRef.nativeElement);\n    }\n    /** Gets the HTML element for the floating label. */\n    get element() {\n        return this._elementRef.nativeElement;\n    }\n    /** Handles resize events from the ResizeObserver. */\n    _handleResize() {\n        // In the case where the label grows in size, the following sequence of events occurs:\n        // 1. The label grows by 1px triggering the ResizeObserver\n        // 2. The notch is expanded to accommodate the entire label\n        // 3. The label expands to its full width, triggering the ResizeObserver again\n        //\n        // This is expected, but If we allow this to all happen within the same macro task it causes an\n        // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n        // the next macro task.\n        setTimeout(() => this._parent._handleLabelResized());\n    }\n    /** Subscribes to resize events. */\n    _subscribeToResize() {\n        this._resizeSubscription.unsubscribe();\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeSubscription = this._resizeObserver\n                .observe(this._elementRef.nativeElement, { box: 'border-box' })\n                .subscribe(() => this._handleResize());\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldFloatingLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatFormFieldFloatingLabel, isStandalone: true, selector: \"label[matFormFieldFloatingLabel]\", inputs: { floating: \"floating\", monitorResize: \"monitorResize\" }, host: { properties: { \"class.mdc-floating-label--float-above\": \"floating\" }, classAttribute: \"mdc-floating-label mat-mdc-floating-label\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldFloatingLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'label[matFormFieldFloatingLabel]',\n                    host: {\n                        'class': 'mdc-floating-label mat-mdc-floating-label',\n                        '[class.mdc-floating-label--float-above]': 'floating',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { floating: [{\n                type: Input\n            }], monitorResize: [{\n                type: Input\n            }] } });\n/**\n * Estimates the scroll width of an element.\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\n */\nfunction estimateScrollWidth(element) {\n    // Check the offsetParent. If the element inherits display: none from any\n    // parent, the offsetParent property will be null (see\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n    // This check ensures we only clone the node when necessary.\n    const htmlEl = element;\n    if (htmlEl.offsetParent !== null) {\n        return htmlEl.scrollWidth;\n    }\n    const clone = htmlEl.cloneNode(true);\n    clone.style.setProperty('position', 'absolute');\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n    document.documentElement.appendChild(clone);\n    const scrollWidth = clone.scrollWidth;\n    clone.remove();\n    return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\n * directive allows us to conditionally render a line-ripple in the template without having\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\n *\n * The directive sets up the styles for the line-ripple and provides an API for activating\n * and deactivating the line-ripple.\n */\nclass MatFormFieldLineRipple {\n    _elementRef = inject(ElementRef);\n    _cleanupTransitionEnd;\n    constructor() {\n        const ngZone = inject(NgZone);\n        const renderer = inject(Renderer2);\n        ngZone.runOutsideAngular(() => {\n            this._cleanupTransitionEnd = renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionEnd);\n        });\n    }\n    activate() {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(DEACTIVATING_CLASS);\n        classList.add(ACTIVATE_CLASS);\n    }\n    deactivate() {\n        this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n    }\n    _handleTransitionEnd = (event) => {\n        const classList = this._elementRef.nativeElement.classList;\n        const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n        if (event.propertyName === 'opacity' && isDeactivating) {\n            classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n        }\n    };\n    ngOnDestroy() {\n        this._cleanupTransitionEnd();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldLineRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatFormFieldLineRipple, isStandalone: true, selector: \"div[matFormFieldLineRipple]\", host: { classAttribute: \"mdc-line-ripple\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldLineRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'div[matFormFieldLineRipple]',\n                    host: {\n                        'class': 'mdc-line-ripple',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Internal component that creates an instance of the MDC notched-outline component.\n *\n * The component sets up the HTML structure and styles for the notched-outline. It provides\n * inputs to toggle the notch state and width.\n */\nclass MatFormFieldNotchedOutline {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    /** Whether the notch should be opened. */\n    open = false;\n    _notch;\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        const label = element.querySelector('.mdc-floating-label');\n        if (label) {\n            element.classList.add('mdc-notched-outline--upgraded');\n            if (typeof requestAnimationFrame === 'function') {\n                label.style.transitionDuration = '0s';\n                this._ngZone.runOutsideAngular(() => {\n                    requestAnimationFrame(() => (label.style.transitionDuration = ''));\n                });\n            }\n        }\n        else {\n            element.classList.add('mdc-notched-outline--no-label');\n        }\n    }\n    _setNotchWidth(labelWidth) {\n        const notch = this._notch.nativeElement;\n        if (!this.open || !labelWidth) {\n            notch.style.width = '';\n        }\n        else {\n            const NOTCH_ELEMENT_PADDING = 8;\n            const NOTCH_ELEMENT_BORDER = 1;\n            notch.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n        }\n    }\n    _setMaxWidth(prefixAndSuffixWidth) {\n        // Set this only on the notch to avoid style recalculations in other parts of the form field.\n        this._notch.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldNotchedOutline, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatFormFieldNotchedOutline, isStandalone: true, selector: \"div[matFormFieldNotchedOutline]\", inputs: { open: [\"matFormFieldNotchedOutlineOpen\", \"open\"] }, host: { properties: { \"class.mdc-notched-outline--notched\": \"open\" }, classAttribute: \"mdc-notched-outline\" }, viewQueries: [{ propertyName: \"_notch\", first: true, predicate: [\"notch\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldNotchedOutline, decorators: [{\n            type: Component,\n            args: [{ selector: 'div[matFormFieldNotchedOutline]', host: {\n                        'class': 'mdc-notched-outline',\n                        // Besides updating the notch state through the MDC component, we toggle this class through\n                        // a host binding in order to ensure that the notched-outline renders correctly on the server.\n                        '[class.mdc-notched-outline--notched]': 'open',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\" }]\n        }], propDecorators: { open: [{\n                type: Input,\n                args: ['matFormFieldNotchedOutlineOpen']\n            }], _notch: [{\n                type: ViewChild,\n                args: ['notch']\n            }] } });\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n    /** The value of the control. */\n    value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     */\n    stateChanges;\n    /** The element ID for this control. */\n    id;\n    /** The placeholder for this control. */\n    placeholder;\n    /** Gets the AbstractControlDirective for this control. */\n    ngControl;\n    /** Whether the control is focused. */\n    focused;\n    /** Whether the control is empty. */\n    empty;\n    /** Whether the `MatFormField` label should try to float. */\n    shouldLabelFloat;\n    /** Whether the control is required. */\n    required;\n    /** Whether the control is disabled. */\n    disabled;\n    /** Whether the control is in an error state. */\n    errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     */\n    controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     */\n    autofilled;\n    /**\n     * Value of `aria-describedby` that should be merged with the described-by ids\n     * which are set by the form-field.\n     */\n    userAriaDescribedBy;\n    /**\n     * Whether to automatically assign the ID of the form field as the `for` attribute\n     * on the `<label>` inside the form field. Set this to true to prevent the form\n     * field from associating the label with non-native elements.\n     */\n    disableAutomaticLabeling;\n    /** Gets the list of element IDs that currently describe this control. */\n    describedByIds;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatFormFieldControl, isStandalone: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\n * Whether the label for form fields should by default float `always`,\n * `never`, or `auto`.\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\n * Default transform for docked floating labels in a MDC text-field. This value has been\n * extracted from the MDC text-field styles because we programmatically modify the docked\n * label transform, but do not want to accidentally discard the default label transform.\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _platform = inject(Platform);\n    _idGenerator = inject(_IdGenerator);\n    _ngZone = inject(NgZone);\n    _defaults = inject(MAT_FORM_FIELD_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _currentDirection;\n    _textField;\n    _iconPrefixContainer;\n    _textPrefixContainer;\n    _iconSuffixContainer;\n    _textSuffixContainer;\n    _floatingLabel;\n    _notchedOutline;\n    _lineRipple;\n    _iconPrefixContainerSignal = viewChild('iconPrefixContainer', ...(ngDevMode ? [{ debugName: \"_iconPrefixContainerSignal\" }] : []));\n    _textPrefixContainerSignal = viewChild('textPrefixContainer', ...(ngDevMode ? [{ debugName: \"_textPrefixContainerSignal\" }] : []));\n    _iconSuffixContainerSignal = viewChild('iconSuffixContainer', ...(ngDevMode ? [{ debugName: \"_iconSuffixContainerSignal\" }] : []));\n    _textSuffixContainerSignal = viewChild('textSuffixContainer', ...(ngDevMode ? [{ debugName: \"_textSuffixContainerSignal\" }] : []));\n    _prefixSuffixContainers = computed(() => {\n        return [\n            this._iconPrefixContainerSignal(),\n            this._textPrefixContainerSignal(),\n            this._iconSuffixContainerSignal(),\n            this._textSuffixContainerSignal(),\n        ]\n            .map(container => container?.nativeElement)\n            .filter(e => e !== undefined);\n    }, ...(ngDevMode ? [{ debugName: \"_prefixSuffixContainers\" }] : []));\n    _formFieldControl;\n    _prefixChildren;\n    _suffixChildren;\n    _errorChildren;\n    _hintChildren;\n    _labelChild = contentChild(MatLabel, ...(ngDevMode ? [{ debugName: \"_labelChild\" }] : []));\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    _hideRequiredMarker = false;\n    /**\n     * Theme color of the form field. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/form-field/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color = 'primary';\n    /** Whether the label should always float or float as the user types. */\n    get floatLabel() {\n        return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value;\n            // For backwards compatibility. Custom form field controls or directives might set\n            // the \"floatLabel\" input and expect the form field view to be updated automatically.\n            // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n            // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _floatLabel;\n    /** The form field appearance style. */\n    get appearance() {\n        return this._appearanceSignal();\n    }\n    set appearance(value) {\n        const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n                throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n            }\n        }\n        this._appearanceSignal.set(newAppearance);\n    }\n    _appearanceSignal = signal(DEFAULT_APPEARANCE, ...(ngDevMode ? [{ debugName: \"_appearanceSignal\" }] : []));\n    /**\n     * Whether the form field should reserve space for one line of hint/error text (default)\n     * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\n     * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\n     */\n    get subscriptSizing() {\n        return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    set subscriptSizing(value) {\n        this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    _subscriptSizing = null;\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    _hintLabel = '';\n    _hasIconPrefix = false;\n    _hasTextPrefix = false;\n    _hasIconSuffix = false;\n    _hasTextSuffix = false;\n    // Unique id for the internal form field label.\n    _labelId = this._idGenerator.getId('mat-mdc-form-field-label-');\n    // Unique id for the hint label.\n    _hintLabelId = this._idGenerator.getId('mat-mdc-hint-');\n    // Ids obtained from the error and hint fields\n    _describedByIds;\n    /** Gets the current form field control */\n    get _control() {\n        return this._explicitFormFieldControl || this._formFieldControl;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    _destroyed = new Subject();\n    _isFocused = null;\n    _explicitFormFieldControl;\n    _previousControl = null;\n    _previousControlValidatorFn = null;\n    _stateChanges;\n    _valueChanges;\n    _describedByChanges;\n    _outlineLabelOffsetResizeObserver = null;\n    _animationsDisabled = _animationsDisabled();\n    constructor() {\n        const defaults = this._defaults;\n        const dir = inject(Directionality);\n        if (defaults) {\n            if (defaults.appearance) {\n                this.appearance = defaults.appearance;\n            }\n            this._hideRequiredMarker = Boolean(defaults?.hideRequiredMarker);\n            if (defaults.color) {\n                this.color = defaults.color;\n            }\n        }\n        // We need this value inside a `afterRenderEffect`, however at the time of writing, reading the\n        // signal directly causes a memory leak (see https://github.com/angular/angular/issues/62980).\n        // TODO(crisbeto): clean this up once the framework issue is resolved.\n        effect(() => (this._currentDirection = dir.valueSignal()));\n        this._syncOutlineLabelOffset();\n    }\n    ngAfterViewInit() {\n        // Initial focus state sync. This happens rarely, but we want to account for\n        // it in case the form field control has \"focused\" set to true on init.\n        this._updateFocusState();\n        if (!this._animationsDisabled) {\n            this._ngZone.runOutsideAngular(() => {\n                // Enable animations after a certain amount of time so that they don't run on init.\n                setTimeout(() => {\n                    this._elementRef.nativeElement.classList.add('mat-form-field-animations-enabled');\n                }, 300);\n            });\n        }\n        // Because the above changes a value used in the template after it was checked, we need\n        // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n        this._changeDetectorRef.detectChanges();\n    }\n    ngAfterContentInit() {\n        this._assertFormFieldControl();\n        this._initializeSubscript();\n        this._initializePrefixAndSuffix();\n    }\n    ngAfterContentChecked() {\n        this._assertFormFieldControl();\n        // if form field was being used with an input in first place and then replaced by other\n        // component such as select.\n        if (this._control !== this._previousControl) {\n            this._initializeControl(this._previousControl);\n            // keep a reference for last validator we had.\n            if (this._control.ngControl && this._control.ngControl.control) {\n                this._previousControlValidatorFn = this._control.ngControl.control.validator;\n            }\n            this._previousControl = this._control;\n        }\n        // make sure the the control has been initialized.\n        if (this._control.ngControl && this._control.ngControl.control) {\n            // get the validators for current control.\n            const validatorFn = this._control.ngControl.control.validator;\n            // if our current validatorFn isn't equal to it might be we are CD behind, marking the\n            // component will allow us to catch up.\n            if (validatorFn !== this._previousControlValidatorFn) {\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._outlineLabelOffsetResizeObserver?.disconnect();\n        this._stateChanges?.unsubscribe();\n        this._valueChanges?.unsubscribe();\n        this._describedByChanges?.unsubscribe();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId = computed(() => (this._hasFloatingLabel() ? this._labelId : null), ...(ngDevMode ? [{ debugName: \"getLabelId\" }] : []));\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field\n     * should be positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._textField || this._elementRef;\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        // This is for backwards compatibility only. Consumers of the form field might use\n        // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n        // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n        // animation. This is different in MDC where the label always animates, so this method\n        // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n        // the floating label state without animations. The non-MDC implementation was inconsistent\n        // because it always animates if \"floatLabel\" is set away from \"always\".\n        // TODO(devversion): consider removing this method when releasing the MDC form field.\n        if (this._hasFloatingLabel()) {\n            this.floatLabel = 'always';\n        }\n    }\n    /** Initializes the registered form field control. */\n    _initializeControl(previousControl) {\n        const control = this._control;\n        const classPrefix = 'mat-mdc-form-field-type-';\n        if (previousControl) {\n            this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\n        }\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._stateChanges?.unsubscribe();\n        this._stateChanges = control.stateChanges.subscribe(() => {\n            this._updateFocusState();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Updating the `aria-describedby` touches the DOM. Only do it if it actually needs to change.\n        this._describedByChanges?.unsubscribe();\n        this._describedByChanges = control.stateChanges\n            .pipe(startWith([undefined, undefined]), map(() => [control.errorState, control.userAriaDescribedBy]), pairwise(), filter(([[prevErrorState, prevDescribedBy], [currentErrorState, currentDescribedBy]]) => {\n            return prevErrorState !== currentErrorState || prevDescribedBy !== currentDescribedBy;\n        }))\n            .subscribe(() => this._syncDescribedByIds());\n        this._valueChanges?.unsubscribe();\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            this._valueChanges = control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n    }\n    _checkPrefixAndSuffixTypes() {\n        this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n        this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n        this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n        this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n    }\n    /** Initializes the prefix and suffix containers. */\n    _initializePrefixAndSuffix() {\n        this._checkPrefixAndSuffixTypes();\n        // Mark the form field as dirty whenever the prefix or suffix children change. This\n        // is necessary because we conditionally display the prefix/suffix containers based\n        // on whether there is projected content.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._checkPrefixAndSuffixTypes();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /**\n     * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\n     * with the custom form field control. Also subscribes to hint and error changes in order\n     * to be able to validate and synchronize ids on change.\n     */\n    _initializeSubscript() {\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Initial mat-hint validation and subscript describedByIds sync.\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /** Throws an error if the form field's control is missing. */\n    _assertFormFieldControl() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    _updateFocusState() {\n        const controlFocused = this._control.focused;\n        // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n        // certain DOM events are emitted. This is not possible in our implementation of the\n        // form field because we support abstract form field controls which are not necessarily\n        // of type input, nor do we have a reference to a native form field control element. Instead\n        // we handle the focus by checking if the abstract form field control focused state changes.\n        if (controlFocused && !this._isFocused) {\n            this._isFocused = true;\n            this._lineRipple?.activate();\n        }\n        else if (!controlFocused && (this._isFocused || this._isFocused === null)) {\n            this._isFocused = false;\n            this._lineRipple?.deactivate();\n        }\n        this._elementRef.nativeElement.classList.toggle('mat-focused', controlFocused);\n        this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', controlFocused);\n    }\n    /**\n     * The floating label in the docked state needs to account for prefixes. The horizontal offset\n     * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\n     * form field is added to the DOM. This method sets up all subscriptions which are needed to\n     * trigger the label offset update.\n     */\n    _syncOutlineLabelOffset() {\n        afterRenderEffect({\n            earlyRead: () => {\n                if (this._appearanceSignal() !== 'outline') {\n                    this._outlineLabelOffsetResizeObserver?.disconnect();\n                    return null;\n                }\n                // Setup a resize observer to monitor changes to the size of the prefix / suffix and\n                // readjust the label offset.\n                if (globalThis.ResizeObserver) {\n                    this._outlineLabelOffsetResizeObserver ||= new globalThis.ResizeObserver(() => {\n                        this._writeOutlinedLabelStyles(this._getOutlinedLabelOffset());\n                    });\n                    for (const el of this._prefixSuffixContainers()) {\n                        this._outlineLabelOffsetResizeObserver.observe(el, { box: 'border-box' });\n                    }\n                }\n                return this._getOutlinedLabelOffset();\n            },\n            write: labelStyles => this._writeOutlinedLabelStyles(labelStyles()),\n        });\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always';\n    }\n    _hasOutline() {\n        return this.appearance === 'outline';\n    }\n    /**\n     * Whether the label should display in the infix. Labels in the outline appearance are\n     * displayed as part of the notched-outline and are horizontally offset to account for\n     * form field prefix content. This won't work in server side rendering since we cannot\n     * measure the width of the prefix container. To make the docked label appear as if the\n     * right offset has been calculated, we forcibly render the label inside the infix. Since\n     * the label is part of the infix, the label cannot overflow the prefix content.\n     */\n    _forceDisplayInfixLabel() {\n        return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel = computed(() => !!this._labelChild(), ...(ngDevMode ? [{ debugName: \"_hasFloatingLabel\" }] : []));\n    _shouldLabelFloat() {\n        if (!this._hasFloatingLabel()) {\n            return false;\n        }\n        return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n        const control = this._control ? this._control.ngControl : null;\n        return control && control[prop];\n    }\n    /** Gets the type of subscript message to render (error or hint). */\n    _getSubscriptMessageType() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Handle label resize events. */\n    _handleLabelResized() {\n        this._refreshOutlineNotchWidth();\n    }\n    /** Refreshes the width of the outline-notch, if present. */\n    _refreshOutlineNotchWidth() {\n        if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n            this._notchedOutline?._setNotchWidth(0);\n        }\n        else {\n            this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\n     * label specified set through the input is being considered as \"start\" aligned.\n     *\n     * This method is a noop if Angular runs in production mode.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getSubscriptMessageType() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            const existingDescribedBy = this._control.describedByIds;\n            let toAssign;\n            // In some cases there might be some `aria-describedby` IDs that were assigned directly,\n            // like by the `AriaDescriber` (see #30011). Attempt to preserve them by taking the previous\n            // attribute value and filtering out the IDs that came from the previous `setDescribedByIds`\n            // call. Note the `|| ids` here allows us to avoid duplicating IDs on the first render.\n            if (existingDescribedBy) {\n                const exclude = this._describedByIds || ids;\n                toAssign = ids.concat(existingDescribedBy.filter(id => id && !exclude.includes(id)));\n            }\n            else {\n                toAssign = ids;\n            }\n            this._control.setDescribedByIds(toAssign);\n            this._describedByIds = ids;\n        }\n    }\n    /**\n     * Calculates the horizontal offset of the label in the outline appearance. In the outline\n     * appearance, the notched-outline and label are not relative to the infix container because\n     * the outline intends to surround prefixes, suffixes and the infix. This means that the\n     * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\n     * horizontally offset the label by the width of the prefix container. The MDC text-field does\n     * not need to do this because they use a fixed width for prefixes. Hence, they can simply\n     * incorporate the horizontal offset into their default text-field styles.\n     */\n    _getOutlinedLabelOffset() {\n        if (!this._hasOutline() || !this._floatingLabel) {\n            return null;\n        }\n        // If no prefix is displayed, reset the outline label offset from potential\n        // previous label offset updates.\n        if (!this._iconPrefixContainer && !this._textPrefixContainer) {\n            return ['', null];\n        }\n        // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n        // the label offset update until the zone stabilizes.\n        if (!this._isAttachedToDom()) {\n            return null;\n        }\n        const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n        const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n        const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\n        const textSuffixContainer = this._textSuffixContainer?.nativeElement;\n        const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n        const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n        const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\n        const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\n        // If the directionality is RTL, the x-axis transform needs to be inverted. This\n        // is because `transformX` does not change based on the page directionality.\n        const negate = this._currentDirection === 'rtl' ? '-1' : '1';\n        const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n        const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n        const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n        // Update the translateX of the floating label to account for the prefix container,\n        // but allow the CSS to override this setting via a CSS variable when the label is\n        // floating.\n        const floatingLabelTransform = 'var(--mat-mdc-form-field-label-transform, ' +\n            `${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset}))`;\n        // Prevent the label from overlapping the suffix when in resting position.\n        const notchedOutlineWidth = iconPrefixContainerWidth +\n            textPrefixContainerWidth +\n            iconSuffixContainerWidth +\n            textSuffixContainerWidth;\n        return [floatingLabelTransform, notchedOutlineWidth];\n    }\n    /** Writes the styles produced by `_getOutlineLabelOffset` synchronously to the DOM. */\n    _writeOutlinedLabelStyles(styles) {\n        if (styles !== null) {\n            const [floatingLabelTransform, notchedOutlineWidth] = styles;\n            if (this._floatingLabel) {\n                this._floatingLabel.element.style.transform = floatingLabelTransform;\n            }\n            if (notchedOutlineWidth !== null) {\n                this._notchedOutline?._setMaxWidth(notchedOutlineWidth);\n            }\n        }\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDom() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormField, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatFormField, isStandalone: true, selector: \"mat-form-field\", inputs: { hideRequiredMarker: \"hideRequiredMarker\", color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", subscriptSizing: \"subscriptSizing\", hintLabel: \"hintLabel\" }, host: { properties: { \"class.mat-mdc-form-field-label-always-float\": \"_shouldAlwaysFloat()\", \"class.mat-mdc-form-field-has-icon-prefix\": \"_hasIconPrefix\", \"class.mat-mdc-form-field-has-icon-suffix\": \"_hasIconSuffix\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-hide-placeholder\": \"_hasFloatingLabel() && !_shouldLabelFloat()\", \"class.mat-primary\": \"color !== \\\"accent\\\" && color !== \\\"warn\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\" }, classAttribute: \"mat-mdc-form-field\" }, providers: [\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n            { provide: FLOATING_LABEL_PARENT, useExisting: MatFormField },\n        ], queries: [{ propertyName: \"_labelChild\", first: true, predicate: MatLabel, descendants: true, isSignal: true }, { propertyName: \"_formFieldControl\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: MatHint, descendants: true }], viewQueries: [{ propertyName: \"_iconPrefixContainerSignal\", first: true, predicate: [\"iconPrefixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textPrefixContainerSignal\", first: true, predicate: [\"textPrefixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_iconSuffixContainerSignal\", first: true, predicate: [\"iconSuffixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textSuffixContainerSignal\", first: true, predicate: [\"textSuffixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textField\", first: true, predicate: [\"textField\"], descendants: true }, { propertyName: \"_iconPrefixContainer\", first: true, predicate: [\"iconPrefixContainer\"], descendants: true }, { propertyName: \"_textPrefixContainer\", first: true, predicate: [\"textPrefixContainer\"], descendants: true }, { propertyName: \"_iconSuffixContainer\", first: true, predicate: [\"iconSuffixContainer\"], descendants: true }, { propertyName: \"_textSuffixContainer\", first: true, predicate: [\"textSuffixContainer\"], descendants: true }, { propertyName: \"_floatingLabel\", first: true, predicate: MatFormFieldFloatingLabel, descendants: true }, { propertyName: \"_notchedOutline\", first: true, predicate: MatFormFieldNotchedOutline, descendants: true }, { propertyName: \"_lineRipple\", first: true, predicate: MatFormFieldLineRipple, descendants: true }], exportAs: [\"matFormField\"], ngImport: i0, template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\", styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"], dependencies: [{ kind: \"directive\", type: MatFormFieldFloatingLabel, selector: \"label[matFormFieldFloatingLabel]\", inputs: [\"floating\", \"monitorResize\"] }, { kind: \"component\", type: MatFormFieldNotchedOutline, selector: \"div[matFormFieldNotchedOutline]\", inputs: [\"matFormFieldNotchedOutlineOpen\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: MatFormFieldLineRipple, selector: \"div[matFormFieldLineRipple]\" }, { kind: \"directive\", type: MatHint, selector: \"mat-hint\", inputs: [\"align\", \"id\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', host: {\n                        'class': 'mat-mdc-form-field',\n                        '[class.mat-mdc-form-field-label-always-float]': '_shouldAlwaysFloat()',\n                        '[class.mat-mdc-form-field-has-icon-prefix]': '_hasIconPrefix',\n                        '[class.mat-mdc-form-field-has-icon-suffix]': '_hasIconSuffix',\n                        // Note that these classes reuse the same names as the non-MDC version, because they can be\n                        // considered a public API since custom form controls may use them to style themselves.\n                        // See https://github.com/angular/components/pull/20502#discussion_r486124901.\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-hide-placeholder]': '_hasFloatingLabel() && !_shouldLabelFloat()',\n                        '[class.mat-primary]': 'color !== \"accent\" && color !== \"warn\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                        { provide: FLOATING_LABEL_PARENT, useExisting: MatFormField },\n                    ], imports: [\n                        MatFormFieldFloatingLabel,\n                        MatFormFieldNotchedOutline,\n                        NgTemplateOutlet,\n                        MatFormFieldLineRipple,\n                        MatHint,\n                    ], template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\", styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _textField: [{\n                type: ViewChild,\n                args: ['textField']\n            }], _iconPrefixContainer: [{\n                type: ViewChild,\n                args: ['iconPrefixContainer']\n            }], _textPrefixContainer: [{\n                type: ViewChild,\n                args: ['textPrefixContainer']\n            }], _iconSuffixContainer: [{\n                type: ViewChild,\n                args: ['iconSuffixContainer']\n            }], _textSuffixContainer: [{\n                type: ViewChild,\n                args: ['textSuffixContainer']\n            }], _floatingLabel: [{\n                type: ViewChild,\n                args: [MatFormFieldFloatingLabel]\n            }], _notchedOutline: [{\n                type: ViewChild,\n                args: [MatFormFieldNotchedOutline]\n            }], _lineRipple: [{\n                type: ViewChild,\n                args: [MatFormFieldLineRipple]\n            }], _formFieldControl: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [MatHint, { descendants: true }]\n            }], hideRequiredMarker: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], subscriptSizing: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }] } });\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatHint, MatLabel, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError };\n\n","import { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { MatFormField, MatLabel, MatError, MatHint, MatPrefix, MatSuffix } from './form-field2.mjs';\nimport { MatCommonModule } from './common-module.mjs';\n\nclass MatFormFieldModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldModule, imports: [MatCommonModule,\n            ObserversModule,\n            MatFormField,\n            MatLabel,\n            MatError,\n            MatHint,\n            MatPrefix,\n            MatSuffix], exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldModule, imports: [MatCommonModule,\n            ObserversModule,\n            MatFormField, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        ObserversModule,\n                        MatFormField,\n                        MatLabel,\n                        MatError,\n                        MatHint,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                    exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule],\n                }]\n        }] });\n\nexport { MatFormFieldModule };\n\n","export { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatHint, MatLabel, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError } from './form-field2.mjs';\nexport { MatFormFieldModule } from './form-field-module.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/platform';\nimport '@angular/common';\nimport '@angular/core';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport './animation.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/observers';\nimport './common-module.mjs';\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matFormFieldAnimations = {\n    // Represents:\n    // trigger('transitionMessages', [\n    //   // TODO(mmalerba): Use angular animations for label animation as well.\n    //   state('enter', style({opacity: 1, transform: 'translateY(0%)'})),\n    //   transition('void => enter', [\n    //     style({opacity: 0, transform: 'translateY(-5px)'}),\n    //     animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    //   ]),\n    // ])\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: {\n        type: 7,\n        name: 'transitionMessages',\n        definitions: [\n            {\n                type: 0,\n                name: 'enter',\n                styles: {\n                    type: 6,\n                    styles: { opacity: 1, transform: 'translateY(0%)' },\n                    offset: null,\n                },\n            },\n            {\n                type: 1,\n                expr: 'void => enter',\n                animation: [\n                    { type: 6, styles: { opacity: 0, transform: 'translateY(-5px)' }, offset: null },\n                    { type: 4, styles: null, timings: '300ms cubic-bezier(0.55, 0, 0.55, 0.2)' },\n                ],\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { matFormFieldAnimations };\n\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ElementRef, ChangeDetectorRef, signal, EventEmitter, isSignal, Output, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MatRipple } from './ripple.mjs';\nimport { MatPseudoCheckbox } from './pseudo-checkbox.mjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup {\n    /** Label for the option group. */\n    label;\n    /** whether the option group is disabled. */\n    disabled = false;\n    /** Unique id for the underlying label. */\n    _labelId = inject(_IdGenerator).getId('mat-optgroup-label-');\n    /** Whether the group is in inert a11y mode. */\n    _inert;\n    constructor() {\n        const parent = inject(MAT_OPTION_PARENT_COMPONENT, { optional: true });\n        this._inert = parent?.inertGroups ?? false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatOptgroup, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatOptgroup, isStandalone: true, selector: \"mat-optgroup\", inputs: { label: \"label\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\" }, classAttribute: \"mat-mdc-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], ngImport: i0, template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-mdc-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { label: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    source;\n    isUserInput;\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    _element = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _parent = inject(MAT_OPTION_PARENT_COMPONENT, { optional: true });\n    group = inject(MAT_OPTGROUP, { optional: true });\n    _signalDisableRipple = false;\n    _selected = false;\n    _active = false;\n    _mostRecentViewValue = '';\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** The form value of the option. */\n    value;\n    /** The unique ID of the option. */\n    id = inject(_IdGenerator).getId('mat-option-');\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled();\n    }\n    set disabled(value) {\n        this._disabled.set(value);\n    }\n    _disabled = signal(false, ...(ngDevMode ? [{ debugName: \"_disabled\" }] : []));\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._signalDisableRipple\n            ? this._parent.disableRipple()\n            : !!this._parent?.disableRipple;\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n        return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    onSelectionChange = new EventEmitter();\n    /** Element containing the option's text. */\n    _text;\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    _stateChanges = new Subject();\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_StructuralStylesLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        this._signalDisableRipple = !!this._parent && isSignal(this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select(emitEvent = true) {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            if (emitEvent) {\n                this._emitSelectionChangeEvent();\n            }\n        }\n    }\n    /** Deselects the option. */\n    deselect(emitEvent = true) {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            if (emitEvent) {\n                this._emitSelectionChangeEvent();\n            }\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n    // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n    // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                if (this._mostRecentViewValue) {\n                    this._stateChanges.next();\n                }\n                this._mostRecentViewValue = viewValue;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatOption, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatOption, isStandalone: true, selector: \"mat-option\", inputs: { value: \"value\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { onSelectionChange: \"onSelectionChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-list-item--selected\": \"selected\", \"class.mat-mdc-option-multiple\": \"multiple\", \"class.mat-mdc-option-active\": \"active\", \"class.mdc-list-item--disabled\": \"disabled\", \"id\": \"id\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled.toString()\" }, classAttribute: \"mat-mdc-option mdc-list-item\" }, viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true, static: true }], exportAs: [\"matOption\"], ngImport: i0, template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-pseudo-checkbox-minimal-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mat-list-list-item-selected-container-color: var(--mat-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\\n\"], dependencies: [{ kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\", \"appearance\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[class.mdc-list-item--selected]': 'selected',\n                        '[class.mat-mdc-option-multiple]': 'multiple',\n                        '[class.mat-mdc-option-active]': 'active',\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n                        // [WAI ARIA Listbox authoring practices guide](\n                        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n                        // selected option has either aria-selected or aria-checked  set to true. All options that are\n                        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n                        // aria-selected implementation of Chips and List components.\n                        //\n                        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n                        // every option as \"selected\" (#21491).\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-mdc-option mdc-list-item',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatPseudoCheckbox, MatRipple], template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-pseudo-checkbox-minimal-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mat-list-list-item-selected-container-color: var(--mat-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onSelectionChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text', { static: true }]\n            }] } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\nexport { MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition };\n\n","import * as i0 from '@angular/core';\nimport { ElementRef, NgModuleRef, EnvironmentInjector, createComponent, Injector, inject, TemplateRef, ViewContainerRef, Directive, DOCUMENT, EventEmitter, Input, Output, NgModule } from '@angular/core';\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    _attachedHost;\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    /** The type of the component that will be instantiated for attachment. */\n    component;\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     */\n    viewContainerRef;\n    /** Injector used for the instantiation of the component. */\n    injector;\n    /**\n     * List of DOM nodes that should be projected through `<ng-content>` of the attached component.\n     */\n    projectableNodes;\n    constructor(component, viewContainerRef, injector, projectableNodes) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.projectableNodes = projectableNodes;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    templateRef;\n    viewContainerRef;\n    context;\n    injector;\n    constructor(\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef, \n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef, \n    /** Contextual data to be passed in to the embedded view. */\n    context, \n    /** The injector to use for the embedded view. */\n    injector) {\n        super();\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n        this.injector = injector;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    /** DOM node hosting the portal's content. */\n    element;\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    /** The portal currently attached to the host. */\n    _attachedPortal;\n    /** A function that will permanently dispose this host. */\n    _disposeFn;\n    /** Whether this host has already been permanently disposed. */\n    _isDisposed = false;\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n    attachDomPortal = null;\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    outletElement;\n    _appRef;\n    _defaultInjector;\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _appRef, _defaultInjector) {\n        super();\n        this.outletElement = outletElement;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            const injector = portal.injector || portal.viewContainerRef.injector;\n            const ngModuleRef = injector.get(NgModuleRef, null, { optional: true }) || undefined;\n            componentRef = portal.viewContainerRef.createComponent(portal.component, {\n                index: portal.viewContainerRef.length,\n                injector,\n                ngModuleRef,\n                projectableNodes: portal.projectableNodes || undefined,\n            });\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            const appRef = this._appRef;\n            const elementInjector = portal.injector || this._defaultInjector || Injector.NULL;\n            const environmentInjector = elementInjector.get(EnvironmentInjector, appRef.injector);\n            componentRef = createComponent(portal.component, {\n                elementInjector,\n                environmentInjector,\n                projectableNodes: portal.projectableNodes || undefined,\n            });\n            appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (appRef.viewCount > 0) {\n                    appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    attachDomPortal = (portal) => {\n        const element = portal.element;\n        if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('DOM portal content must be attached to a parent node.');\n        }\n        // Anchor used to save the element's previous position so\n        // that we can restore it when the portal is detached.\n        const anchorNode = this.outletElement.ownerDocument.createComment('dom-portal');\n        element.parentNode.insertBefore(anchorNode, element);\n        this.outletElement.appendChild(element);\n        this._attachedPortal = portal;\n        super.setDisposeFn(() => {\n            // We can't use `replaceWith` here because IE doesn't support it.\n            if (anchorNode.parentNode) {\n                anchorNode.parentNode.replaceChild(element, anchorNode);\n            }\n        });\n    };\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor() {\n        const templateRef = inject(TemplateRef);\n        const viewContainerRef = inject(ViewContainerRef);\n        super(templateRef, viewContainerRef);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkPortal, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkPortal, isStandalone: true, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: TemplatePortalDirective, isStandalone: true, selector: \"[cdk-portal], [portal]\", providers: [\n            {\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective,\n            },\n        ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    _moduleRef = inject(NgModuleRef, { optional: true });\n    _document = inject(DOCUMENT);\n    _viewContainerRef = inject(ViewContainerRef);\n    /** Whether the portal component is initialized. */\n    _isInitialized = false;\n    /** Reference to the currently-attached component/view ref. */\n    _attachedRef;\n    constructor() {\n        super();\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Emits when a portal is attached to the outlet. */\n    attached = new EventEmitter();\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedRef = this._attachedPortal = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const ref = viewContainerRef.createComponent(portal.component, {\n            index: viewContainerRef.length,\n            injector: portal.injector || viewContainerRef.injector,\n            projectableNodes: portal.projectableNodes || undefined,\n            ngModuleRef: this._moduleRef || undefined,\n        });\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    attachDomPortal = (portal) => {\n        const element = portal.element;\n        if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('DOM portal content must be attached to a parent node.');\n        }\n        // Anchor used to save the element's previous position so\n        // that we can restore it when the portal is detached.\n        const anchorNode = this._document.createComment('dom-portal');\n        portal.setAttachedHost(this);\n        element.parentNode.insertBefore(anchorNode, element);\n        this._getRootNode().appendChild(element);\n        this._attachedPortal = portal;\n        super.setDisposeFn(() => {\n            if (anchorNode.parentNode) {\n                anchorNode.parentNode.replaceChild(element, anchorNode);\n            }\n        });\n    };\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkPortalOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkPortalOutlet, isStandalone: true, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                }]\n        }], ctorParameters: () => [], propDecorators: { portal: [{\n                type: Input,\n                args: ['cdkPortalOutlet']\n            }], attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: PortalHostDirective, isStandalone: true, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n            {\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective,\n            },\n        ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: [{ name: 'portal', alias: 'cdkPortalHost' }],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                }]\n        }] });\nclass PortalModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: PortalModule, imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: PortalModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\nexport { BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalOutlet, Portal, PortalHostDirective, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n","import * as i0 from '@angular/core';\nimport { DOCUMENT, NgZone, inject, Injector, Injectable, RendererFactory2, Component, ChangeDetectionStrategy, ViewEncapsulation, afterNextRender, ElementRef, ApplicationRef, Renderer2, ANIMATION_MODULE_TYPE, EnvironmentInjector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Platform } from './platform2.mjs';\nimport { _getEventTarget } from './shadow-dom.mjs';\nimport { _isTestEnvironment } from './test-environment.mjs';\nimport { _CdkPrivateStyleLoader } from './style-loader.mjs';\nimport { Subject, Subscription } from 'rxjs';\nimport { coerceCssPixelValue } from './css-pixel-value.mjs';\nimport { coerceArray } from './array.mjs';\nimport { ViewportRuler, ScrollDispatcher, ScrollingModule } from './scrolling.mjs';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from './portal.mjs';\nimport { supportsScrollBehavior } from './scrolling2.mjs';\nimport { filter, takeWhile } from 'rxjs/operators';\nimport { _IdGenerator } from './id-generator.mjs';\nimport { Directionality } from './directionality.mjs';\nimport { ESCAPE } from './keycodes2.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { BidiModule } from './bidi.mjs';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Creates a scroll strategy that prevents the user from scrolling while the overlay is open.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createBlockScrollStrategy(injector) {\n    return new BlockScrollStrategy(injector.get(ViewportRuler), injector.get(DOCUMENT));\n}\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    _viewportRuler;\n    _previousHTMLStyles = { top: '', left: '' };\n    _previousScrollPosition;\n    _isEnabled = false;\n    _document;\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const rootElement = this._document.documentElement;\n        const viewport = this._viewportRuler.getViewportSize();\n        return rootElement.scrollHeight > viewport.height || rootElement.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Creates a scroll strategy that closes the overlay when the user starts to scroll.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createCloseScrollStrategy(injector, config) {\n    return new CloseScrollStrategy(injector.get(ScrollDispatcher), injector.get(NgZone), injector.get(ViewportRuler), config);\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    _scrollDispatcher;\n    _ngZone;\n    _viewportRuler;\n    _config;\n    _scrollSubscription = null;\n    _overlayRef;\n    _initialScrollPosition;\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n            return (!scrollable ||\n                !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement));\n        }));\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n    /** Detaches the overlay ref and disables the scroll strategy. */\n    _detach = () => {\n        this.disable();\n        if (this._overlayRef.hasAttached()) {\n            this._ngZone.run(() => this._overlayRef.detach());\n        }\n    };\n}\n\n/** Creates a scroll strategy that does nothing. */\nfunction createNoopScrollStrategy() {\n    return new NoopScrollStrategy();\n}\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * Creates a scroll strategy that updates the overlay's position when the user scrolls.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createRepositionScrollStrategy(injector, config) {\n    return new RepositionScrollStrategy(injector.get(ScrollDispatcher), injector.get(ViewportRuler), injector.get(NgZone), config);\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    _scrollDispatcher;\n    _viewportRuler;\n    _ngZone;\n    _config;\n    _scrollSubscription = null;\n    _overlayRef;\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    _injector = inject(Injector);\n    constructor() { }\n    /** Do nothing on scroll. */\n    noop = () => new NoopScrollStrategy();\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * @param config Configuration to be used inside the scroll strategy.\n     */\n    close = (config) => createCloseScrollStrategy(this._injector, config);\n    /** Block scrolling. */\n    block = () => createBlockScrollStrategy(this._injector);\n    /**\n     * Update the overlay's position on scroll.\n     * @param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     */\n    reposition = (config) => createRepositionScrollStrategy(this._injector, config);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollStrategyOptions, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    /** Strategy with which to position the overlay. */\n    positionStrategy;\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    scrollStrategy = new NoopScrollStrategy();\n    /** Custom class to add to the overlay pane. */\n    panelClass = '';\n    /** Whether the overlay has a backdrop. */\n    hasBackdrop = false;\n    /** Custom class to add to the backdrop */\n    backdropClass = 'cdk-overlay-dark-backdrop';\n    /** Whether to disable any built-in animations. */\n    disableAnimations;\n    /** The width of the overlay panel. If a number is provided, pixel units are assumed. */\n    width;\n    /** The height of the overlay panel. If a number is provided, pixel units are assumed. */\n    height;\n    /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. */\n    minWidth;\n    /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. */\n    minHeight;\n    /** The max-width of the overlay panel. If a number is provided, pixel units are assumed. */\n    maxWidth;\n    /** The max-height of the overlay panel. If a number is provided, pixel units are assumed. */\n    maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     */\n    direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    disposeOnNavigation = false;\n    constructor(config) {\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    offsetX;\n    offsetY;\n    panelClass;\n    /** X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'. */\n    originX;\n    /** Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'. */\n    originY;\n    /** X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'. */\n    overlayX;\n    /** Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'. */\n    overlayY;\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n    isOriginClipped;\n    isOriginOutsideView;\n    isOverlayClipped;\n    isOverlayOutsideView;\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    connectionPair;\n    scrollableViewProperties;\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    /** Currently attached overlays in the order they were attached. */\n    _attachedOverlays = [];\n    _document = inject(DOCUMENT);\n    _isAttached;\n    constructor() { }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: BaseOverlayDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    _ngZone = inject(NgZone);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupKeydown;\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._ngZone.runOutsideAngular(() => {\n                this._cleanupKeydown = this._renderer.listen('body', 'keydown', this._keydownListener);\n            });\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._cleanupKeydown?.();\n            this._isAttached = false;\n        }\n    }\n    /** Keyboard event listener that will be attached to the body. */\n    _keydownListener = (event) => {\n        const overlays = this._attachedOverlays;\n        for (let i = overlays.length - 1; i > -1; i--) {\n            // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n            // We want to target the most recent overlay, rather than trying to match where the event came\n            // from, because some components might open an overlay, but keep focus on a trigger element\n            // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n            // because we don't want overlays that don't handle keyboard events to block the ones below\n            // them that do.\n            if (overlays[i]._keydownEvents.observers.length > 0) {\n                this._ngZone.run(() => overlays[i]._keydownEvents.next(event));\n                break;\n            }\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cursorOriginalValue;\n    _cursorStyleIsSet = false;\n    _pointerDownEventTarget;\n    _cleanups;\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            const eventOptions = { capture: true };\n            const renderer = this._renderer;\n            this._cleanups = this._ngZone.runOutsideAngular(() => [\n                renderer.listen(body, 'pointerdown', this._pointerDownListener, eventOptions),\n                renderer.listen(body, 'click', this._clickListener, eventOptions),\n                renderer.listen(body, 'auxclick', this._clickListener, eventOptions),\n                renderer.listen(body, 'contextmenu', this._clickListener, eventOptions),\n            ]);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._cleanups?.forEach(cleanup => cleanup());\n            this._cleanups = undefined;\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                this._document.body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    /** Store pointerdown event target to track origin of click. */\n    _pointerDownListener = (event) => {\n        this._pointerDownEventTarget = _getEventTarget(event);\n    };\n    /** Click event listener that will be attached to the body propagate phase. */\n    _clickListener = (event) => {\n        const target = _getEventTarget(event);\n        // In case of a click event, we want to check the origin of the click\n        // (e.g. in case where a user starts a click inside the overlay and\n        // releases the click outside of it).\n        // This is done by using the event target of the preceding pointerdown event.\n        // Every click event caused by a pointer device has a preceding pointerdown\n        // event, unless the click was programmatically triggered (e.g. in a unit test).\n        const origin = event.type === 'click' && this._pointerDownEventTarget\n            ? this._pointerDownEventTarget\n            : target;\n        // Reset the stored pointerdown event target, to avoid having it interfere\n        // in subsequent events.\n        this._pointerDownEventTarget = null;\n        // We copy the array because the original may be modified asynchronously if the\n        // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n        // the for loop.\n        const overlays = this._attachedOverlays.slice();\n        // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n        // We want to target all overlays for which the click could be considered as outside click.\n        // As soon as we reach an overlay for which the click is not outside click we break off\n        // the loop.\n        for (let i = overlays.length - 1; i > -1; i--) {\n            const overlayRef = overlays[i];\n            if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                continue;\n            }\n            // If it's a click inside the overlay, just break - we should do nothing\n            // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n            // and proceed with the next overlay\n            if (containsPierceShadowDom(overlayRef.overlayElement, target) ||\n                containsPierceShadowDom(overlayRef.overlayElement, origin)) {\n                break;\n            }\n            const outsidePointerEvents = overlayRef._outsidePointerEvents;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.run(() => outsidePointerEvents.next(event));\n            }\n            else {\n                outsidePointerEvents.next(event);\n            }\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** Version of `Element.contains` that transcends shadow DOM boundaries. */\nfunction containsPierceShadowDom(parent, child) {\n    const supportsShadowRoot = typeof ShadowRoot !== 'undefined' && ShadowRoot;\n    let current = child;\n    while (current) {\n        if (current === parent) {\n            return true;\n        }\n        current =\n            supportsShadowRoot && current instanceof ShadowRoot ? current.host : current.parentNode;\n    }\n    return false;\n}\n\nclass _CdkOverlayStyleLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _CdkOverlayStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: _CdkOverlayStyleLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"cdk-overlay-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\".cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed}@layer cdk-overlay{.cdk-overlay-container{z-index:1000}}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute}@layer cdk-overlay{.cdk-global-overlay-wrapper{z-index:1000}}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;display:flex;max-width:100%;max-height:100%}@layer cdk-overlay{.cdk-overlay-pane{z-index:1000}}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);opacity:0;touch-action:manipulation}@layer cdk-overlay{.cdk-overlay-backdrop{z-index:1000;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}}@media(prefers-reduced-motion){.cdk-overlay-backdrop{transition-duration:1ms}}.cdk-overlay-backdrop-showing{opacity:1}@media(forced-colors: active){.cdk-overlay-backdrop-showing{opacity:.6}}@layer cdk-overlay{.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing,.cdk-high-contrast-active .cdk-overlay-transparent-backdrop{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;display:flex;flex-direction:column;min-width:1px;min-height:1px}@layer cdk-overlay{.cdk-overlay-connected-position-bounding-box{z-index:1000}}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: _CdkOverlayStyleLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'cdk-overlay-style-loader': '' }, styles: [\".cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed}@layer cdk-overlay{.cdk-overlay-container{z-index:1000}}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute}@layer cdk-overlay{.cdk-global-overlay-wrapper{z-index:1000}}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;display:flex;max-width:100%;max-height:100%}@layer cdk-overlay{.cdk-overlay-pane{z-index:1000}}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);opacity:0;touch-action:manipulation}@layer cdk-overlay{.cdk-overlay-backdrop{z-index:1000;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}}@media(prefers-reduced-motion){.cdk-overlay-backdrop{transition-duration:1ms}}.cdk-overlay-backdrop-showing{opacity:1}@media(forced-colors: active){.cdk-overlay-backdrop-showing{opacity:.6}}@layer cdk-overlay{.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing,.cdk-high-contrast-active .cdk-overlay-transparent-backdrop{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;display:flex;flex-direction:column;min-width:1px;min-height:1px}@layer cdk-overlay{.cdk-overlay-connected-position-bounding-box{z-index:1000}}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n\"] }]\n        }] });\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    _platform = inject(Platform);\n    _containerElement;\n    _document = inject(DOCUMENT);\n    _styleLoader = inject(_CdkPrivateStyleLoader);\n    constructor() { }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        this._loadStyles();\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    /** Loads the structural styles necessary for the overlay to work. */\n    _loadStyles() {\n        this._styleLoader.load(_CdkOverlayStyleLoader);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayContainer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Encapsulates the logic for attaching and detaching a backdrop. */\nclass BackdropRef {\n    _renderer;\n    _ngZone;\n    element;\n    _cleanupClick;\n    _cleanupTransitionEnd;\n    _fallbackTimeout;\n    constructor(document, _renderer, _ngZone, onClick) {\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this.element = document.createElement('div');\n        this.element.classList.add('cdk-overlay-backdrop');\n        this._cleanupClick = _renderer.listen(this.element, 'click', onClick);\n    }\n    detach() {\n        this._ngZone.runOutsideAngular(() => {\n            const element = this.element;\n            clearTimeout(this._fallbackTimeout);\n            this._cleanupTransitionEnd?.();\n            this._cleanupTransitionEnd = this._renderer.listen(element, 'transitionend', this.dispose);\n            this._fallbackTimeout = setTimeout(this.dispose, 500);\n            // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n            // In this case we make it unclickable and we try to remove it after a delay.\n            element.style.pointerEvents = 'none';\n            element.classList.remove('cdk-overlay-backdrop-showing');\n        });\n    }\n    dispose = () => {\n        clearTimeout(this._fallbackTimeout);\n        this._cleanupClick?.();\n        this._cleanupTransitionEnd?.();\n        this._cleanupClick = this._cleanupTransitionEnd = this._fallbackTimeout = undefined;\n        this.element.remove();\n    };\n}\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    _portalOutlet;\n    _host;\n    _pane;\n    _config;\n    _ngZone;\n    _keyboardDispatcher;\n    _document;\n    _location;\n    _outsideClickDispatcher;\n    _animationsDisabled;\n    _injector;\n    _renderer;\n    _backdropClick = new Subject();\n    _attachments = new Subject();\n    _detachments = new Subject();\n    _positionStrategy;\n    _scrollStrategy;\n    _locationChanges = Subscription.EMPTY;\n    _backdropRef = null;\n    _detachContentMutationObserver;\n    _detachContentAfterRenderRef;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     */\n    _previousHostParent;\n    /** Stream of keydown events dispatched to this overlay. */\n    _keydownEvents = new Subject();\n    /** Stream of mouse outside events dispatched to this overlay. */\n    _outsidePointerEvents = new Subject();\n    /** Reference to the currently-running `afterNextRender` call. */\n    _afterNextRenderRef;\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false, _injector, _renderer) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._injector = _injector;\n        this._renderer = _renderer;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropRef?.element || null;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // We need to clean this up ourselves, because we're passing in an\n        // `EnvironmentInjector` below which won't ever be destroyed.\n        // Otherwise it causes some callbacks to be retained (see #29696).\n        this._afterNextRenderRef?.destroy();\n        // Update the position once the overlay is fully rendered before attempting to position it,\n        // as the position may depend on the size of the rendered content.\n        this._afterNextRenderRef = afterNextRender(() => {\n            // The overlay could've been detached before the callback executed.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }, { injector: this._injector });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        this._completeDetachContent();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        this._completeDetachContent();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenEmpty();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._backdropRef?.dispose();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._afterNextRenderRef?.destroy();\n        this._previousHostParent = this._pane = this._host = this._backdropRef = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n        this._completeDetachContent();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropRef?.dispose();\n        this._backdropRef = new BackdropRef(this._document, this._renderer, this._ngZone, event => {\n            this._backdropClick.next(event);\n        });\n        if (this._animationsDisabled) {\n            this._backdropRef.element.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropRef.element, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropRef.element, this._host);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._backdropRef?.element.classList.add(showingClass));\n            });\n        }\n        else {\n            this._backdropRef.element.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        if (this._animationsDisabled) {\n            this._backdropRef?.dispose();\n            this._backdropRef = null;\n        }\n        else {\n            this._backdropRef?.detach();\n        }\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay once the content finishes animating and is removed from the DOM. */\n    _detachContentWhenEmpty() {\n        let rethrow = false;\n        // Attempt to detach on the next render.\n        try {\n            this._detachContentAfterRenderRef = afterNextRender(() => {\n                // Rethrow if we encounter an actual error detaching.\n                rethrow = true;\n                this._detachContent();\n            }, {\n                injector: this._injector,\n            });\n        }\n        catch (e) {\n            if (rethrow) {\n                throw e;\n            }\n            // afterNextRender throws if the EnvironmentInjector is has already been destroyed.\n            // This may happen in tests that don't properly flush all async work.\n            // In order to avoid breaking those tests, we just detach immediately in this case.\n            this._detachContent();\n        }\n        // Otherwise wait until the content finishes animating out and detach.\n        if (globalThis.MutationObserver && this._pane) {\n            this._detachContentMutationObserver ||= new globalThis.MutationObserver(() => {\n                this._detachContent();\n            });\n            this._detachContentMutationObserver.observe(this._pane, { childList: true });\n        }\n    }\n    _detachContent() {\n        // Needs a couple of checks for the pane and host, because\n        // they may have been removed by the time the zone stabilizes.\n        if (!this._pane || !this._host || this._pane.children.length === 0) {\n            if (this._pane && this._config.panelClass) {\n                this._toggleClasses(this._pane, this._config.panelClass, false);\n            }\n            if (this._host && this._host.parentElement) {\n                this._previousHostParent = this._host.parentElement;\n                this._host.remove();\n            }\n            this._completeDetachContent();\n        }\n    }\n    _completeDetachContent() {\n        this._detachContentAfterRenderRef?.destroy();\n        this._detachContentAfterRenderRef = undefined;\n        this._detachContentMutationObserver?.disconnect();\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        scrollStrategy?.disable();\n        scrollStrategy?.detach?.();\n    }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Creates a flexible position strategy.\n * @param injector Injector used to resolve dependnecies for the position strategy.\n * @param origin Origin relative to which to position the overlay.\n */\nfunction createFlexibleConnectedPositionStrategy(injector, origin) {\n    return new FlexibleConnectedPositionStrategy(origin, injector.get(ViewportRuler), injector.get(DOCUMENT), injector.get(Platform), injector.get(OverlayContainer));\n}\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    _viewportRuler;\n    _document;\n    _platform;\n    _overlayContainer;\n    /** The overlay to which this strategy is attached. */\n    _overlayRef;\n    /** Whether we're performing the very first positioning of the overlay. */\n    _isInitialRender;\n    /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n    _lastBoundingBoxSize = { width: 0, height: 0 };\n    /** Whether the overlay was pushed in a previous positioning. */\n    _isPushed = false;\n    /** Whether the overlay can be pushed on-screen on the initial open. */\n    _canPush = true;\n    /** Whether the overlay can grow via flexible width/height after the initial open. */\n    _growAfterOpen = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    _hasFlexibleDimensions = true;\n    /** Whether the overlay position is locked. */\n    _positionLocked = false;\n    /** Cached origin dimensions */\n    _originRect;\n    /** Cached overlay dimensions */\n    _overlayRect;\n    /** Cached viewport dimensions */\n    _viewportRect;\n    /** Cached container dimensions */\n    _containerRect;\n    /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n    _viewportMargin = 0;\n    /** The Scrollable containers used to check scrollable view properties on position change. */\n    _scrollables = [];\n    /** Ordered list of preferred positions, from most to least desirable. */\n    _preferredPositions = [];\n    /** The origin element against which the overlay will be positioned. */\n    _origin;\n    /** The overlay pane element. */\n    _pane;\n    /** Whether the strategy has been disposed of already. */\n    _isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     */\n    _boundingBox;\n    /** The last position to have been calculated as the best fit position. */\n    _lastPosition;\n    /** The last calculated scroll visibility. Only tracked  */\n    _lastScrollVisibility;\n    /** Subject that emits whenever the position changes. */\n    _positionChanges = new Subject();\n    /** Subscription to viewport size changes. */\n    _resizeSubscription = Subscription.EMPTY;\n    /** Default offset for the overlay along the x axis. */\n    _offsetX = 0;\n    /** Default offset for the overlay along the y axis. */\n    _offsetY = 0;\n    /** Selector to be used when finding the elements on which to set the transform origin. */\n    _transformOriginSelector;\n    /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n    _appliedPanelClasses = [];\n    /** Amount by which the overlay was pushed in each axis during the last time it was positioned. */\n    _previousPushAmount;\n    /** Observable sequence of position changes. */\n    positionChanges = this._positionChanges;\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        this.setOrigin(connectedTo);\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollVisibility = this._getScrollVisibility();\n            // We're recalculating on scroll, but we only want to emit if anything\n            // changed since downstream code might be hitting the `NgZone`.\n            if (position !== this._lastPosition ||\n                !this._lastScrollVisibility ||\n                !compareScrollVisibility(this._lastScrollVisibility, scrollVisibility)) {\n                const changeEvent = new ConnectedOverlayPositionChange(position, scrollVisibility);\n                this._positionChanges.next(changeEvent);\n            }\n            this._lastScrollVisibility = scrollVisibility;\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin * 2;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the DOMRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\n/** Returns whether two `ScrollingVisibility` objects are identical. */\nfunction compareScrollVisibility(a, b) {\n    if (a === b) {\n        return true;\n    }\n    return (a.isOriginClipped === b.isOriginClipped &&\n        a.isOriginOutsideView === b.isOriginOutsideView &&\n        a.isOverlayClipped === b.isOverlayClipped &&\n        a.isOverlayOutsideView === b.isOverlayOutsideView);\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * Creates a global position strategy.\n * @param injector Injector used to resolve dependencies for the strategy.\n */\nfunction createGlobalPositionStrategy(_injector) {\n    // Note: `injector` is unused, but we may need it in\n    // the future which would introduce a breaking change.\n    return new GlobalPositionStrategy();\n}\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    /** The overlay to which this strategy is attached. */\n    _overlayRef;\n    _cssPosition = 'static';\n    _topOffset = '';\n    _bottomOffset = '';\n    _alignItems = '';\n    _xPosition = '';\n    _xOffset = '';\n    _width = '';\n    _height = '';\n    _isDisposed = false;\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    _injector = inject(Injector);\n    constructor() { }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return createGlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return createFlexibleConnectedPositionStrategy(this._injector, origin);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayPositionBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Creates an overlay.\n * @param injector Injector to use when resolving the overlay's dependencies.\n * @param config Configuration applied to the overlay.\n * @returns Reference to the created overlay.\n */\nfunction createOverlayRef(injector, config) {\n    // This is done in the overlay container as well, but we have it here\n    // since it's common to mock out the overlay container in tests.\n    injector.get(_CdkPrivateStyleLoader).load(_CdkOverlayStyleLoader);\n    const overlayContainer = injector.get(OverlayContainer);\n    const doc = injector.get(DOCUMENT);\n    const idGenerator = injector.get(_IdGenerator);\n    const appRef = injector.get(ApplicationRef);\n    const directionality = injector.get(Directionality);\n    const host = doc.createElement('div');\n    const pane = doc.createElement('div');\n    pane.id = idGenerator.getId('cdk-overlay-');\n    pane.classList.add('cdk-overlay-pane');\n    host.appendChild(pane);\n    overlayContainer.getContainerElement().appendChild(host);\n    const portalOutlet = new DomPortalOutlet(pane, appRef, injector);\n    const overlayConfig = new OverlayConfig(config);\n    const renderer = injector.get(Renderer2, null, { optional: true }) ||\n        injector.get(RendererFactory2).createRenderer(null, null);\n    overlayConfig.direction = overlayConfig.direction || directionality.value;\n    return new OverlayRef(portalOutlet, host, pane, overlayConfig, injector.get(NgZone), injector.get(OverlayKeyboardDispatcher), doc, injector.get(Location), injector.get(OverlayOutsideClickDispatcher), config?.disableAnimations ??\n        injector.get(ANIMATION_MODULE_TYPE, null, { optional: true }) === 'NoopAnimations', injector.get(EnvironmentInjector), renderer);\n}\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    scrollStrategies = inject(ScrollStrategyOptions);\n    _positionBuilder = inject(OverlayPositionBuilder);\n    _injector = inject(Injector);\n    constructor() { }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        return createOverlayRef(this._injector, config);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: Overlay, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: Overlay, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector);\n    },\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    elementRef = inject(ElementRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkOverlayOrigin, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: CdkOverlayOrigin, isStandalone: true, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    _dir = inject(Directionality, { optional: true });\n    _injector = inject(Injector);\n    _overlayRef;\n    _templatePortal;\n    _backdropSubscription = Subscription.EMPTY;\n    _attachSubscription = Subscription.EMPTY;\n    _detachSubscription = Subscription.EMPTY;\n    _positionSubscription = Subscription.EMPTY;\n    _offsetX;\n    _offsetY;\n    _position;\n    _scrollStrategyFactory = inject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY);\n    _disposeOnNavigation = false;\n    _ngZone = inject(NgZone);\n    /** Origin for the connected overlay. */\n    origin;\n    /** Registered connected position pairs. */\n    positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     */\n    positionStrategy;\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The width of the overlay panel. */\n    width;\n    /** The height of the overlay panel. */\n    height;\n    /** The min width of the overlay panel. */\n    minWidth;\n    /** The min height of the overlay panel. */\n    minHeight;\n    /** The custom class to be set on the backdrop element. */\n    backdropClass;\n    /** The custom class to add to the overlay pane element. */\n    panelClass;\n    /** Margin between the overlay and the viewport edges. */\n    viewportMargin = 0;\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    scrollStrategy;\n    /** Whether the overlay is open. */\n    open = false;\n    /** Whether the overlay can be closed by user interaction. */\n    disableClose = false;\n    /** CSS selector which to set the transform origin. */\n    transformOriginSelector;\n    /** Whether or not the overlay should attach a backdrop. */\n    hasBackdrop = false;\n    /** Whether or not the overlay should be locked when scrolling. */\n    lockPosition = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    flexibleDimensions = false;\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    growAfterOpen = false;\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    push = false;\n    /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n    get disposeOnNavigation() {\n        return this._disposeOnNavigation;\n    }\n    set disposeOnNavigation(value) {\n        this._disposeOnNavigation = value;\n    }\n    /** Event emitted when the backdrop is clicked. */\n    backdropClick = new EventEmitter();\n    /** Event emitted when the position has changed. */\n    positionChange = new EventEmitter();\n    /** Event emitted when the overlay has been attached. */\n    attach = new EventEmitter();\n    /** Event emitted when the overlay has been detached. */\n    detach = new EventEmitter();\n    /** Emits when there are keyboard events that are targeted at the overlay. */\n    overlayKeydown = new EventEmitter();\n    /** Emits when there are mouse outside click events that are targeted at the overlay. */\n    overlayOutsideClick = new EventEmitter();\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor() {\n        const templateRef = inject(TemplateRef);\n        const viewContainerRef = inject(ViewContainerRef);\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        this._overlayRef?.dispose();\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef?.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this.attachOverlay() : this.detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = createOverlayRef(this._injector, this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            const origin = this._getOriginElement();\n            const target = _getEventTarget(event);\n            if (!origin || (origin !== target && !origin.contains(target))) {\n                this.overlayOutsideClick.next(event);\n            }\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir || 'ltr',\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n            disposeOnNavigation: this.disposeOnNavigation,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = createFlexibleConnectedPositionStrategy(this._injector, this._getOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    _getOriginElement() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef.nativeElement;\n        }\n        if (this.origin instanceof ElementRef) {\n            return this.origin.nativeElement;\n        }\n        if (typeof Element !== 'undefined' && this.origin instanceof Element) {\n            return this.origin;\n        }\n        return null;\n    }\n    /** Attaches the overlay. */\n    attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this._ngZone.run(() => this.positionChange.emit(position));\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n        this.open = true;\n    }\n    /** Detaches the overlay. */\n    detachOverlay() {\n        this._overlayRef?.detach();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        this.open = false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkConnectedOverlay, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: CdkConnectedOverlay, isStandalone: true, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute], push: [\"cdkConnectedOverlayPush\", \"push\", booleanAttribute], disposeOnNavigation: [\"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                }]\n        }], ctorParameters: () => [], propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayHasBackdrop', transform: booleanAttribute }]\n            }], lockPosition: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayLockPosition', transform: booleanAttribute }]\n            }], flexibleDimensions: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayFlexibleDimensions', transform: booleanAttribute }]\n            }], growAfterOpen: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayGrowAfterOpen', transform: booleanAttribute }]\n            }], push: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayPush', transform: booleanAttribute }]\n            }], disposeOnNavigation: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayDisposeOnNavigation', transform: booleanAttribute }]\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector);\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nclass OverlayModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayModule, imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, createBlockScrollStrategy, createCloseScrollStrategy, createFlexibleConnectedPositionStrategy, createGlobalPositionStrategy, createNoopScrollStrategy, createOverlayRef, createRepositionScrollStrategy, validateHorizontalPosition, validateVerticalPosition };\n\n","import { OverlayContainer } from './overlay-module.mjs';\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, createBlockScrollStrategy, createCloseScrollStrategy, createFlexibleConnectedPositionStrategy, createGlobalPositionStrategy, createNoopScrollStrategy, createOverlayRef, createRepositionScrollStrategy, validateHorizontalPosition, validateVerticalPosition } from './overlay-module.mjs';\nimport * as i0 from '@angular/core';\nimport { inject, RendererFactory2, Injectable } from '@angular/core';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkFixedSizeVirtualScroll as ɵɵCdkFixedSizeVirtualScroll, CdkScrollableModule as ɵɵCdkScrollableModule, CdkVirtualForOf as ɵɵCdkVirtualForOf, CdkVirtualScrollViewport as ɵɵCdkVirtualScrollViewport, CdkVirtualScrollableElement as ɵɵCdkVirtualScrollableElement, CdkVirtualScrollableWindow as ɵɵCdkVirtualScrollableWindow } from './scrolling.mjs';\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport '@angular/common';\nimport './platform2.mjs';\nimport './shadow-dom.mjs';\nimport './test-environment.mjs';\nimport './style-loader.mjs';\nimport 'rxjs';\nimport './css-pixel-value.mjs';\nimport './array.mjs';\nimport './portal.mjs';\nimport './scrolling2.mjs';\nimport 'rxjs/operators';\nimport './id-generator.mjs';\nimport './directionality.mjs';\nimport './keycodes2.mjs';\nimport './keycodes.mjs';\nimport './element.mjs';\nimport './recycle-view-repeater-strategy.mjs';\nimport './data-source.mjs';\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _fullScreenEventName;\n    _cleanupFullScreenListener;\n    constructor() {\n        super();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._cleanupFullScreenListener?.();\n    }\n    _createContainer() {\n        const eventName = this._getEventName();\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        if (eventName) {\n            this._cleanupFullScreenListener?.();\n            this._cleanupFullScreenListener = this._renderer.listen('document', eventName, () => {\n                this._adjustParentForFullscreenChange();\n            });\n        }\n    }\n    _adjustParentForFullscreenChange() {\n        if (this._containerElement) {\n            const fullscreenElement = this.getFullscreenElement();\n            const parent = fullscreenElement || this._document.body;\n            parent.appendChild(this._containerElement);\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: FullscreenOverlayContainer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { FullscreenOverlayContainer, OverlayContainer };\n\n","import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher };\n\n","/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n    _defaultMatcher;\n    ngControl;\n    _parentFormGroup;\n    _parentForm;\n    _stateChanges;\n    /** Whether the tracker is currently in an error state. */\n    errorState = false;\n    /** User-defined matcher for the error state. */\n    matcher;\n    constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n        this._defaultMatcher = _defaultMatcher;\n        this.ngControl = ngControl;\n        this._parentFormGroup = _parentFormGroup;\n        this._parentForm = _parentForm;\n        this._stateChanges = _stateChanges;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n        const oldState = this.errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const matcher = this.matcher || this._defaultMatcher;\n        const control = this.ngControl ? this.ngControl.control : null;\n        const newState = matcher?.isErrorState(control, parent) ?? false;\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this._stateChanges.next();\n        }\n    }\n}\n\nexport { _ErrorStateTracker };\n\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from './ripple-module.mjs';\nimport { MatPseudoCheckboxModule } from './pseudo-checkbox-module.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatOption, MatOptgroup } from './option.mjs';\n\nclass MatOptionModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup], exports: [MatOption, MatOptgroup] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup],\n                    exports: [MatOption, MatOptgroup],\n                }]\n        }] });\n\nexport { MatOptionModule };\n\n","import { createRepositionScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ChangeDetectorRef, ElementRef, Renderer2, signal, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _IdGenerator, LiveAnnouncer, removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, ENTER, SPACE, A, ESCAPE, DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, takeUntil, take } from 'rxjs/operators';\nimport { NgClass } from '@angular/common';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from './form-field2.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP } from './option.mjs';\nimport { ErrorStateMatcher } from './error-options.mjs';\nimport { _ErrorStateTracker } from './error-state.mjs';\nimport { MatOptionModule } from './option-module.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatFormFieldModule } from './form-field-module.mjs';\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector);\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(_overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector);\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    source;\n    value;\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nclass MatSelect {\n    _viewportRuler = inject(ViewportRuler);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, { optional: true });\n    _idGenerator = inject(_IdGenerator);\n    _renderer = inject(Renderer2);\n    _parentFormField = inject(MAT_FORM_FIELD, { optional: true });\n    ngControl = inject(NgControl, { self: true, optional: true });\n    _liveAnnouncer = inject(LiveAnnouncer);\n    _defaultOptions = inject(MAT_SELECT_CONFIG, { optional: true });\n    _animationsDisabled = _animationsDisabled();\n    _initialized = new Subject();\n    _cleanupDetach;\n    /** All of the defined select options. */\n    options;\n    // TODO(crisbeto): this is only necessary for the non-MDC select, but it's technically a\n    // public API so we have to keep it. It should be deprecated and removed eventually.\n    /** All of the defined groups of options. */\n    optionGroups;\n    /** User-supplied override of the trigger element. */\n    customTrigger;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top',\n        },\n        {\n            originX: 'end',\n            originY: 'bottom',\n            overlayX: 'end',\n            overlayY: 'top',\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom',\n            panelClass: 'mat-mdc-select-panel-above',\n        },\n        {\n            originX: 'end',\n            originY: 'top',\n            overlayX: 'end',\n            overlayY: 'bottom',\n            panelClass: 'mat-mdc-select-panel-above',\n        },\n    ];\n    /** Scrolls a particular option into the view. */\n    _scrollOptionIntoView(index) {\n        const option = this.options.toArray()[index];\n        if (option) {\n            const panel = this.panel.nativeElement;\n            const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n            const element = option._getHostElement();\n            if (index === 0 && labelCount === 1) {\n                // If we've got one group label before the option and we're at the top option,\n                // scroll the list to the top. This is better UX than scrolling the list to the\n                // top of the option, because it allows the user to read the top group's label.\n                panel.scrollTop = 0;\n            }\n            else {\n                panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n            }\n        }\n    }\n    /** Called when the panel has been opened and the overlay has settled on its final position. */\n    _positioningSettled() {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    /** Creates a change event object that should be emitted by the select. */\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /** Factory function used to create a scroll strategy for this select. */\n    _scrollStrategyFactory = inject(MAT_SELECT_SCROLL_STRATEGY);\n    /** Whether or not the overlay panel is open. */\n    _panelOpen = false;\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    _compareWith = (o1, o2) => o1 === o2;\n    /** Unique id for this input. */\n    _uid = this._idGenerator.getId('mat-select-');\n    /** Current `aria-labelledby` value for the select trigger. */\n    _triggerAriaLabelledBy = null;\n    /**\n     * Keeps track of the previous form control assigned to the select.\n     * Used to detect if it has changed.\n     */\n    _previousControl;\n    /** Emits whenever the component is destroyed. */\n    _destroy = new Subject();\n    /** Tracks the error state of the select. */\n    _errorStateTracker;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /**\n     * Disable the automatic labeling to avoid issues like #27241.\n     * @docs-private\n     */\n    disableAutomaticLabeling = true;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    userAriaDescribedBy;\n    /** Deals with the selection logic. */\n    _selectionModel;\n    /** Manages keyboard events for options in the panel. */\n    _keyManager;\n    /** Ideal origin for the overlay panel. */\n    _preferredOverlayOrigin;\n    /** Width of the overlay panel. */\n    _overlayWidth;\n    /** `View -> model callback called when value changes` */\n    _onChange = () => { };\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => { };\n    /** ID for the DOM node containing the select's value. */\n    _valueId = this._idGenerator.getId('mat-select-value-');\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy;\n    _overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    _focused = false;\n    /** A name for this control that can be used by `mat-form-field`. */\n    controlType = 'mat-select';\n    /** Trigger that opens the select. */\n    trigger;\n    /** Panel containing the select options. */\n    panel;\n    /** Overlay pane containing the options. */\n    _overlayDir;\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    panelClass;\n    /** Whether the select is disabled. */\n    disabled = false;\n    /** Whether ripples in the select are disabled. */\n    get disableRipple() {\n        return this._disableRipple();\n    }\n    set disableRipple(value) {\n        this._disableRipple.set(value);\n    }\n    _disableRipple = signal(false, ...(ngDevMode ? [{ debugName: \"_disableRipple\" }] : []));\n    /** Tab index of the select. */\n    tabIndex = 0;\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncParentProperties();\n    }\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    _placeholder;\n    /** Whether the component is required. */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    _required;\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = value;\n    }\n    _multiple = false;\n    /** Whether to center the active option over the trigger. */\n    disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    _value;\n    /** Aria label of the select. */\n    ariaLabel = '';\n    /** Input that can be used to specify the `aria-labelledby` attribute. */\n    ariaLabelledby;\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    sortComparator;\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    _id;\n    /** Whether the select is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    /**\n     * Width of the panel. If set to `auto`, the panel will match the trigger width.\n     * If set to null or an empty string, the panel will grow to match the longest option's text.\n     */\n    panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined'\n        ? this._defaultOptions.panelWidth\n        : 'auto';\n    /**\n     * By default selecting an option with a `null` or `undefined` value will reset the select's\n     * value. Enable this option if the reset behavior doesn't match your requirements and instead\n     * the nullable options should become selected. The value of this input can be controlled app-wide\n     * using the `MAT_SELECT_CONFIG` injection token.\n     */\n    canSelectNullableOptions = this._defaultOptions?.canSelectNullableOptions ?? false;\n    /** Combined stream of all of the child options' change events. */\n    optionSelectionChanges = defer(() => {\n        const options = this.options;\n        if (options) {\n            return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n        }\n        return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n    });\n    /** Event emitted when the select panel has been toggled. */\n    openedChange = new EventEmitter();\n    /** Event emitted when the select has been opened. */\n    _openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n    /** Event emitted when the select has been closed. */\n    _closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n    /** Event emitted when the selected value has been changed by the user. */\n    selectionChange = new EventEmitter();\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    valueChange = new EventEmitter();\n    constructor() {\n        const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n        const parentForm = inject(NgForm, { optional: true });\n        const parentFormGroup = inject(FormGroupDirective, { optional: true });\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if (this._defaultOptions?.typeaheadDebounceInterval != null) {\n            this.typeaheadDebounceInterval = this._defaultOptions.typeaheadDebounceInterval;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n    }\n    ngAfterContentInit() {\n        this._initialized.next();\n        this._initialized.complete();\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by the input, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled'] || changes['userAriaDescribedBy']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._cleanupDetach?.();\n        this._keyManager?.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n        this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (!this._canOpen()) {\n            return;\n        }\n        // It's important that we read this as late as possible, because doing so earlier will\n        // return a different element since it's based on queries in the form field which may\n        // not have run yet. Also this needs to be assigned before we measure the overlay width.\n        if (this._parentFormField) {\n            this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n        }\n        this._cleanupDetach?.();\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        this._applyModalPanelOwnership();\n        this._panelOpen = true;\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n        this._overlayDir.attachOverlay();\n        this._keyManager.withHorizontalOrientation(null);\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Required for the MDC form field to pick up when the overlay has been opened.\n        this.stateChanges.next();\n        // Simulate the animation event before we moved away from `@angular/animations`.\n        Promise.resolve().then(() => this.openedChange.emit(true));\n    }\n    /**\n     * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n     * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n     * panel. Track the modal we have changed so we can undo the changes on destroy.\n     */\n    _trackedModal = null;\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        if (!modal) {\n            // Most commonly, the autocomplete trigger is not inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        if (this._trackedModal) {\n            removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        }\n        addAriaReferencedId(modal, 'aria-owns', panelId);\n        this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n        if (!this._trackedModal) {\n            // Most commonly, the autocomplete trigger is not used inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._exitAndDetach();\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n            // Required for the MDC form field to pick up when the overlay has been closed.\n            this.stateChanges.next();\n            // Simulate the animation event before we moved away from `@angular/animations`.\n            Promise.resolve().then(() => this.openedChange.emit(false));\n        }\n    }\n    /** Triggers the exit animation and detaches the overlay at the end. */\n    _exitAndDetach() {\n        if (this._animationsDisabled || !this.panel) {\n            this._detachOverlay();\n            return;\n        }\n        this._cleanupDetach?.();\n        this._cleanupDetach = () => {\n            cleanupEvent();\n            clearTimeout(exitFallbackTimer);\n            this._cleanupDetach = undefined;\n        };\n        const panel = this.panel.nativeElement;\n        const cleanupEvent = this._renderer.listen(panel, 'animationend', (event) => {\n            if (event.animationName === '_mat-select-exit') {\n                this._cleanupDetach?.();\n                this._detachOverlay();\n            }\n        });\n        // Since closing the overlay depends on the animation, we have a fallback in case the panel\n        // doesn't animate. This can happen in some internal tests that do `* {animation: none}`.\n        const exitFallbackTimer = setTimeout(() => {\n            this._cleanupDetach?.();\n            this._detachOverlay();\n        }, 200);\n        panel.classList.add('mat-select-panel-exit');\n    }\n    /** Detaches the current overlay directive. */\n    _detachOverlay() {\n        this._overlayDir.detachOverlay();\n        // Some of the overlay detachment logic depends on change detection.\n        // Mark for check to ensure that things get picked up in a timely manner.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Refreshes the error state of the select. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /** Handles keyboard events coming from the overlay. */\n    _handleOverlayKeydown(event) {\n        // TODO(crisbeto): prior to #30363 this was being handled inside the overlay directive, but we\n        // need control over the animation timing so we do it manually. We should remove the `keydown`\n        // listener from `.mat-mdc-select-panel` and handle all the events here. That may cause\n        // further test breakages so it's left for a follow-up.\n        if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n            this.close();\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        this._keyManager?.cancelTypeahead();\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this.options.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return ((option.value != null || this.canSelectNullableOptions) &&\n                    this._compareWith(option.value, value));\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n    // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n    // recommendation.\n    //\n    // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n    // makes a few exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    //\n    // The user can focus disabled options using the keyboard, but the user cannot click disabled\n    // options.\n    _skipPredicate = (option) => {\n        if (this.panelOpen) {\n            // Support keyboard focusing disabled options in an ARIA listbox.\n            return false;\n        }\n        // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n        // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n        // closed.\n        return option.disabled;\n    };\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n        if (this.panelWidth === 'auto') {\n            const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin\n                ? preferredOrigin.elementRef\n                : preferredOrigin || this._elementRef;\n            return refToMeasure.nativeElement.getBoundingClientRect().width;\n        }\n        return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n        if (this.options) {\n            for (const option of this.options) {\n                option._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this.typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withPageUpDown()\n            .withAllowedModifierKeys(['shiftKey'])\n            .skipPredicate(this._skipPredicate);\n        this._keyManager.tabOut.subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n            // be the result of an expression changing. We have to use `detectChanges` in order\n            // to avoid \"changed after checked\" errors (see #14793).\n            this._changeDetectorRef.detectChanges();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (!this.canSelectNullableOptions && option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n                // because it activates the first option that passes the skip predicate, rather than the\n                // first *enabled* option.\n                let firstEnabledOptionIndex = -1;\n                for (let index = 0; index < this.options.length; index++) {\n                    const option = this.options.get(index);\n                    if (!option.disabled) {\n                        firstEnabledOptionIndex = index;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(firstEnabledOptionIndex);\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        return !this._panelOpen && !this.disabled && this.options?.length > 0 && !!this._overlayDir;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId() || null;\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        let value = this._parentFormField?.getLabelId() || '';\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        // The value should not be used for the trigger's aria-labelledby,\n        // but this currently \"breaks\" accessibility tests since they complain\n        // there is no aria-labelledby. This is because they are not setting an\n        // appropriate label on the form field or select.\n        // TODO: remove this conditional after fixing clients by ensuring their\n        // selects have a label applied.\n        if (!value) {\n            value = this._valueId;\n        }\n        return value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        const element = this._elementRef.nativeElement;\n        const existingDescribedBy = element.getAttribute('aria-describedby');\n        return existingDescribedBy?.split(' ') || [];\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        // Since the panel doesn't overlap the trigger, we\n        // want the label to only float when there's a value.\n        return this.panelOpen || !this.empty || (this.focused && !!this.placeholder);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelect, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatSelect, isStandalone: true, selector: \"mat-select\", inputs: { userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], panelClass: \"panelClass\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], multiple: [\"multiple\", \"multiple\", booleanAttribute], disableOptionCentering: [\"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute], compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: [\"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute], sortComparator: \"sortComparator\", id: \"id\", panelWidth: \"panelWidth\", canSelectNullableOptions: [\"canSelectNullableOptions\", \"canSelectNullableOptions\", booleanAttribute] }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, host: { attributes: { \"role\": \"combobox\", \"aria-haspopup\": \"listbox\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-mdc-select-disabled\": \"disabled\", \"class.mat-mdc-select-invalid\": \"errorState\", \"class.mat-mdc-select-required\": \"required\", \"class.mat-mdc-select-empty\": \"empty\", \"class.mat-mdc-select-multiple\": \"multiple\" }, classAttribute: \"mat-mdc-select\" }, providers: [\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n        ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], exportAs: [\"matSelect\"], usesOnChanges: true, ngImport: i0, template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayDisableClose]=\\\"true\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  [cdkConnectedOverlayFlexibleDimensions]=\\\"true\\\"\\n  (detach)=\\\"close()\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (overlayKeydown)=\\\"_handleOverlayKeydown($event)\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [class.mat-select-panel-animations-enabled]=\\\"!_animationsDisabled\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:relative;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\\n\"], dependencies: [{ kind: \"directive\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"directive\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-haspopup': 'listbox',\n                        'class': 'mat-mdc-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-mdc-select-disabled]': 'disabled',\n                        '[class.mat-mdc-select-invalid]': 'errorState',\n                        '[class.mat-mdc-select-required]': 'required',\n                        '[class.mat-mdc-select-empty]': 'empty',\n                        '[class.mat-mdc-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], imports: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass], template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayDisableClose]=\\\"true\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  [cdkConnectedOverlayFlexibleDimensions]=\\\"true\\\"\\n  (detach)=\\\"close()\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (overlayKeydown)=\\\"_handleOverlayKeydown($event)\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [class.mat-select-panel-animations-enabled]=\\\"!_animationsDisabled\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:relative;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableOptionCentering: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], canSelectNullableOptions: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatSelectTrigger, isStandalone: true, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n\nclass MatSelectModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelectModule, imports: [OverlayModule, MatOptionModule, MatCommonModule, MatSelect, MatSelectTrigger], exports: [CdkScrollableModule,\n            MatFormFieldModule,\n            MatSelect,\n            MatSelectTrigger,\n            MatOptionModule,\n            MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule,\n            MatFormFieldModule,\n            MatOptionModule,\n            MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatOptionModule, MatCommonModule, MatSelect, MatSelectTrigger],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger };\n\n","export { MatOptgroup, MatOption } from './option.mjs';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from './form-field2.mjs';\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger } from './select-module.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/keycodes';\nimport '@angular/core';\nimport 'rxjs';\nimport './ripple.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/private';\nimport './animation.mjs';\nimport '@angular/cdk/layout';\nimport './pseudo-checkbox.mjs';\nimport './structural-styles.mjs';\nimport '@angular/cdk/bidi';\nimport '@angular/common';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport '@angular/cdk/overlay';\nimport '@angular/cdk/scrolling';\nimport '@angular/cdk/collections';\nimport '@angular/forms';\nimport './error-options.mjs';\nimport './error-state.mjs';\nimport './option-module.mjs';\nimport './ripple-module.mjs';\nimport './common-module.mjs';\nimport './pseudo-checkbox-module.mjs';\nimport './form-field-module.mjs';\nimport '@angular/cdk/observers';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matSelectAnimations = {\n    // Represents\n    // trigger('transformPanel', [\n    //   state(\n    //     'void',\n    //     style({\n    //       opacity: 0,\n    //       transform: 'scale(1, 0.8)',\n    //     }),\n    //   ),\n    //   transition(\n    //     'void => showing',\n    //     animate(\n    //       '120ms cubic-bezier(0, 0, 0.2, 1)',\n    //       style({\n    //         opacity: 1,\n    //         transform: 'scale(1, 1)',\n    //       }),\n    //     ),\n    //   ),\n    //   transition('* => void', animate('100ms linear', style({opacity: 0}))),\n    // ])\n    /** This animation transforms the select's overlay panel on and off the page. */\n    transformPanel: {\n        type: 7,\n        name: 'transformPanel',\n        definitions: [\n            {\n                type: 0,\n                name: 'void',\n                styles: {\n                    type: 6,\n                    styles: { opacity: 0, transform: 'scale(1, 0.8)' },\n                    offset: null,\n                },\n            },\n            {\n                type: 1,\n                expr: 'void => showing',\n                animation: {\n                    type: 4,\n                    styles: {\n                        type: 6,\n                        styles: { opacity: 1, transform: 'scale(1, 1)' },\n                        offset: null,\n                    },\n                    timings: '120ms cubic-bezier(0, 0, 0.2, 1)',\n                },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: '* => void',\n                animation: {\n                    type: 4,\n                    styles: { type: 6, styles: { opacity: 0 }, offset: null },\n                    timings: '100ms linear',\n                },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { matSelectAnimations };\n\n","import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, HOST_TAG_NAME, NgZone, DOCUMENT, EventEmitter, Injector, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { MatRippleLoader } from './ripple-loader.mjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from './error-options.mjs';\nimport { _ErrorStateTracker } from './error-state.mjs';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from './form-field2.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatRippleModule } from './ripple-module.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/common';\nimport '@angular/cdk/observers/private';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n    providedIn: 'root',\n    factory: () => ({\n        separatorKeyCodes: [ENTER],\n    }),\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipEdit`. It serves as\n * alternative token to the actual `MatChipEdit` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_EDIT = new InjectionToken('MatChipEdit');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n    _elementRef = inject(ElementRef);\n    _parentChip = inject(MAT_CHIP);\n    /** Whether the action is interactive. */\n    isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n    _isPrimary = true;\n    /** Whether this is the leading action in the chip. */\n    _isLeading = false; // TODO(adolgachev): consolidate usage to secondary css class\n    /** Whether the action is disabled. */\n    get disabled() {\n        return this._disabled || this._parentChip?.disabled || false;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Tab index of the action. */\n    tabIndex = -1;\n    /**\n     * Private API to allow focusing this chip when it is disabled.\n     */\n    _allowFocusWhenDisabled = false;\n    /**\n     * Determine the value of the disabled attribute for this chip action.\n     */\n    _getDisabledAttribute() {\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n        // string to indicate that disabled attribute should be included.\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n    }\n    /**\n     * Determine the value of the tabindex attribute for this chip action.\n     */\n    _getTabindex() {\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\n            ? null\n            : this.tabIndex.toString();\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\n            this._elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this.disabled &&\n            this.isInteractive &&\n            this._isPrimary &&\n            !this._parentChip._isEditing) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipAction, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipAction, isStandalone: true, selector: \"[matChipAction]\", inputs: { isInteractive: \"isInteractive\", disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? -1 : numberAttribute(value))], _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\", \"class.mdc-evolution-chip__action--secondary\": \"!_isPrimary\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary && !_isLeading\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipAction]',\n                    host: {\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n                        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n                        '[class.mdc-evolution-chip__action--secondary]': '!_isPrimary',\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary && !_isLeading',\n                        '[attr.tabindex]': '_getTabindex()',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '(click)': '_handleClick($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { isInteractive: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? -1 : numberAttribute(value)),\n                    }]\n            }], _allowFocusWhenDisabled: [{\n                type: Input\n            }] } });\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipAvatar, isStandalone: true, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\n                    host: {\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'img',\n                    },\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\n                }]\n        }] });\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n    /**\n     * MDC considers all trailing actions as a remove icon,\n     * but we support non-interactive trailing icons.\n     */\n    isInteractive = false;\n    _isPrimary = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipTrailingIcon, isStandalone: true, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                    host: {\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'aria-hidden': 'true',\n                    },\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\n                }]\n        }] });\n/**\n * Directive to edit the parent chip when the leading action icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"edit\" icon\n * available at https://material.io/icons/#ic_edit.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <button matChipEdit aria-label=\"Edit\">\n *     <mat-icon>edit</mat-icon>\n *   </button>\n * </mat-chip>\n * ```\n */\nclass MatChipEdit extends MatChipAction {\n    _isPrimary = false;\n    _isLeading = true;\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip._edit();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip._edit();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipEdit, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipEdit, isStandalone: true, selector: \"[matChipEdit]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_EDIT, useExisting: MatChipEdit }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipEdit, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipEdit]',\n                    host: {\n                        'class': 'mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_EDIT, useExisting: MatChipEdit }],\n                }]\n        }] });\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n    _isPrimary = false;\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipRemove, isStandalone: true, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipRemove, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipRemove]',\n                    host: {\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\n                }]\n        }] });\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _tagName = inject(HOST_TAG_NAME);\n    _ngZone = inject(NgZone);\n    _focusMonitor = inject(FocusMonitor);\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true,\n    });\n    _document = inject(DOCUMENT);\n    /** Emits when the chip is focused. */\n    _onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n    _onBlur = new Subject();\n    /** Whether this chip is a basic (unstyled) chip. */\n    _isBasicChip;\n    /** Role for the root of the chip. */\n    role = null;\n    /** Whether the chip has focus. */\n    _hasFocusInternal = false;\n    /** Whether moving focus into the chip is pending. */\n    _pendingFocus;\n    /** Subscription to changes in the chip's actions. */\n    _actionChanges;\n    /** Whether animations for the chip are enabled. */\n    _animationsDisabled = _animationsDisabled();\n    /** All avatars present in the chip. */\n    _allLeadingIcons;\n    /** All trailing icons present in the chip. */\n    _allTrailingIcons;\n    /** All edit icons present in the chip. */\n    _allEditIcons;\n    /** All remove icons present in the chip. */\n    _allRemoveIcons;\n    _hasFocus() {\n        return this._hasFocusInternal;\n    }\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n    id = inject(_IdGenerator).getId('mat-mdc-chip-');\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA label for the content of the chip. */\n    ariaLabel = null;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA description for the content of the chip. */\n    ariaDescription = null;\n    /** Whether the chip list is disabled. */\n    _chipListDisabled = false;\n    /** Whether the chip was focused when it was removed. */\n    _hadFocusOnRemove = false;\n    _textElement;\n    /**\n     * The value of the chip. Defaults to the content inside\n     * the `mat-mdc-chip-action-label` element.\n     */\n    get value() {\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n    }\n    set value(value) {\n        this._value = value;\n    }\n    _value;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the chip. This API is supported in M2 themes only, it has no\n     * effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/chips/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    removable = true;\n    /**\n     * Colors the chip for emphasis as if it were selected.\n     */\n    highlighted = false;\n    /** Whether the ripple effect is disabled or not. */\n    disableRipple = false;\n    /** Whether the chip is disabled. */\n    get disabled() {\n        return this._disabled || this._chipListDisabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Emitted when a chip is to be removed. */\n    removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n    destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n    basicChipAttrName = 'mat-basic-chip';\n    /** The chip's leading icon. */\n    leadingIcon;\n    /** The chip's leading edit icon. */\n    editIcon;\n    /** The chip's trailing icon. */\n    trailingIcon;\n    /** The chip's trailing remove icon. */\n    removeIcon;\n    /** Action receiving the primary set of user interactions. */\n    primaryAction;\n    /**\n     * Handles the lazy creation of the MatChip ripple.\n     * Used to improve initial load time of large applications.\n     */\n    _rippleLoader = inject(MatRippleLoader);\n    _injector = inject(Injector);\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_StructuralStylesLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        this._monitorFocus();\n        this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n            className: 'mat-mdc-chip-ripple',\n            disabled: this._isRippleDisabled(),\n        });\n    }\n    ngOnInit() {\n        // This check needs to happen in `ngOnInit` so the overridden value of\n        // `basicChipAttrName` coming from base classes can be picked up.\n        this._isBasicChip =\n            this._elementRef.nativeElement.hasAttribute(this.basicChipAttrName) ||\n                this._tagName.toLowerCase() === this.basicChipAttrName;\n    }\n    ngAfterViewInit() {\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n        if (this._pendingFocus) {\n            this._pendingFocus = false;\n            this.focus();\n        }\n    }\n    ngAfterContentInit() {\n        // Since the styling depends on the presence of some\n        // actions, we have to mark for check on changes.\n        this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allEditIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    ngDoCheck() {\n        this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n        this._actionChanges?.unsubscribe();\n        this.destroyed.emit({ chip: this });\n        this.destroyed.complete();\n    }\n    /**\n     * Allows for programmatic removal of the chip.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this._hadFocusOnRemove = this._hasFocus();\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Whether or not the ripple should be disabled. */\n    _isRippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._animationsDisabled ||\n            this._isBasicChip ||\n            !this._hasInteractiveActions() ||\n            !!this._globalRippleOptions?.disabled);\n    }\n    /** Returns whether the chip has a trailing icon. */\n    _hasTrailingIcon() {\n        return !!(this.trailingIcon || this.removeIcon);\n    }\n    /** Handles keyboard events on the chip. */\n    _handleKeydown(event) {\n        // Ignore backspace events where the user is holding down the key\n        // so that we don't accidentally remove too many chips.\n        if ((event.keyCode === BACKSPACE && !event.repeat) || event.keyCode === DELETE) {\n            event.preventDefault();\n            this.remove();\n        }\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this.disabled) {\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\n            // Queue the method to be called again on init.\n            if (this.primaryAction) {\n                this.primaryAction.focus();\n            }\n            else {\n                this._pendingFocus = true;\n            }\n        }\n    }\n    /** Gets the action that contains a specific target node. */\n    _getSourceAction(target) {\n        return this._getActions().find(action => {\n            const element = action._elementRef.nativeElement;\n            return element === target || element.contains(target);\n        });\n    }\n    /** Gets all of the actions within the chip. */\n    _getActions() {\n        const result = [];\n        if (this.editIcon) {\n            result.push(this.editIcon);\n        }\n        if (this.primaryAction) {\n            result.push(this.primaryAction);\n        }\n        if (this.removeIcon) {\n            result.push(this.removeIcon);\n        }\n        if (this.trailingIcon) {\n            result.push(this.trailingIcon);\n        }\n        return result;\n    }\n    /** Handles interactions with the primary action of the chip. */\n    _handlePrimaryActionInteraction() {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Returns whether the chip has any interactive actions. */\n    _hasInteractiveActions() {\n        return this._getActions().some(a => a.isInteractive);\n    }\n    /** Handles interactions with the edit action of the chip. */\n    _edit(event) {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Starts the focus monitoring process on the chip. */\n    _monitorFocus() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const hasFocus = origin !== null;\n            if (hasFocus !== this._hasFocusInternal) {\n                this._hasFocusInternal = hasFocus;\n                if (hasFocus) {\n                    this._onFocus.next({ chip: this });\n                }\n                else {\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n                    // that moves focus to the next item. To work around the issue, we defer marking the chip\n                    // as not focused until after the next render.\n                    this._changeDetectorRef.markForCheck();\n                    setTimeout(() => this._ngZone.run(() => this._onBlur.next({ chip: this })));\n                }\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChip, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatChip, isStandalone: true, selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\", inputs: { role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaDescription: [\"aria-description\", \"ariaDescription\"], value: \"value\", color: \"color\", removable: [\"removable\", \"removable\", booleanAttribute], highlighted: [\"highlighted\", \"highlighted\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\", \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"editIcon\", first: true, predicate: MAT_CHIP_EDIT, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }, { propertyName: \"_allLeadingIcons\", predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"_allTrailingIcons\", predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"_allEditIcons\", predicate: MAT_CHIP_EDIT, descendants: true }, { propertyName: \"_allRemoveIcons\", predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChip, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]', exportAs: 'matChip', host: {\n                        'class': 'mat-mdc-chip',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[id]': 'id',\n                        '[attr.role]': 'role',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { role: [{\n                type: Input\n            }], _allLeadingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_AVATAR, { descendants: true }]\n            }], _allTrailingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_TRAILING_ICON, { descendants: true }]\n            }], _allEditIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_EDIT, { descendants: true }]\n            }], _allRemoveIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_REMOVE, { descendants: true }]\n            }], id: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaDescription: [{\n                type: Input,\n                args: ['aria-description']\n            }], value: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], removable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], highlighted: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], removed: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], leadingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_AVATAR]\n            }], editIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_EDIT]\n            }], trailingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_TRAILING_ICON]\n            }], removeIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_REMOVE]\n            }], primaryAction: [{\n                type: ViewChild,\n                args: [MatChipAction]\n            }] } });\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n    source;\n    selected;\n    isUserInput;\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n    /** Default chip options. */\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n    /** Whether the chip list is selectable. */\n    chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n    _chipListMultiple = false;\n    /** Whether the chip list hides single-selection indicator. */\n    _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /**\n     * Whether or not the chip is selectable.\n     *\n     * When a chip is not selectable, changes to its selected state are always\n     * ignored. By default an option chip is selectable, and it becomes\n     * non-selectable if its parent chip list is not selectable.\n     */\n    get selectable() {\n        return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    _selectable = true;\n    /** Whether the chip is selected. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._setSelectedState(value, false, true);\n    }\n    _selected = false;\n    /**\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n     * interaction patterns.\n     *\n     * From [WAI ARIA Listbox authoring practices guide](\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n     *  set to true. All options that are selectable but not selected have either aria-selected or\n     *  aria-checked set to false.\"\n     *\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n     * VoiceOver reading every option as \"selected\" (#25736).\n     */\n    get ariaSelected() {\n        return this.selectable ? this.selected.toString() : null;\n    }\n    /** The unstyled chip selector for this component. */\n    basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n    selectionChange = new EventEmitter();\n    ngOnInit() {\n        super.ngOnInit();\n        this.role = 'presentation';\n    }\n    /** Selects the chip. */\n    select() {\n        this._setSelectedState(true, false, true);\n    }\n    /** Deselects the chip. */\n    deselect() {\n        this._setSelectedState(false, false, true);\n    }\n    /** Selects this chip and emits userInputSelection event */\n    selectViaInteraction() {\n        this._setSelectedState(true, true, true);\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._setSelectedState(!this.selected, isUserInput, true);\n        return this.selected;\n    }\n    _handlePrimaryActionInteraction() {\n        if (!this.disabled) {\n            // Interacting with the primary action implies that the chip already has focus, however\n            // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n            // We work around it by explicitly focusing the primary action of the current chip.\n            this.focus();\n            if (this.selectable) {\n                this.toggleSelected(true);\n            }\n        }\n    }\n    _hasLeadingGraphic() {\n        if (this.leadingIcon) {\n            return true;\n        }\n        // The checkmark graphic communicates selected state for both single-select and multi-select.\n        // Include checkmark in single-select to fix a11y issue where selected state is communicated\n        // visually only using color (#25886).\n        return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n    }\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\n        if (isSelected !== this.selected) {\n            this._selected = isSelected;\n            if (emitEvent) {\n                this.selectionChange.emit({\n                    source: this,\n                    isUserInput,\n                    selected: this.selected,\n                });\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatChipOption, isStandalone: true, selector: \"mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]\", inputs: { selectable: [\"selectable\", \"selectable\", booleanAttribute], selected: [\"selected\", \"selected\", booleanAttribute] }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--filter\": \"!_isBasicChip\", \"class.mdc-evolution-chip--selectable\": \"!_isBasicChip\", \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-graphic\": \"_hasLeadingGraphic()\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option\" }, providers: [\n            { provide: MatChip, useExisting: MatChipOption },\n            { provide: MAT_CHIP, useExisting: MatChipOption },\n        ], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-option',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-selected]': 'selected',\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--selected]': 'selected',\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n                        // starts and removes it once the animation is finished. We don't need to go through all\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\n                        // because they also have an exit animation that we don't care about.\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '[id]': 'id',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipOption },\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], propDecorators: { selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selected: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectionChange: [{\n                type: Output\n            }] } });\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n    _elementRef = inject(ElementRef);\n    _document = inject(DOCUMENT);\n    constructor() { }\n    initialize(initialValue) {\n        this.getNativeElement().focus();\n        this.setValue(initialValue);\n    }\n    getNativeElement() {\n        return this._elementRef.nativeElement;\n    }\n    setValue(value) {\n        this.getNativeElement().textContent = value;\n        this._moveCursorToEndOfInput();\n    }\n    getValue() {\n        return this.getNativeElement().textContent || '';\n    }\n    _moveCursorToEndOfInput() {\n        const range = this._document.createRange();\n        range.selectNodeContents(this.getNativeElement());\n        range.collapse(false);\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipEditInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipEditInput, isStandalone: true, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipEditInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'span[matChipEditInput]',\n                    host: {\n                        'class': 'mat-chip-edit-input',\n                        'role': 'textbox',\n                        'tabindex': '-1',\n                        'contenteditable': 'true',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n    basicChipAttrName = 'mat-basic-chip-row';\n    /**\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n     * while the editing action is being initialized.\n     */\n    _editStartPending = false;\n    editable = false;\n    /** Emitted when the chip is edited. */\n    edited = new EventEmitter();\n    /** The default chip edit input that is used if none is projected into this chip row. */\n    defaultEditInput;\n    /** The projected chip edit input. */\n    contentEditInput;\n    /**\n     * Set on a mousedown when the chip is already focused via mouse or keyboard.\n     *\n     * This allows us to ensure chip is already focused when deciding whether to enter the\n     * edit mode on a subsequent click. Otherwise, the chip appears focused when handling the\n     * first click event.\n     */\n    _alreadyFocused = false;\n    _isEditing = false;\n    constructor() {\n        super();\n        this.role = 'row';\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n            if (this._isEditing && !this._editStartPending) {\n                this._onEditFinish();\n            }\n            this._alreadyFocused = false;\n        });\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        // Sets _alreadyFocused (ahead of click) when chip already has focus.\n        this._ngZone.runOutsideAngular(() => {\n            this._elementRef.nativeElement.addEventListener('mousedown', () => (this._alreadyFocused = this._hasFocus()));\n        });\n    }\n    _hasLeadingActionIcon() {\n        // The leading action (edit) icon is hidden while editing.\n        return !this._isEditing && !!this.editIcon;\n    }\n    _hasTrailingIcon() {\n        // The trailing icon is hidden while editing.\n        return !this._isEditing && super._hasTrailingIcon();\n    }\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n    _handleFocus() {\n        if (!this._isEditing && !this.disabled) {\n            this.focus();\n        }\n    }\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER && !this.disabled) {\n            if (this._isEditing) {\n                event.preventDefault();\n                this._onEditFinish();\n            }\n            else if (this.editable) {\n                this._startEditing(event);\n            }\n        }\n        else if (this._isEditing) {\n            // Stop the event from reaching the chip set in order to avoid navigating.\n            event.stopPropagation();\n        }\n        else {\n            super._handleKeydown(event);\n        }\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.editable && !this._isEditing && this._alreadyFocused) {\n            // Ensure click event not picked up unintentionally by other listeners, as\n            // once editing starts, the source element is detached from DOM.\n            event.preventDefault();\n            event.stopPropagation();\n            this._startEditing(event);\n        }\n    }\n    _handleDoubleclick(event) {\n        if (!this.disabled && this.editable) {\n            this._startEditing(event);\n        }\n    }\n    _edit() {\n        // markForCheck necessary for edit input to be rendered\n        this._changeDetectorRef.markForCheck();\n        this._startEditing();\n    }\n    _startEditing(event) {\n        if (!this.primaryAction ||\n            (this.removeIcon &&\n                !!event &&\n                this._getSourceAction(event.target) === this.removeIcon)) {\n            return;\n        }\n        // The value depends on the DOM so we need to extract it before we flip the flag.\n        const value = this.value;\n        this._isEditing = this._editStartPending = true;\n        // Defer initializing the input until after it has been added to the DOM.\n        afterNextRender(() => {\n            this._getEditInput().initialize(value);\n            // Necessary when using edit icon to prevent edit from aborting\n            setTimeout(() => this._ngZone.run(() => (this._editStartPending = false)));\n        }, { injector: this._injector });\n    }\n    _onEditFinish() {\n        this._isEditing = this._editStartPending = false;\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\n        // return focus to the chip contents.\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\n            this._document.activeElement === this._document.body) {\n            this.primaryAction.focus();\n        }\n    }\n    _isRippleDisabled() {\n        return super._isRippleDisabled() || this._isEditing;\n    }\n    /**\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\n     * two values is guaranteed to be defined.\n     */\n    _getEditInput() {\n        return this.contentEditInput || this.defaultEditInput;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatChipRow, isStandalone: true, selector: \"mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]\", inputs: { editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"click\": \"_handleClick($event)\", \"dblclick\": \"_handleDoubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-leading-action\": \"_hasLeadingActionIcon()\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"disabled ? null : -1\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\n            { provide: MatChip, useExisting: MatChipRow },\n            { provide: MAT_CHIP, useExisting: MatChipRow },\n        ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipRow, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\n                        '[class.mat-mdc-chip-editable]': 'editable',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-leading-action]': '_hasLeadingActionIcon()',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[id]': 'id',\n                        // Has to have a negative tabindex in order to capture\n                        // focus and redirect it to the primary action.\n                        '[attr.tabindex]': 'disabled ? null : -1',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '(focus)': '_handleFocus()',\n                        '(click)': '_handleClick($event)',\n                        '(dblclick)': '_handleDoubleclick($event)',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipRow },\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction, MatChipEditInput], template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { editable: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }], defaultEditInput: [{\n                type: ViewChild,\n                args: [MatChipEditInput]\n            }], contentEditInput: [{\n                type: ContentChild,\n                args: [MatChipEditInput]\n            }] } });\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _dir = inject(Directionality, { optional: true });\n    /** Index of the last destroyed chip that had focus. */\n    _lastDestroyedFocusedChipIndex = null;\n    /** Used to manage focus within the chip list. */\n    _keyManager;\n    /** Subject that emits when the component has been destroyed. */\n    _destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n    _defaultRole = 'presentation';\n    /** Combined stream of all of the child chips' focus events. */\n    get chipFocusChanges() {\n        return this._getChipStream(chip => chip._onFocus);\n    }\n    /** Combined stream of all of the child chips' destroy events. */\n    get chipDestroyedChanges() {\n        return this._getChipStream(chip => chip.destroyed);\n    }\n    /** Combined stream of all of the child chips' remove events. */\n    get chipRemovedChanges() {\n        return this._getChipStream(chip => chip.removed);\n    }\n    /** Whether the chip set is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n    }\n    _disabled = false;\n    /** Whether the chip list contains chips or not. */\n    get empty() {\n        return !this._chips || this._chips.length === 0;\n    }\n    /** The ARIA role applied to the chip set. */\n    get role() {\n        if (this._explicitRole) {\n            return this._explicitRole;\n        }\n        return this.empty ? null : this._defaultRole;\n    }\n    /** Tabindex of the chip set. */\n    tabIndex = 0;\n    set role(value) {\n        this._explicitRole = value;\n    }\n    _explicitRole = null;\n    /** Whether any of the chips inside of this chip-set has focus. */\n    get focused() {\n        return this._hasFocusedChip();\n    }\n    /** The chips that are part of this chip set. */\n    _chips;\n    /** Flat list of all the actions contained within the chips. */\n    _chipActions = new QueryList();\n    constructor() { }\n    ngAfterViewInit() {\n        this._setUpFocusManagement();\n        this._trackChipSetChanges();\n        this._trackDestroyedFocusedChip();\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._chipActions.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this._chips && this._chips.some(chip => chip._hasFocus());\n    }\n    /** Syncs the chip-set's state with the individual chips. */\n    _syncChipsState() {\n        this._chips?.forEach(chip => {\n            chip._chipListDisabled = this._disabled;\n            chip._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n    focus() { }\n    /** Handles keyboard events on the chip set. */\n    _handleKeydown(event) {\n        if (this._originatesFromChip(event)) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this._chips.length;\n    }\n    /**\n     * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the set from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        const previous = this._elementRef.nativeElement.tabIndex;\n        if (previous !== -1) {\n            // Set the tabindex directly on the element, instead of going through\n            // the data binding, because we aren't guaranteed that change detection\n            // will run quickly enough to allow focus to escape.\n            this._elementRef.nativeElement.tabIndex = -1;\n            // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n            // doesn't allow enough time for the focus to escape.\n            setTimeout(() => (this._elementRef.nativeElement.tabIndex = previous));\n        }\n    }\n    /**\n     * Gets a stream of events from all the chips within the set.\n     * The stream will automatically incorporate any newly-added chips.\n     */\n    _getChipStream(mappingFunction) {\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-mdc-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Sets up the chip set's focus management logic. */\n    _setUpFocusManagement() {\n        // Create a flat `QueryList` containing the actions of all of the chips.\n        // This allows us to navigate both within the chip and move to the next/previous\n        // one using the existing `ListKeyManager`.\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\n            const actions = [];\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n            this._chipActions.reset(actions);\n            this._chipActions.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._chipActions)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\n            .withHomeAndEnd()\n            .skipPredicate(action => this._skipPredicate(action));\n        // Keep the manager active index in sync so that navigation picks\n        // up from the current chip if the user clicks into the list directly.\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\n            const action = chip._getSourceAction(document.activeElement);\n            if (action) {\n                this._keyManager.updateActiveItem(action);\n            }\n        });\n        this._dir?.change\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive and disabled actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n        // chips.\n        return !action.isInteractive || action.disabled;\n    }\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n    _trackChipSetChanges() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => this._syncChipsState());\n            }\n            this._redirectDestroyedChipFocus();\n        });\n    }\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\n    _trackDestroyedFocusedChip() {\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\n            // chip. We only save the index here, rather than move the focus immediately, because we want\n            // to wait until the chip is removed from the chip list before focusing the next one. This\n            // allows us to keep focus on the same index if the chip gets swapped out.\n            const chipArray = this._chips.toArray();\n            const chipIndex = chipArray.indexOf(event.chip);\n            const hasFocus = event.chip._hasFocus();\n            const wasLastFocused = event.chip._hadFocusOnRemove &&\n                this._keyManager.activeItem &&\n                event.chip._getActions().includes(this._keyManager.activeItem);\n            // Note that depending on the timing, the chip might've already lost focus by the\n            // time we check this. We need the `wasLastFocused` as a fallback to detect such cases.\n            // In `wasLastFocused` we also need to ensure that the chip actually had focus when it was\n            // deleted so that we don't steal away the user's focus after they've moved on from the chip.\n            const shouldMoveFocus = hasFocus || wasLastFocused;\n            if (this._isValidIndex(chipIndex) && shouldMoveFocus) {\n                this._lastDestroyedFocusedChipIndex = chipIndex;\n            }\n        });\n    }\n    /**\n     * Finds the next appropriate chip to move focus to,\n     * if the currently-focused chip is destroyed.\n     */\n    _redirectDestroyedChipFocus() {\n        if (this._lastDestroyedFocusedChipIndex == null) {\n            return;\n        }\n        if (this._chips.length) {\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n            const chipToFocus = this._chips.toArray()[newIndex];\n            if (chipToFocus.disabled) {\n                // If we're down to one disabled chip, move focus back to the set.\n                if (this._chips.length === 1) {\n                    this.focus();\n                }\n                else {\n                    this._keyManager.setPreviousItemActive();\n                }\n            }\n            else {\n                chipToFocus.focus();\n            }\n        }\n        else {\n            this.focus();\n        }\n        this._lastDestroyedFocusedChipIndex = null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipSet, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipSet, isStandalone: true, selector: \"mat-chip-set\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], role: \"role\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipSet, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-set', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n                        '(keydown)': '_handleKeydown($event)',\n                        '[attr.role]': 'role',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], role: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChip, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n    source;\n    value;\n    constructor(\n    /** Chip listbox that emitted the event. */\n    source, \n    /** Value of the chip listbox when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatChipListbox),\n    multi: true,\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onChange = () => { };\n    // TODO: MDC uses `grid` here\n    _defaultRole = 'listbox';\n    /** Default chip options. */\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = value;\n        this._syncListboxProperties();\n    }\n    _multiple = false;\n    /** The array of selected chips inside the chip listbox. */\n    get selected() {\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n        return this.multiple ? selectedChips : selectedChips[0];\n    }\n    /** Orientation of the chip list. */\n    ariaOrientation = 'horizontal';\n    /**\n     * Whether or not this chip listbox is selectable.\n     *\n     * When a chip listbox is not selectable, the selected states for all\n     * the chips inside the chip listbox are always ignored.\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._syncListboxProperties();\n    }\n    _selectable = true;\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    compareWith = (o1, o2) => o1 === o2;\n    /** Whether this chip listbox is required. */\n    required = false;\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncListboxProperties();\n    }\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return this._getChipStream(chip => chip.selectionChange);\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** The value of the listbox, which is the combined value of the selected chips. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._chips && this._chips.length) {\n            this._setSelectionByValue(value, false);\n        }\n        this._value = value;\n    }\n    _value;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n    change = new EventEmitter();\n    _chips = undefined;\n    ngAfterContentInit() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.value !== undefined) {\n                Promise.resolve().then(() => {\n                    this._setSelectionByValue(this.value, false);\n                });\n            }\n            // Update listbox selectable/multiple properties on chips\n            this._syncListboxProperties();\n        });\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (!this.multiple) {\n                this._chips.forEach(chip => {\n                    if (chip !== event.source) {\n                        chip._setSelectedState(false, false, false);\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /**\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n     * are no selected chips.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        const firstSelectedChip = this._getFirstSelectedChip();\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\n            firstSelectedChip.focus();\n        }\n        else if (this._chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        if (value != null) {\n            this.value = value;\n        }\n        else {\n            this.value = undefined;\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Selects all chips with value. */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n        }\n        else {\n            this._selectValue(value, isUserInput);\n        }\n    }\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n    _blur() {\n        if (!this.disabled) {\n            // Wait to see if focus moves to an individual chip.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    _keydown(event) {\n        if (event.keyCode === TAB) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Marks the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : undefined;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Deselects every chip in the listbox.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput) {\n        const correspondingChip = this._chips.find(chip => {\n            return chip.value != null && this.compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n        }\n        return correspondingChip;\n    }\n    /** Syncs the chip-listbox selection state with the individual chips. */\n    _syncListboxProperties() {\n        if (this._chips) {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._chips.forEach(chip => {\n                    chip._chipListMultiple = this.multiple;\n                    chip.chipListSelectable = this._selectable;\n                    chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n                    chip._changeDetectorRef.markForCheck();\n                });\n            });\n        }\n    }\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n    _getFirstSelectedChip() {\n        if (Array.isArray(this.selected)) {\n            return this.selected.length ? this.selected[0] : undefined;\n        }\n        else {\n            return this.selected;\n        }\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n        // exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        return !action.isInteractive;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipListbox, isStandalone: true, selector: \"mat-chip-listbox\", inputs: { multiple: [\"multiple\", \"multiple\", booleanAttribute], ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: [\"selectable\", \"selectable\", booleanAttribute], compareWith: \"compareWith\", required: [\"required\", \"required\", booleanAttribute], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"(disabled || empty) ? -1 : tabIndex\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipListbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-listbox', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n                        '[attr.aria-required]': 'role ? required : null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-orientation]': 'ariaOrientation',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                        '(keydown)': '_keydown($event)',\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], propDecorators: { multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ariaOrientation: [{\n                type: Input,\n                args: ['aria-orientation']\n            }], selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipOption, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n    source;\n    value;\n    constructor(\n    /** Chip grid that emitted the event. */\n    source, \n    /** Value of the chip grid when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n    ngControl = inject(NgControl, { optional: true, self: true });\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    controlType = 'mat-chip-grid';\n    /** The chip input to add more chips */\n    _chipInput;\n    _defaultRole = 'grid';\n    _errorStateTracker;\n    /**\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\n     */\n    _ariaDescribedbyIds = [];\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onChange = () => { };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput.id;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    _placeholder;\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n    get focused() {\n        return this._chipInput.focused || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    _required;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    _value = [];\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** Emits when the chip grid value has been changed by the user. */\n    change = new EventEmitter();\n    /**\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    valueChange = new EventEmitter();\n    _chips = undefined;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /** Whether the chip grid is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    constructor() {\n        super();\n        const parentForm = inject(NgForm, { optional: true });\n        const parentFormGroup = inject(FormGroupDirective, { optional: true });\n        const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n    }\n    ngAfterContentInit() {\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n        merge(this.chipFocusChanges, this._chips.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.stateChanges.next());\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.stateChanges.complete();\n    }\n    /** Associates an HTML input element with this chip grid. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this.disabled && !this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first chip in this chip grid, or the associated input when there\n     * are no eligible chips.\n     */\n    focus() {\n        if (this.disabled || this._chipInput.focused) {\n            return;\n        }\n        if (!this._chips.length || this._chips.first.disabled) {\n            // Delay until the next tick, because this can cause a \"changed after checked\"\n            // error if the input does something on focus (e.g. opens an autocomplete).\n            Promise.resolve().then(() => this._chipInput.focus());\n        }\n        else {\n            const activeItem = this._keyManager.activeItem;\n            if (activeItem) {\n                activeItem.focus();\n            }\n            else {\n                this._keyManager.setFirstItemActive();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        return this._chipInput?.describedByIds || [];\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        // We must keep this up to date to handle the case where ids are set\n        // before the chip input is registered.\n        this._ariaDescribedbyIds = ids;\n        this._chipInput?.setDescribedByIds(ids);\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The user is responsible for creating the child chips, so we just store the value.\n        this._value = value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /** Refreshes the error state of the chip grid. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n    _blur() {\n        if (!this.disabled) {\n            // Check whether the focus moved to chip input.\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n            // to chip input, do nothing.\n            // Timeout is needed to wait for the focus() event trigger on chip input.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (!this._chipInput.focused) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Handles custom keyboard events. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const activeItem = this._keyManager.activeItem;\n        if (keyCode === TAB) {\n            if (this._chipInput.focused &&\n                hasModifierKey(event, 'shiftKey') &&\n                this._chips.length &&\n                !this._chips.last.disabled) {\n                event.preventDefault();\n                if (activeItem) {\n                    this._keyManager.setActiveItem(activeItem);\n                }\n                else {\n                    this._focusLastChip();\n                }\n            }\n            else {\n                // Use the super method here since it doesn't check for the input\n                // focused state. This allows focus to escape if there's only one\n                // disabled chip left in the list.\n                super._allowFocusEscape();\n            }\n        }\n        else if (!this._chipInput.focused) {\n            // The up and down arrows are supposed to navigate between the individual rows in the grid.\n            // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n            // flag as the active action and moving focus between them ourseles instead of delegating\n            // to the key manager. For more information, see #29359 and:\n            // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n            if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n                const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n                const currentIndex = eligibleActions.indexOf(activeItem);\n                const delta = event.keyCode === UP_ARROW ? -1 : 1;\n                event.preventDefault();\n                if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n                    this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n                }\n            }\n            else {\n                super._handleKeydown(event);\n            }\n        }\n        this.stateChanges.next();\n    }\n    _focusLastChip() {\n        if (this._chips.length) {\n            this._chips.last.focus();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n        this._value = valueToEmit;\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipGrid, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipGrid, isStandalone: true, selector: \"mat-chip-grid\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"attr.tabindex\": \"(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipGrid, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-grid', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n                        '[attr.role]': 'role',\n                        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipRow, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n    _elementRef = inject(ElementRef);\n    /** Whether the control is focused. */\n    focused = false;\n    /** Register input for chip list */\n    get chipGrid() {\n        return this._chipGrid;\n    }\n    set chipGrid(value) {\n        if (value) {\n            this._chipGrid = value;\n            this._chipGrid.registerInput(this);\n        }\n    }\n    _chipGrid;\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    addOnBlur = false;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     */\n    separatorKeyCodes;\n    /** Emitted when a chip is to be added. */\n    chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n    placeholder = '';\n    /** Unique id for the input. */\n    id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Whether the input is readonly. */\n    readonly = false;\n    /** Whether the input should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** Whether the input is empty. */\n    get empty() {\n        return !this.inputElement.value;\n    }\n    /** The native input element to which this directive is attached. */\n    inputElement;\n    constructor() {\n        const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\n        const formField = inject(MAT_FORM_FIELD, { optional: true });\n        this.inputElement = this._elementRef.nativeElement;\n        this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n        this.disabledInteractive = defaultOptions.inputDisabledInteractive ?? false;\n        if (formField) {\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\n        }\n    }\n    ngOnChanges() {\n        this._chipGrid.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.chipEnd.complete();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        if (this.empty && event.keyCode === BACKSPACE) {\n            // Ignore events where the user is holding down backspace\n            // so that we don't accidentally remove too many chips.\n            if (!event.repeat) {\n                this._chipGrid._focusLastChip();\n            }\n            event.preventDefault();\n        }\n        else {\n            this._emitChipEnd(event);\n        }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipGrid.focused) {\n            this._chipGrid._blur();\n        }\n        this._chipGrid.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipGrid.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!event || (this._isSeparatorKey(event) && !event.repeat)) {\n            this.chipEnd.emit({\n                input: this.inputElement,\n                value: this.inputElement.value,\n                chipInput: this,\n            });\n            event?.preventDefault();\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipGrid.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus() {\n        this.inputElement.focus();\n    }\n    /** Clears the input */\n    clear() {\n        this.inputElement.value = '';\n    }\n    /**\n     * Implemented as part of MatChipTextControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        const element = this._elementRef.nativeElement;\n        const existingDescribedBy = element.getAttribute('aria-describedby');\n        return existingDescribedBy?.split(' ') || [];\n    }\n    setDescribedByIds(ids) {\n        const element = this._elementRef.nativeElement;\n        // Set the value directly in the DOM since this binding\n        // is prone to \"changed after checked\" errors.\n        if (ids.length) {\n            element.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            element.removeAttribute('aria-describedby');\n        }\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n    /** Gets the value to set on the `readonly` attribute. */\n    _getReadonlyAttribute() {\n        return this.readonly || (this.disabled && this.disabledInteractive) ? 'true' : null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipInput, isStandalone: true, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute], readonly: [\"readonly\", \"readonly\", booleanAttribute], disabledInteractive: [\"matChipInputDisabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled && !disabledInteractive ? \\\"\\\" : null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.aria-disabled\": \"disabled && disabledInteractive ? \\\"true\\\" : null\", \"attr.readonly\": \"_getReadonlyAttribute()\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matChipInputFor]',\n                    exportAs: 'matChipInput, matChipInputFor',\n                    host: {\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n                        // the MDC chips were landed initially with it.\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n                        '(keydown)': '_keydown($event)',\n                        '(blur)': '_blur()',\n                        '(focus)': '_focus()',\n                        '(input)': '_onInput()',\n                        '[id]': 'id',\n                        '[attr.disabled]': 'disabled && !disabledInteractive ? \"\" : null',\n                        '[attr.placeholder]': 'placeholder || null',\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n                        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n                        '[attr.readonly]': '_getReadonlyAttribute()',\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { chipGrid: [{\n                type: Input,\n                args: ['matChipInputFor']\n            }], addOnBlur: [{\n                type: Input,\n                args: [{ alias: 'matChipInputAddOnBlur', transform: booleanAttribute }]\n            }], separatorKeyCodes: [{\n                type: Input,\n                args: ['matChipInputSeparatorKeyCodes']\n            }], chipEnd: [{\n                type: Output,\n                args: ['matChipInputTokenEnd']\n            }], placeholder: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], readonly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ alias: 'matChipInputDisabledInteractive', transform: booleanAttribute }]\n            }] } });\n\nconst CHIP_DECLARATIONS = [\n    MatChip,\n    MatChipAvatar,\n    MatChipEdit,\n    MatChipEditInput,\n    MatChipGrid,\n    MatChipInput,\n    MatChipListbox,\n    MatChipOption,\n    MatChipRemove,\n    MatChipRow,\n    MatChipSet,\n    MatChipTrailingIcon,\n];\nclass MatChipsModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipsModule, imports: [MatCommonModule, MatRippleModule, MatChipAction, MatChip,\n            MatChipAvatar,\n            MatChipEdit,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon], exports: [MatCommonModule, MatChip,\n            MatChipAvatar,\n            MatChipEdit,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipsModule, providers: [\n            ErrorStateMatcher,\n            {\n                provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                useValue: {\n                    separatorKeyCodes: [ENTER],\n                },\n            },\n        ], imports: [MatCommonModule, MatRippleModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\n                    providers: [\n                        ErrorStateMatcher,\n                        {\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                            useValue: {\n                                separatorKeyCodes: [ENTER],\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_EDIT, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterOutlet, RouterLink, Router } from '@angular/router';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { ButtonDemo } from \"./components/demos/button-demo\";\r\nimport { Header } from \"./header/header\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterOutlet,\r\n    RouterLink,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatChipsModule,\r\n    MatSlideToggleModule,\r\n    Header,\r\n],\r\n  templateUrl: './app.html',\r\n  styleUrl: './app.scss'\r\n})\r\nexport class App {\r\n  showSidenav = false;\r\n  isDarkMode = false;\r\n  constructor(private readonly router: Router) {\r\n    // Check if user previously selected dark mode\r\n    const savedTheme = localStorage.getItem('theme');\r\n    this.isDarkMode = savedTheme === 'dark';\r\n    this.updateTheme();\r\n  }\r\n  \r\n  get currentRoute() {\r\n    return this.router.url.split('?')[0];\r\n  }\r\n\r\n  toggleDarkMode() {\r\n    this.isDarkMode = !this.isDarkMode;\r\n    this.updateTheme();\r\n    localStorage.setItem('theme', this.isDarkMode ? 'dark' : 'light');\r\n  }\r\n\r\n  private updateTheme() {\r\n    const body = document.querySelector('body');\r\n    if (body) {\r\n      if (this.isDarkMode) {\r\n        body.classList.add('dark-mode');\r\n      } else {\r\n        body.classList.remove('dark-mode');\r\n      }\r\n    }\r\n  }\r\n\r\n  navigationItems = [\r\n    /*{ name: 'Button', route: '/button', icon: 'smart_button' },\r\n    { name: 'Card', route: '/card', icon: 'view_agenda' },\r\n    { name: 'Chips', route: '/chips', icon: 'data_check' },\r\n    { name: 'Dialog', route: '/dialog', icon: 'open_in_new' },\r\n    { name: 'Menu', route: '/menu', icon: 'menu' },*/\r\n    { name: 'Botstudio', route: '/botstudio', icon: 'smart_toy' },\r\n    { name: 'Inputs', route: '/inputs', icon: 'input' }\r\n\r\n  ];\r\n\r\n  toggleSidenav() {\r\n    this.showSidenav = !this.showSidenav;\r\n  }\r\n}\r\n","import { provideZonelessChangeDetection } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { App } from './app';\r\n\r\ndescribe('App', () => {\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [App],\r\n      providers: [provideZonelessChangeDetection()]\r\n    }).compileComponents();\r\n  });\r\n\r\n  it('should create the app', () => {\r\n    const fixture = TestBed.createComponent(App);\r\n    const app = fixture.componentInstance;\r\n    expect(app).toBeTruthy();\r\n  });\r\n\r\n  it('should render title', () => {\r\n    const fixture = TestBed.createComponent(App);\r\n    fixture.detectChanges();\r\n    const compiled = fixture.nativeElement as HTMLElement;\r\n    expect(compiled.querySelector('h1')?.textContent).toContain('Hello, material-projekt');\r\n  });\r\n});\r\n"],"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","names":["app_default","init_app","last","match","res","commands","noMatch","node","map","tree","canActivate","s","input","from","document","EventType","NavigationCancellationCode","NavigationSkippedCode","t","c","contexts","e","_ViewRepeaterOperation","from","document","window","RippleState","VERSION","acc","FormControl","input","defaults","init_private","init_private","defaults","input","document","_animationsDisabled","App","init_app"],"x_google_ignoreList":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}